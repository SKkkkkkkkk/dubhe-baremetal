
/******************************************************************
 *        CADENCE                    Copyright (c) 2001-2022      *
 *                                   Cadence Design Systems, Inc. *
 *                                   All rights reserved.         *
 *                                                                *
 *  This work may not be copied, modified, re-published,          *
 *  uploaded, executed, or distributed in any way, in any medium, *
 *  whether in whole or in part, without prior written permission *
 *  from Cadence Design Systems, Inc.                             *
 ******************************************************************
 ******************************************************************
 *                                                                 
 *   Module:         define.h
 *   Date:           Tue Aug  9 19:04:42 PDT 2022
 *   Documentation:  Configuration header
 *   Info:           
 ******************************************************************
 ******************************************************************/

/*****************************************************************
 * WARNING:  This file was automatically generated.  Manual
 * editing may result in undetermined behavior, and may be in
 * violation of the Denali Support Agreement.
 *****************************************************************/
// REL: seehi.chengdu.sh100-LPDDR4__20220809 Commit ID: 2ddadd2cea5793adea25ae6124a590291c6640e5

// timescale 10ps/1ps

#define ACELITE_PARITY_ERR_BIT         9                    // 
#define ACT_ROW_WIDTH                  17                   // 
#define ADDITIVE_LAT_WIDTH             1                    // 
#define ADDR_CMP_EN_OFFSET             8                    // 
#define ADDR_CMP_EN_WIDTH              1                    // 
#define ADDR_COLLISION_MPM_DIS_OFFSET  16                   // 
#define ADDR_COLLISION_MPM_DIS_WIDTH   1                    // 
#define ADDR_PARITY_ERR_BIT            1                    // 
#define ADDR_RANGE_CHECK_PARITY_ERR_BIT 8                    // 
#define ADDR_RANGE_START               14                   // 
#define ADDR_SPACE_OFFSET              24                   // 
#define ADDR_SPACE_WIDTH               6                    // 
#define ADDRESS_P                      2                    // Start position of address in command queue register
#define ADDRESS_WIDTH                  24                   // width of address bus inside the controller
#define AGE_COUNT_OFFSET               24                   // 
#define AGE_COUNT_WIDTH                8                    // 
#define AGE_P                          217                  // Start position of age count in command queue register
#define AGEWIDTH                       8                    // Width of the age count for a transaction
#define ALLOCATION_CNT_WIDTH           5                    // 
#define AP_ADDR                        64                   // 
#define AP_BIT                         5                    // 
#define AP_OFFSET                      8                    // 
#define AP_WIDTH                       1                    // 
#define APB_ADDRESS_WIDTH              32                   // 
#define APB_CLK_CYC                    5.0 * TSCALE        // 
#define APB_NORESP_TIMEOUT_VALUE       2048                 // 
#define APB_NORESP_TIMEOUT_VALUE_WIDTH 12                   // 
#define APREBIT_CS_WIDTH               5                    // APREBIT_WIDTH only
#define APREBIT_OFFSET                 16                   // 
#define APREBIT_WIDTH                  5                    // 
#define ARB_CMD_Q_THRESHOLD_OFFSET     0                    // 
#define ARB_CMD_Q_THRESHOLD_WIDTH      5                    // 
#define AREF_CMD_MAX_PER_TREFI_OFFSET  16                   // 
#define AREF_CMD_MAX_PER_TREFI_WIDTH   4                    // 
#define AREF_HIGH_THRESHOLD_OFFSET     24                   // 
#define AREF_HIGH_THRESHOLD_WIDTH      5                    // 
#define AREF_MAX_CMD_QUE               32                   // 
#define AREF_MAX_CREDIT_OFFSET         8                    // 
#define AREF_MAX_CREDIT_WIDTH          5                    // 
#define AREF_MAX_DEFICIT_OFFSET        0                    // 
#define AREF_MAX_DEFICIT_TIMEOUT_BIT   7                    // 
#define AREF_MAX_DEFICIT_WIDTH         5                    // 
#define AREF_NORM_THRESHOLD_OFFSET     16                   // 
#define AREF_NORM_THRESHOLD_WIDTH      5                    // 
#define AREF_NULL_PEND_EXT_REQ_OFFSET  24                   // 
#define AREF_NULL_PEND_EXT_REQ_WIDTH   1                    // 
#define AREF_PBR_CONT_DIS_THRESHOLD_OFFSET 0                    // 
#define AREF_PBR_CONT_DIS_THRESHOLD_WIDTH 5                    // 
#define AREF_PBR_CONT_EN_THRESHOLD_OFFSET 24                   // 
#define AREF_PBR_CONT_EN_THRESHOLD_WIDTH 5                    // 
#define AREF_STATUS_OFFSET             24                   // 
#define AREF_STATUS_WIDTH              1                    // 
#define AREF_SW_ACK_OFFSET             0                    // 
#define AREF_SW_ACK_WIDTH              1                    // 
#define AREFRESH_ADDR                  69                   // 
#define AREFRESH_OFFSET                16                   // 
#define AREFRESH_WIDTH                 1                    // 
#define ASYNC_CDC_STAGES_OFFSET        0                    // 
#define ASYNC_CDC_STAGES_WIDTH         8                    // 
#define ASYNCHRONOUS_RESET             1                    // 
#define AUTO_MR_DATA_WIDTH             16                   // 
#define AUTO_TEMPCHK_VAL_0_OFFSET      8                    // 
#define AUTO_TEMPCHK_VAL_0_WIDTH       16                   // 
#define AUTO_TEMPCHK_VAL_1_OFFSET      0                    // 
#define AUTO_TEMPCHK_VAL_1_WIDTH       16                   // 
#define AUTO_TEMPCHK_VAL_WIDTH         16                   // 
#define AXI0_ADDR_WIDTH                33                   // 
#define AXI0_ADDRESS_RANGE_ENABLE_OFFSET 24                   // 
#define AXI0_ADDRESS_RANGE_ENABLE_WIDTH 1                    // 
#define AXI0_ALL_STROBES_USED_ENABLE_OFFSET 24                   // 
#define AXI0_ALL_STROBES_USED_ENABLE_WIDTH 1                    // 
#define AXI0_BDW_OFFSET                8                    // 
#define AXI0_BDW_OVFLOW_OFFSET         16                   // 
#define AXI0_BDW_OVFLOW_WIDTH          1                    // 
#define AXI0_BDW_WIDTH                 7                    // 
#define AXI0_CFG_PRT_DATAIFO_SRAM_WIDTH 173                  // 
#define AXI0_CFG_PRT_DATIFO_AGR_WIDTH  173                  // 
#define AXI0_CFG_PRT_RDFIFO_WIDTH      168                  // 
#define AXI0_CMDFIFO_DEPTH             8                    // 
#define AXI0_CMDFIFO_DEPTH_WIDTH       3                    // 
#define AXI0_CMDFIFO_LOG2_DEPTH_OFFSET 8                    // 
#define AXI0_CMDFIFO_LOG2_DEPTH_WIDTH  8                    // 
#define AXI0_CMDFIFO_PTR_WIDTH         AXI0_CMDFIFO_LOG2_DEPTH + 1 // 
#define AXI0_CMDFIFO_WIDTH             85                   // 
#define AXI0_CURRENT_BDW_ADDR          852                  // 
#define AXI0_CURRENT_BDW_OFFSET        24                   // 
#define AXI0_CURRENT_BDW_WIDTH         7                    // 
#define AXI0_DB_RESPFIFO_PTR_WIDTH     5                    // 
#define AXI0_DB_RESPFIFO_WIDTH         18                   // 
#define AXI0_DB_SPLIT_TRFIFO_PTR_WIDTH 5                    // 
#define AXI0_DB_SPLIT_TRFIFO_WIDTH     17                   // 
#define AXI0_END_ADDR_0_OFFSET         0                    // 
#define AXI0_END_ADDR_0_WIDTH          19                   // 
#define AXI0_END_ADDR_1_OFFSET         0                    // 
#define AXI0_END_ADDR_1_WIDTH          19                   // 
#define AXI0_END_ADDR_2_OFFSET         0                    // 
#define AXI0_END_ADDR_2_WIDTH          19                   // 
#define AXI0_END_ADDR_3_OFFSET         0                    // 
#define AXI0_END_ADDR_3_WIDTH          19                   // 
#define AXI0_END_ADDR_4_OFFSET         0                    // 
#define AXI0_END_ADDR_4_WIDTH          19                   // 
#define AXI0_END_ADDR_5_OFFSET         0                    // 
#define AXI0_END_ADDR_5_WIDTH          19                   // 
#define AXI0_END_ADDR_6_OFFSET         0                    // 
#define AXI0_END_ADDR_6_WIDTH          19                   // 
#define AXI0_END_ADDR_7_OFFSET         0                    // 
#define AXI0_END_ADDR_7_WIDTH          19                   // 
#define AXI0_END_ADDR_8_OFFSET         0                    // 
#define AXI0_END_ADDR_8_WIDTH          19                   // 
#define AXI0_END_ADDR_9_OFFSET         0                    // 
#define AXI0_END_ADDR_9_WIDTH          19                   // 
#define AXI0_END_ADDR_10_OFFSET        0                    // 
#define AXI0_END_ADDR_10_WIDTH         19                   // 
#define AXI0_END_ADDR_11_OFFSET        0                    // 
#define AXI0_END_ADDR_11_WIDTH         19                   // 
#define AXI0_END_ADDR_12_OFFSET        0                    // 
#define AXI0_END_ADDR_12_WIDTH         19                   // 
#define AXI0_END_ADDR_13_OFFSET        0                    // 
#define AXI0_END_ADDR_13_WIDTH         19                   // 
#define AXI0_END_ADDR_14_OFFSET        0                    // 
#define AXI0_END_ADDR_14_WIDTH         19                   // 
#define AXI0_END_ADDR_15_OFFSET        0                    // 
#define AXI0_END_ADDR_15_WIDTH         19                   // 
#define AXI0_END_RESP                  20                   // 
#define AXI0_END_RESP_BUFFERABLE       16                   // 
#define AXI0_END_RESP_CMD_AVAIL        17                   // 
#define AXI0_END_RESP_COBUF            22                   // 
#define AXI0_END_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI0_END_RESP_EXPECTED_SPLIT_CNT 25                   // 
#define AXI0_END_RESP_ID               0                    // 
#define AXI0_END_RESP_MEM_LASTDATA     19                   // 
#define AXI0_END_RESP_PORT_LASTDATA    18                   // 
#define AXI0_END_RESP_RCV_SPLIT_CNT    30                   // 
#define AXI0_END_RESP_SPLIT_CMD_DONE   24                   // 
#define AXI0_FIXED_PORT_PRIORITY_ENABLE_OFFSET 0                    // 
#define AXI0_FIXED_PORT_PRIORITY_ENABLE_WIDTH 1                    // 
#define AXI0_PORT_COBUFFIFO_DEPTH      AXI0_CMDFIFO_DEPTH + 32 + 2 // 
#define AXI0_PORT_COBUFFIFO_WIDTH      16                   // 
#define AXI0_PORT_RMODW_LEN_WIDTH      11                   // 
#define AXI0_PORT_RMODW_NUM_BEATS      64                   // 
#define AXI0_PORT_SPLIT_BLOCKS_ADDR_WIDTH 12                   // 
#define AXI0_PORT_SPLIT_MAX_NUM_BLOCKS_WIDTH 5                    // 
#define AXI0_PRDINTFIFO_PTR_WIDTH      AXI0_PRDINTFIFO_LOG2_DEPTH + 1 // 
#define AXI0_R_PRIORITY_OFFSET         8                    // 
#define AXI0_R_PRIORITY_WIDTH          3                    // 
#define AXI0_RANGE_PROT_BITS_0_OFFSET  24                   // 
#define AXI0_RANGE_PROT_BITS_0_WIDTH   2                    // 
#define AXI0_RANGE_PROT_BITS_1_OFFSET  24                   // 
#define AXI0_RANGE_PROT_BITS_1_WIDTH   2                    // 
#define AXI0_RANGE_PROT_BITS_2_OFFSET  24                   // 
#define AXI0_RANGE_PROT_BITS_2_WIDTH   2                    // 
#define AXI0_RANGE_PROT_BITS_3_OFFSET  24                   // 
#define AXI0_RANGE_PROT_BITS_3_WIDTH   2                    // 
#define AXI0_RANGE_PROT_BITS_4_OFFSET  24                   // 
#define AXI0_RANGE_PROT_BITS_4_WIDTH   2                    // 
#define AXI0_RANGE_PROT_BITS_5_OFFSET  24                   // 
#define AXI0_RANGE_PROT_BITS_5_WIDTH   2                    // 
#define AXI0_RANGE_PROT_BITS_6_OFFSET  24                   // 
#define AXI0_RANGE_PROT_BITS_6_WIDTH   2                    // 
#define AXI0_RANGE_PROT_BITS_7_OFFSET  24                   // 
#define AXI0_RANGE_PROT_BITS_7_WIDTH   2                    // 
#define AXI0_RANGE_PROT_BITS_8_OFFSET  24                   // 
#define AXI0_RANGE_PROT_BITS_8_WIDTH   2                    // 
#define AXI0_RANGE_PROT_BITS_9_OFFSET  24                   // 
#define AXI0_RANGE_PROT_BITS_9_WIDTH   2                    // 
#define AXI0_RANGE_PROT_BITS_10_OFFSET 24                   // 
#define AXI0_RANGE_PROT_BITS_10_WIDTH  2                    // 
#define AXI0_RANGE_PROT_BITS_11_OFFSET 24                   // 
#define AXI0_RANGE_PROT_BITS_11_WIDTH  2                    // 
#define AXI0_RANGE_PROT_BITS_12_OFFSET 24                   // 
#define AXI0_RANGE_PROT_BITS_12_WIDTH  2                    // 
#define AXI0_RANGE_PROT_BITS_13_OFFSET 24                   // 
#define AXI0_RANGE_PROT_BITS_13_WIDTH  2                    // 
#define AXI0_RANGE_PROT_BITS_14_OFFSET 24                   // 
#define AXI0_RANGE_PROT_BITS_14_WIDTH  2                    // 
#define AXI0_RANGE_PROT_BITS_15_OFFSET 24                   // 
#define AXI0_RANGE_PROT_BITS_15_WIDTH  2                    // 
#define AXI0_RANGE_RID_CHECK_BITS_0_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_1_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_2_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_3_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_4_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_5_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_6_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_7_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_8_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_9_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_10_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_11_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_12_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_13_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_14_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_15_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_OFFSET 0                    // 
#define AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_0_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_1_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_2_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_3_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_4_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_5_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_6_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_7_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_8_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_9_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_10_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_11_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_12_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_13_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_14_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_15_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_OFFSET 16                   // 
#define AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI0_RATE_SEL_WIDTH            4                    // 
#define AXI0_RDFIFO_LOG2_DEPTH_OFFSET  16                   // 
#define AXI0_RDFIFO_LOG2_DEPTH_WIDTH   8                    // 
#define AXI0_RDFIFO_PTR_WIDTH          AXI0_RDFIFO_LOG2_DEPTH + 1 // 
#define AXI0_RDFIFO_WIDTH              168                  // 
#define AXI0_RESP_RCV_SPLIT_CNT_WIDTH  5                    // 
#define AXI0_RESP_STORAGE_DEPTH        16                   // 
#define AXI0_RESP_STORAGE_PTR_WIDTH    4                    // 
#define AXI0_RESP_STORAGE_WIDTH        35                   // 
#define AXI0_RMODWFIFO_PTR_WIDTH       AXI0_CMDFIFO_PTR_WIDTH  // 
#define AXI0_RMODWFIFO_WIDTH           76                   // 
#define AXI0_START_ADDR_0_OFFSET       0                    // 
#define AXI0_START_ADDR_0_WIDTH        19                   // 
#define AXI0_START_ADDR_1_OFFSET       0                    // 
#define AXI0_START_ADDR_1_WIDTH        19                   // 
#define AXI0_START_ADDR_2_OFFSET       0                    // 
#define AXI0_START_ADDR_2_WIDTH        19                   // 
#define AXI0_START_ADDR_3_OFFSET       0                    // 
#define AXI0_START_ADDR_3_WIDTH        19                   // 
#define AXI0_START_ADDR_4_OFFSET       0                    // 
#define AXI0_START_ADDR_4_WIDTH        19                   // 
#define AXI0_START_ADDR_5_OFFSET       0                    // 
#define AXI0_START_ADDR_5_WIDTH        19                   // 
#define AXI0_START_ADDR_6_OFFSET       0                    // 
#define AXI0_START_ADDR_6_WIDTH        19                   // 
#define AXI0_START_ADDR_7_OFFSET       0                    // 
#define AXI0_START_ADDR_7_WIDTH        19                   // 
#define AXI0_START_ADDR_8_OFFSET       0                    // 
#define AXI0_START_ADDR_8_WIDTH        19                   // 
#define AXI0_START_ADDR_9_OFFSET       0                    // 
#define AXI0_START_ADDR_9_WIDTH        19                   // 
#define AXI0_START_ADDR_10_OFFSET      0                    // 
#define AXI0_START_ADDR_10_WIDTH       19                   // 
#define AXI0_START_ADDR_11_OFFSET      0                    // 
#define AXI0_START_ADDR_11_WIDTH       19                   // 
#define AXI0_START_ADDR_12_OFFSET      0                    // 
#define AXI0_START_ADDR_12_WIDTH       19                   // 
#define AXI0_START_ADDR_13_OFFSET      0                    // 
#define AXI0_START_ADDR_13_WIDTH       19                   // 
#define AXI0_START_ADDR_14_OFFSET      0                    // 
#define AXI0_START_ADDR_14_WIDTH       19                   // 
#define AXI0_START_ADDR_15_OFFSET      0                    // 
#define AXI0_START_ADDR_15_WIDTH       19                   // 
#define AXI0_START_RESP                21                   // 
#define AXI0_START_RESP_BUFFERABLE     16                   // 
#define AXI0_START_RESP_CMD_AVAIL      17                   // 
#define AXI0_START_RESP_COBUF          22                   // 
#define AXI0_START_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI0_START_RESP_EXPECTED_SPLIT_CNT 29                   // 
#define AXI0_START_RESP_ID             15                   // 
#define AXI0_START_RESP_MEM_LASTDATA   19                   // 
#define AXI0_START_RESP_PORT_LASTDATA  18                   // 
#define AXI0_START_RESP_RCV_SPLIT_CNT  34                   // 
#define AXI0_START_RESP_SPLIT_CMD_DONE 24                   // 
#define AXI0_STATS_REP_PERIOD_WIDTH    4                    // 
#define AXI0_TRANS_WRFIFO_LOG2_DEPTH_OFFSET 0                    // 
#define AXI0_TRANS_WRFIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI0_TRANS_WRFIFO_PTR_WIDTH    AXI0_TRANS_WRFIFO_LOG2_DEPTH + 1 // 
#define AXI0_W_PRIORITY_OFFSET         16                   // 
#define AXI0_W_PRIORITY_WIDTH          3                    // 
#define AXI0_WR_ARRAY_DEPTH_WIDTH      4                    // 
#define AXI0_WR_ARRAY_LOG2_DEPTH_OFFSET 24                   // 
#define AXI0_WR_ARRAY_LOG2_DEPTH_WIDTH 8                    // 
#define AXI0_WR_ARRAY_PTR_WIDTH        AXI0_WR_ARRAY_LOG2_DEPTH // 
#define AXI0_WR_ARRAY_WIDTH            179                  // 
#define AXI0_WR_DAGR_DOUT_WIDTH        179                  // 
#define AXI0_WR_DAGR_WRFIFO_WIDTH      187                  // 
#define AXI0_WRCMD_PROC_FIFO_LOG2_DEPTH_OFFSET 8                    // 
#define AXI0_WRCMD_PROC_FIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI0_WRCMD_PROC_FIFO_PTR_WIDTH AXI0_WRCMD_PROC_FIFO_LOG2_DEPTH + 1 // 
#define AXI1_ADDR_WIDTH                33                   // 
#define AXI1_ADDRESS_RANGE_ENABLE_OFFSET 0                    // 
#define AXI1_ADDRESS_RANGE_ENABLE_WIDTH 1                    // 
#define AXI1_ALL_STROBES_USED_ENABLE_OFFSET 24                   // 
#define AXI1_ALL_STROBES_USED_ENABLE_WIDTH 1                    // 
#define AXI1_BDW_OFFSET                0                    // 
#define AXI1_BDW_OVFLOW_OFFSET         8                    // 
#define AXI1_BDW_OVFLOW_WIDTH          1                    // 
#define AXI1_BDW_WIDTH                 7                    // 
#define AXI1_CFG_PRT_DATAIFO_SRAM_WIDTH 173                  // 
#define AXI1_CFG_PRT_DATIFO_AGR_WIDTH  173                  // 
#define AXI1_CFG_PRT_RDFIFO_WIDTH      168                  // 
#define AXI1_CMDFIFO_DEPTH             8                    // 
#define AXI1_CMDFIFO_DEPTH_WIDTH       3                    // 
#define AXI1_CMDFIFO_LOG2_DEPTH_OFFSET 16                   // 
#define AXI1_CMDFIFO_LOG2_DEPTH_WIDTH  8                    // 
#define AXI1_CMDFIFO_PTR_WIDTH         AXI1_CMDFIFO_LOG2_DEPTH + 1 // 
#define AXI1_CMDFIFO_WIDTH             85                   // 
#define AXI1_CURRENT_BDW_ADDR          853                  // 
#define AXI1_CURRENT_BDW_OFFSET        16                   // 
#define AXI1_CURRENT_BDW_WIDTH         7                    // 
#define AXI1_DB_RESPFIFO_PTR_WIDTH     5                    // 
#define AXI1_DB_RESPFIFO_WIDTH         18                   // 
#define AXI1_DB_SPLIT_TRFIFO_PTR_WIDTH 5                    // 
#define AXI1_DB_SPLIT_TRFIFO_WIDTH     17                   // 
#define AXI1_END_ADDR_0_OFFSET         0                    // 
#define AXI1_END_ADDR_0_WIDTH          19                   // 
#define AXI1_END_ADDR_1_OFFSET         0                    // 
#define AXI1_END_ADDR_1_WIDTH          19                   // 
#define AXI1_END_ADDR_2_OFFSET         0                    // 
#define AXI1_END_ADDR_2_WIDTH          19                   // 
#define AXI1_END_ADDR_3_OFFSET         0                    // 
#define AXI1_END_ADDR_3_WIDTH          19                   // 
#define AXI1_END_ADDR_4_OFFSET         0                    // 
#define AXI1_END_ADDR_4_WIDTH          19                   // 
#define AXI1_END_ADDR_5_OFFSET         0                    // 
#define AXI1_END_ADDR_5_WIDTH          19                   // 
#define AXI1_END_ADDR_6_OFFSET         0                    // 
#define AXI1_END_ADDR_6_WIDTH          19                   // 
#define AXI1_END_ADDR_7_OFFSET         0                    // 
#define AXI1_END_ADDR_7_WIDTH          19                   // 
#define AXI1_END_ADDR_8_OFFSET         0                    // 
#define AXI1_END_ADDR_8_WIDTH          19                   // 
#define AXI1_END_ADDR_9_OFFSET         0                    // 
#define AXI1_END_ADDR_9_WIDTH          19                   // 
#define AXI1_END_ADDR_10_OFFSET        0                    // 
#define AXI1_END_ADDR_10_WIDTH         19                   // 
#define AXI1_END_ADDR_11_OFFSET        0                    // 
#define AXI1_END_ADDR_11_WIDTH         19                   // 
#define AXI1_END_ADDR_12_OFFSET        0                    // 
#define AXI1_END_ADDR_12_WIDTH         19                   // 
#define AXI1_END_ADDR_13_OFFSET        0                    // 
#define AXI1_END_ADDR_13_WIDTH         19                   // 
#define AXI1_END_ADDR_14_OFFSET        0                    // 
#define AXI1_END_ADDR_14_WIDTH         19                   // 
#define AXI1_END_ADDR_15_OFFSET        0                    // 
#define AXI1_END_ADDR_15_WIDTH         19                   // 
#define AXI1_END_RESP                  20                   // 
#define AXI1_END_RESP_BUFFERABLE       16                   // 
#define AXI1_END_RESP_CMD_AVAIL        17                   // 
#define AXI1_END_RESP_COBUF            22                   // 
#define AXI1_END_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI1_END_RESP_EXPECTED_SPLIT_CNT 25                   // 
#define AXI1_END_RESP_ID               0                    // 
#define AXI1_END_RESP_MEM_LASTDATA     19                   // 
#define AXI1_END_RESP_PORT_LASTDATA    18                   // 
#define AXI1_END_RESP_RCV_SPLIT_CNT    30                   // 
#define AXI1_END_RESP_SPLIT_CMD_DONE   24                   // 
#define AXI1_FIXED_PORT_PRIORITY_ENABLE_OFFSET 0                    // 
#define AXI1_FIXED_PORT_PRIORITY_ENABLE_WIDTH 1                    // 
#define AXI1_PORT_COBUFFIFO_DEPTH      AXI1_CMDFIFO_DEPTH + 32 + 2 // 
#define AXI1_PORT_COBUFFIFO_WIDTH      16                   // 
#define AXI1_PORT_RMODW_LEN_WIDTH      11                   // 
#define AXI1_PORT_RMODW_NUM_BEATS      64                   // 
#define AXI1_PORT_SPLIT_BLOCKS_ADDR_WIDTH 12                   // 
#define AXI1_PORT_SPLIT_MAX_NUM_BLOCKS_WIDTH 5                    // 
#define AXI1_PRDINTFIFO_PTR_WIDTH      AXI1_PRDINTFIFO_LOG2_DEPTH + 1 // 
#define AXI1_R_PRIORITY_OFFSET         8                    // 
#define AXI1_R_PRIORITY_WIDTH          3                    // 
#define AXI1_RANGE_PROT_BITS_0_OFFSET  24                   // 
#define AXI1_RANGE_PROT_BITS_0_WIDTH   2                    // 
#define AXI1_RANGE_PROT_BITS_1_OFFSET  24                   // 
#define AXI1_RANGE_PROT_BITS_1_WIDTH   2                    // 
#define AXI1_RANGE_PROT_BITS_2_OFFSET  24                   // 
#define AXI1_RANGE_PROT_BITS_2_WIDTH   2                    // 
#define AXI1_RANGE_PROT_BITS_3_OFFSET  24                   // 
#define AXI1_RANGE_PROT_BITS_3_WIDTH   2                    // 
#define AXI1_RANGE_PROT_BITS_4_OFFSET  24                   // 
#define AXI1_RANGE_PROT_BITS_4_WIDTH   2                    // 
#define AXI1_RANGE_PROT_BITS_5_OFFSET  24                   // 
#define AXI1_RANGE_PROT_BITS_5_WIDTH   2                    // 
#define AXI1_RANGE_PROT_BITS_6_OFFSET  24                   // 
#define AXI1_RANGE_PROT_BITS_6_WIDTH   2                    // 
#define AXI1_RANGE_PROT_BITS_7_OFFSET  24                   // 
#define AXI1_RANGE_PROT_BITS_7_WIDTH   2                    // 
#define AXI1_RANGE_PROT_BITS_8_OFFSET  24                   // 
#define AXI1_RANGE_PROT_BITS_8_WIDTH   2                    // 
#define AXI1_RANGE_PROT_BITS_9_OFFSET  24                   // 
#define AXI1_RANGE_PROT_BITS_9_WIDTH   2                    // 
#define AXI1_RANGE_PROT_BITS_10_OFFSET 24                   // 
#define AXI1_RANGE_PROT_BITS_10_WIDTH  2                    // 
#define AXI1_RANGE_PROT_BITS_11_OFFSET 24                   // 
#define AXI1_RANGE_PROT_BITS_11_WIDTH  2                    // 
#define AXI1_RANGE_PROT_BITS_12_OFFSET 24                   // 
#define AXI1_RANGE_PROT_BITS_12_WIDTH  2                    // 
#define AXI1_RANGE_PROT_BITS_13_OFFSET 24                   // 
#define AXI1_RANGE_PROT_BITS_13_WIDTH  2                    // 
#define AXI1_RANGE_PROT_BITS_14_OFFSET 24                   // 
#define AXI1_RANGE_PROT_BITS_14_WIDTH  2                    // 
#define AXI1_RANGE_PROT_BITS_15_OFFSET 24                   // 
#define AXI1_RANGE_PROT_BITS_15_WIDTH  2                    // 
#define AXI1_RANGE_RID_CHECK_BITS_0_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_1_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_2_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_3_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_4_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_5_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_6_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_7_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_8_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_9_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_10_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_11_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_12_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_13_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_14_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_15_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_OFFSET 0                    // 
#define AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_0_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_1_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_2_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_3_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_4_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_5_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_6_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_7_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_8_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_9_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_10_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_11_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_12_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_13_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_14_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_15_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_OFFSET 16                   // 
#define AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI1_RATE_SEL_WIDTH            4                    // 
#define AXI1_RDFIFO_LOG2_DEPTH_OFFSET  24                   // 
#define AXI1_RDFIFO_LOG2_DEPTH_WIDTH   8                    // 
#define AXI1_RDFIFO_PTR_WIDTH          AXI1_RDFIFO_LOG2_DEPTH + 1 // 
#define AXI1_RDFIFO_WIDTH              168                  // 
#define AXI1_RESP_RCV_SPLIT_CNT_WIDTH  5                    // 
#define AXI1_RESP_STORAGE_DEPTH        16                   // 
#define AXI1_RESP_STORAGE_PTR_WIDTH    4                    // 
#define AXI1_RESP_STORAGE_WIDTH        35                   // 
#define AXI1_RMODWFIFO_PTR_WIDTH       AXI1_CMDFIFO_PTR_WIDTH  // 
#define AXI1_RMODWFIFO_WIDTH           76                   // 
#define AXI1_START_ADDR_0_OFFSET       8                    // 
#define AXI1_START_ADDR_0_WIDTH        19                   // 
#define AXI1_START_ADDR_1_OFFSET       0                    // 
#define AXI1_START_ADDR_1_WIDTH        19                   // 
#define AXI1_START_ADDR_2_OFFSET       0                    // 
#define AXI1_START_ADDR_2_WIDTH        19                   // 
#define AXI1_START_ADDR_3_OFFSET       0                    // 
#define AXI1_START_ADDR_3_WIDTH        19                   // 
#define AXI1_START_ADDR_4_OFFSET       0                    // 
#define AXI1_START_ADDR_4_WIDTH        19                   // 
#define AXI1_START_ADDR_5_OFFSET       0                    // 
#define AXI1_START_ADDR_5_WIDTH        19                   // 
#define AXI1_START_ADDR_6_OFFSET       0                    // 
#define AXI1_START_ADDR_6_WIDTH        19                   // 
#define AXI1_START_ADDR_7_OFFSET       0                    // 
#define AXI1_START_ADDR_7_WIDTH        19                   // 
#define AXI1_START_ADDR_8_OFFSET       0                    // 
#define AXI1_START_ADDR_8_WIDTH        19                   // 
#define AXI1_START_ADDR_9_OFFSET       0                    // 
#define AXI1_START_ADDR_9_WIDTH        19                   // 
#define AXI1_START_ADDR_10_OFFSET      0                    // 
#define AXI1_START_ADDR_10_WIDTH       19                   // 
#define AXI1_START_ADDR_11_OFFSET      0                    // 
#define AXI1_START_ADDR_11_WIDTH       19                   // 
#define AXI1_START_ADDR_12_OFFSET      0                    // 
#define AXI1_START_ADDR_12_WIDTH       19                   // 
#define AXI1_START_ADDR_13_OFFSET      0                    // 
#define AXI1_START_ADDR_13_WIDTH       19                   // 
#define AXI1_START_ADDR_14_OFFSET      0                    // 
#define AXI1_START_ADDR_14_WIDTH       19                   // 
#define AXI1_START_ADDR_15_OFFSET      0                    // 
#define AXI1_START_ADDR_15_WIDTH       19                   // 
#define AXI1_START_RESP                21                   // 
#define AXI1_START_RESP_BUFFERABLE     16                   // 
#define AXI1_START_RESP_CMD_AVAIL      17                   // 
#define AXI1_START_RESP_COBUF          22                   // 
#define AXI1_START_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI1_START_RESP_EXPECTED_SPLIT_CNT 29                   // 
#define AXI1_START_RESP_ID             15                   // 
#define AXI1_START_RESP_MEM_LASTDATA   19                   // 
#define AXI1_START_RESP_PORT_LASTDATA  18                   // 
#define AXI1_START_RESP_RCV_SPLIT_CNT  34                   // 
#define AXI1_START_RESP_SPLIT_CMD_DONE 24                   // 
#define AXI1_STATS_REP_PERIOD_WIDTH    4                    // 
#define AXI1_TRANS_WRFIFO_LOG2_DEPTH_OFFSET 8                    // 
#define AXI1_TRANS_WRFIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI1_TRANS_WRFIFO_PTR_WIDTH    AXI1_TRANS_WRFIFO_LOG2_DEPTH + 1 // 
#define AXI1_W_PRIORITY_OFFSET         16                   // 
#define AXI1_W_PRIORITY_WIDTH          3                    // 
#define AXI1_WR_ARRAY_DEPTH_WIDTH      4                    // 
#define AXI1_WR_ARRAY_LOG2_DEPTH_OFFSET 0                    // 
#define AXI1_WR_ARRAY_LOG2_DEPTH_WIDTH 8                    // 
#define AXI1_WR_ARRAY_PTR_WIDTH        AXI1_WR_ARRAY_LOG2_DEPTH // 
#define AXI1_WR_ARRAY_WIDTH            179                  // 
#define AXI1_WR_DAGR_DOUT_WIDTH        179                  // 
#define AXI1_WR_DAGR_WRFIFO_WIDTH      187                  // 
#define AXI1_WRCMD_PROC_FIFO_LOG2_DEPTH_OFFSET 16                   // 
#define AXI1_WRCMD_PROC_FIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI1_WRCMD_PROC_FIFO_PTR_WIDTH AXI1_WRCMD_PROC_FIFO_LOG2_DEPTH + 1 // 
#define AXI2_ADDR_WIDTH                33                   // 
#define AXI2_ADDRESS_RANGE_ENABLE_OFFSET 0                    // 
#define AXI2_ADDRESS_RANGE_ENABLE_WIDTH 1                    // 
#define AXI2_ALL_STROBES_USED_ENABLE_OFFSET 24                   // 
#define AXI2_ALL_STROBES_USED_ENABLE_WIDTH 1                    // 
#define AXI2_BDW_OFFSET                24                   // 
#define AXI2_BDW_OVFLOW_OFFSET         0                    // 
#define AXI2_BDW_OVFLOW_WIDTH          1                    // 
#define AXI2_BDW_WIDTH                 7                    // 
#define AXI2_CFG_PRT_DATAIFO_SRAM_WIDTH 173                  // 
#define AXI2_CFG_PRT_DATIFO_AGR_WIDTH  173                  // 
#define AXI2_CFG_PRT_RDFIFO_WIDTH      168                  // 
#define AXI2_CMDFIFO_DEPTH             8                    // 
#define AXI2_CMDFIFO_DEPTH_WIDTH       3                    // 
#define AXI2_CMDFIFO_LOG2_DEPTH_OFFSET 24                   // 
#define AXI2_CMDFIFO_LOG2_DEPTH_WIDTH  8                    // 
#define AXI2_CMDFIFO_PTR_WIDTH         AXI2_CMDFIFO_LOG2_DEPTH + 1 // 
#define AXI2_CMDFIFO_WIDTH             85                   // 
#define AXI2_CURRENT_BDW_ADDR          854                  // 
#define AXI2_CURRENT_BDW_OFFSET        8                    // 
#define AXI2_CURRENT_BDW_WIDTH         7                    // 
#define AXI2_DB_RESPFIFO_PTR_WIDTH     5                    // 
#define AXI2_DB_RESPFIFO_WIDTH         18                   // 
#define AXI2_DB_SPLIT_TRFIFO_PTR_WIDTH 5                    // 
#define AXI2_DB_SPLIT_TRFIFO_WIDTH     17                   // 
#define AXI2_END_ADDR_0_OFFSET         0                    // 
#define AXI2_END_ADDR_0_WIDTH          19                   // 
#define AXI2_END_ADDR_1_OFFSET         0                    // 
#define AXI2_END_ADDR_1_WIDTH          19                   // 
#define AXI2_END_ADDR_2_OFFSET         0                    // 
#define AXI2_END_ADDR_2_WIDTH          19                   // 
#define AXI2_END_ADDR_3_OFFSET         0                    // 
#define AXI2_END_ADDR_3_WIDTH          19                   // 
#define AXI2_END_ADDR_4_OFFSET         0                    // 
#define AXI2_END_ADDR_4_WIDTH          19                   // 
#define AXI2_END_ADDR_5_OFFSET         0                    // 
#define AXI2_END_ADDR_5_WIDTH          19                   // 
#define AXI2_END_ADDR_6_OFFSET         0                    // 
#define AXI2_END_ADDR_6_WIDTH          19                   // 
#define AXI2_END_ADDR_7_OFFSET         0                    // 
#define AXI2_END_ADDR_7_WIDTH          19                   // 
#define AXI2_END_ADDR_8_OFFSET         0                    // 
#define AXI2_END_ADDR_8_WIDTH          19                   // 
#define AXI2_END_ADDR_9_OFFSET         0                    // 
#define AXI2_END_ADDR_9_WIDTH          19                   // 
#define AXI2_END_ADDR_10_OFFSET        0                    // 
#define AXI2_END_ADDR_10_WIDTH         19                   // 
#define AXI2_END_ADDR_11_OFFSET        0                    // 
#define AXI2_END_ADDR_11_WIDTH         19                   // 
#define AXI2_END_ADDR_12_OFFSET        0                    // 
#define AXI2_END_ADDR_12_WIDTH         19                   // 
#define AXI2_END_ADDR_13_OFFSET        0                    // 
#define AXI2_END_ADDR_13_WIDTH         19                   // 
#define AXI2_END_ADDR_14_OFFSET        0                    // 
#define AXI2_END_ADDR_14_WIDTH         19                   // 
#define AXI2_END_ADDR_15_OFFSET        0                    // 
#define AXI2_END_ADDR_15_WIDTH         19                   // 
#define AXI2_END_RESP                  20                   // 
#define AXI2_END_RESP_BUFFERABLE       16                   // 
#define AXI2_END_RESP_CMD_AVAIL        17                   // 
#define AXI2_END_RESP_COBUF            22                   // 
#define AXI2_END_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI2_END_RESP_EXPECTED_SPLIT_CNT 25                   // 
#define AXI2_END_RESP_ID               0                    // 
#define AXI2_END_RESP_MEM_LASTDATA     19                   // 
#define AXI2_END_RESP_PORT_LASTDATA    18                   // 
#define AXI2_END_RESP_RCV_SPLIT_CNT    30                   // 
#define AXI2_END_RESP_SPLIT_CMD_DONE   24                   // 
#define AXI2_FIXED_PORT_PRIORITY_ENABLE_OFFSET 0                    // 
#define AXI2_FIXED_PORT_PRIORITY_ENABLE_WIDTH 1                    // 
#define AXI2_PORT_COBUFFIFO_DEPTH      AXI2_CMDFIFO_DEPTH + 32 + 2 // 
#define AXI2_PORT_COBUFFIFO_WIDTH      16                   // 
#define AXI2_PORT_RMODW_LEN_WIDTH      11                   // 
#define AXI2_PORT_RMODW_NUM_BEATS      64                   // 
#define AXI2_PORT_SPLIT_BLOCKS_ADDR_WIDTH 12                   // 
#define AXI2_PORT_SPLIT_MAX_NUM_BLOCKS_WIDTH 5                    // 
#define AXI2_PRDINTFIFO_PTR_WIDTH      AXI2_PRDINTFIFO_LOG2_DEPTH + 1 // 
#define AXI2_R_PRIORITY_OFFSET         8                    // 
#define AXI2_R_PRIORITY_WIDTH          3                    // 
#define AXI2_RANGE_PROT_BITS_0_OFFSET  24                   // 
#define AXI2_RANGE_PROT_BITS_0_WIDTH   2                    // 
#define AXI2_RANGE_PROT_BITS_1_OFFSET  24                   // 
#define AXI2_RANGE_PROT_BITS_1_WIDTH   2                    // 
#define AXI2_RANGE_PROT_BITS_2_OFFSET  24                   // 
#define AXI2_RANGE_PROT_BITS_2_WIDTH   2                    // 
#define AXI2_RANGE_PROT_BITS_3_OFFSET  24                   // 
#define AXI2_RANGE_PROT_BITS_3_WIDTH   2                    // 
#define AXI2_RANGE_PROT_BITS_4_OFFSET  24                   // 
#define AXI2_RANGE_PROT_BITS_4_WIDTH   2                    // 
#define AXI2_RANGE_PROT_BITS_5_OFFSET  24                   // 
#define AXI2_RANGE_PROT_BITS_5_WIDTH   2                    // 
#define AXI2_RANGE_PROT_BITS_6_OFFSET  24                   // 
#define AXI2_RANGE_PROT_BITS_6_WIDTH   2                    // 
#define AXI2_RANGE_PROT_BITS_7_OFFSET  24                   // 
#define AXI2_RANGE_PROT_BITS_7_WIDTH   2                    // 
#define AXI2_RANGE_PROT_BITS_8_OFFSET  24                   // 
#define AXI2_RANGE_PROT_BITS_8_WIDTH   2                    // 
#define AXI2_RANGE_PROT_BITS_9_OFFSET  24                   // 
#define AXI2_RANGE_PROT_BITS_9_WIDTH   2                    // 
#define AXI2_RANGE_PROT_BITS_10_OFFSET 24                   // 
#define AXI2_RANGE_PROT_BITS_10_WIDTH  2                    // 
#define AXI2_RANGE_PROT_BITS_11_OFFSET 24                   // 
#define AXI2_RANGE_PROT_BITS_11_WIDTH  2                    // 
#define AXI2_RANGE_PROT_BITS_12_OFFSET 24                   // 
#define AXI2_RANGE_PROT_BITS_12_WIDTH  2                    // 
#define AXI2_RANGE_PROT_BITS_13_OFFSET 24                   // 
#define AXI2_RANGE_PROT_BITS_13_WIDTH  2                    // 
#define AXI2_RANGE_PROT_BITS_14_OFFSET 24                   // 
#define AXI2_RANGE_PROT_BITS_14_WIDTH  2                    // 
#define AXI2_RANGE_PROT_BITS_15_OFFSET 24                   // 
#define AXI2_RANGE_PROT_BITS_15_WIDTH  2                    // 
#define AXI2_RANGE_RID_CHECK_BITS_0_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_1_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_2_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_3_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_4_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_5_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_6_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_7_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_8_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_9_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_10_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_11_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_12_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_13_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_14_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_15_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_OFFSET 0                    // 
#define AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_0_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_1_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_2_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_3_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_4_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_5_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_6_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_7_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_8_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_9_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_10_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_11_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_12_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_13_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_14_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_15_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_OFFSET 16                   // 
#define AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI2_RATE_SEL_WIDTH            4                    // 
#define AXI2_RDFIFO_LOG2_DEPTH_OFFSET  0                    // 
#define AXI2_RDFIFO_LOG2_DEPTH_WIDTH   8                    // 
#define AXI2_RDFIFO_PTR_WIDTH          AXI2_RDFIFO_LOG2_DEPTH + 1 // 
#define AXI2_RDFIFO_WIDTH              168                  // 
#define AXI2_RESP_RCV_SPLIT_CNT_WIDTH  5                    // 
#define AXI2_RESP_STORAGE_DEPTH        16                   // 
#define AXI2_RESP_STORAGE_PTR_WIDTH    4                    // 
#define AXI2_RESP_STORAGE_WIDTH        35                   // 
#define AXI2_RMODWFIFO_PTR_WIDTH       AXI2_CMDFIFO_PTR_WIDTH  // 
#define AXI2_RMODWFIFO_WIDTH           76                   // 
#define AXI2_START_ADDR_0_OFFSET       8                    // 
#define AXI2_START_ADDR_0_WIDTH        19                   // 
#define AXI2_START_ADDR_1_OFFSET       0                    // 
#define AXI2_START_ADDR_1_WIDTH        19                   // 
#define AXI2_START_ADDR_2_OFFSET       0                    // 
#define AXI2_START_ADDR_2_WIDTH        19                   // 
#define AXI2_START_ADDR_3_OFFSET       0                    // 
#define AXI2_START_ADDR_3_WIDTH        19                   // 
#define AXI2_START_ADDR_4_OFFSET       0                    // 
#define AXI2_START_ADDR_4_WIDTH        19                   // 
#define AXI2_START_ADDR_5_OFFSET       0                    // 
#define AXI2_START_ADDR_5_WIDTH        19                   // 
#define AXI2_START_ADDR_6_OFFSET       0                    // 
#define AXI2_START_ADDR_6_WIDTH        19                   // 
#define AXI2_START_ADDR_7_OFFSET       0                    // 
#define AXI2_START_ADDR_7_WIDTH        19                   // 
#define AXI2_START_ADDR_8_OFFSET       0                    // 
#define AXI2_START_ADDR_8_WIDTH        19                   // 
#define AXI2_START_ADDR_9_OFFSET       0                    // 
#define AXI2_START_ADDR_9_WIDTH        19                   // 
#define AXI2_START_ADDR_10_OFFSET      0                    // 
#define AXI2_START_ADDR_10_WIDTH       19                   // 
#define AXI2_START_ADDR_11_OFFSET      0                    // 
#define AXI2_START_ADDR_11_WIDTH       19                   // 
#define AXI2_START_ADDR_12_OFFSET      0                    // 
#define AXI2_START_ADDR_12_WIDTH       19                   // 
#define AXI2_START_ADDR_13_OFFSET      0                    // 
#define AXI2_START_ADDR_13_WIDTH       19                   // 
#define AXI2_START_ADDR_14_OFFSET      0                    // 
#define AXI2_START_ADDR_14_WIDTH       19                   // 
#define AXI2_START_ADDR_15_OFFSET      0                    // 
#define AXI2_START_ADDR_15_WIDTH       19                   // 
#define AXI2_START_RESP                21                   // 
#define AXI2_START_RESP_BUFFERABLE     16                   // 
#define AXI2_START_RESP_CMD_AVAIL      17                   // 
#define AXI2_START_RESP_COBUF          22                   // 
#define AXI2_START_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI2_START_RESP_EXPECTED_SPLIT_CNT 29                   // 
#define AXI2_START_RESP_ID             15                   // 
#define AXI2_START_RESP_MEM_LASTDATA   19                   // 
#define AXI2_START_RESP_PORT_LASTDATA  18                   // 
#define AXI2_START_RESP_RCV_SPLIT_CNT  34                   // 
#define AXI2_START_RESP_SPLIT_CMD_DONE 24                   // 
#define AXI2_STATS_REP_PERIOD_WIDTH    4                    // 
#define AXI2_TRANS_WRFIFO_LOG2_DEPTH_OFFSET 16                   // 
#define AXI2_TRANS_WRFIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI2_TRANS_WRFIFO_PTR_WIDTH    AXI2_TRANS_WRFIFO_LOG2_DEPTH + 1 // 
#define AXI2_W_PRIORITY_OFFSET         16                   // 
#define AXI2_W_PRIORITY_WIDTH          3                    // 
#define AXI2_WR_ARRAY_DEPTH_WIDTH      4                    // 
#define AXI2_WR_ARRAY_LOG2_DEPTH_OFFSET 8                    // 
#define AXI2_WR_ARRAY_LOG2_DEPTH_WIDTH 8                    // 
#define AXI2_WR_ARRAY_PTR_WIDTH        AXI2_WR_ARRAY_LOG2_DEPTH // 
#define AXI2_WR_ARRAY_WIDTH            179                  // 
#define AXI2_WR_DAGR_DOUT_WIDTH        179                  // 
#define AXI2_WR_DAGR_WRFIFO_WIDTH      187                  // 
#define AXI2_WRCMD_PROC_FIFO_LOG2_DEPTH_OFFSET 24                   // 
#define AXI2_WRCMD_PROC_FIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI2_WRCMD_PROC_FIFO_PTR_WIDTH AXI2_WRCMD_PROC_FIFO_LOG2_DEPTH + 1 // 
#define AXI3_ADDR_WIDTH                33                   // 
#define AXI3_ADDRESS_RANGE_ENABLE_OFFSET 0                    // 
#define AXI3_ADDRESS_RANGE_ENABLE_WIDTH 1                    // 
#define AXI3_ALL_STROBES_USED_ENABLE_OFFSET 24                   // 
#define AXI3_ALL_STROBES_USED_ENABLE_WIDTH 1                    // 
#define AXI3_BDW_OFFSET                16                   // 
#define AXI3_BDW_OVFLOW_OFFSET         24                   // 
#define AXI3_BDW_OVFLOW_WIDTH          1                    // 
#define AXI3_BDW_WIDTH                 7                    // 
#define AXI3_CFG_PRT_DATAIFO_SRAM_WIDTH 173                  // 
#define AXI3_CFG_PRT_DATIFO_AGR_WIDTH  173                  // 
#define AXI3_CFG_PRT_RDFIFO_WIDTH      168                  // 
#define AXI3_CMDFIFO_DEPTH             8                    // 
#define AXI3_CMDFIFO_DEPTH_WIDTH       3                    // 
#define AXI3_CMDFIFO_LOG2_DEPTH_OFFSET 0                    // 
#define AXI3_CMDFIFO_LOG2_DEPTH_WIDTH  8                    // 
#define AXI3_CMDFIFO_PTR_WIDTH         AXI3_CMDFIFO_LOG2_DEPTH + 1 // 
#define AXI3_CMDFIFO_WIDTH             85                   // 
#define AXI3_CURRENT_BDW_ADDR          855                  // 
#define AXI3_CURRENT_BDW_OFFSET        0                    // 
#define AXI3_CURRENT_BDW_WIDTH         7                    // 
#define AXI3_DB_RESPFIFO_PTR_WIDTH     5                    // 
#define AXI3_DB_RESPFIFO_WIDTH         18                   // 
#define AXI3_DB_SPLIT_TRFIFO_PTR_WIDTH 5                    // 
#define AXI3_DB_SPLIT_TRFIFO_WIDTH     17                   // 
#define AXI3_END_ADDR_0_OFFSET         0                    // 
#define AXI3_END_ADDR_0_WIDTH          19                   // 
#define AXI3_END_ADDR_1_OFFSET         0                    // 
#define AXI3_END_ADDR_1_WIDTH          19                   // 
#define AXI3_END_ADDR_2_OFFSET         0                    // 
#define AXI3_END_ADDR_2_WIDTH          19                   // 
#define AXI3_END_ADDR_3_OFFSET         0                    // 
#define AXI3_END_ADDR_3_WIDTH          19                   // 
#define AXI3_END_ADDR_4_OFFSET         0                    // 
#define AXI3_END_ADDR_4_WIDTH          19                   // 
#define AXI3_END_ADDR_5_OFFSET         0                    // 
#define AXI3_END_ADDR_5_WIDTH          19                   // 
#define AXI3_END_ADDR_6_OFFSET         0                    // 
#define AXI3_END_ADDR_6_WIDTH          19                   // 
#define AXI3_END_ADDR_7_OFFSET         0                    // 
#define AXI3_END_ADDR_7_WIDTH          19                   // 
#define AXI3_END_ADDR_8_OFFSET         0                    // 
#define AXI3_END_ADDR_8_WIDTH          19                   // 
#define AXI3_END_ADDR_9_OFFSET         0                    // 
#define AXI3_END_ADDR_9_WIDTH          19                   // 
#define AXI3_END_ADDR_10_OFFSET        0                    // 
#define AXI3_END_ADDR_10_WIDTH         19                   // 
#define AXI3_END_ADDR_11_OFFSET        0                    // 
#define AXI3_END_ADDR_11_WIDTH         19                   // 
#define AXI3_END_ADDR_12_OFFSET        0                    // 
#define AXI3_END_ADDR_12_WIDTH         19                   // 
#define AXI3_END_ADDR_13_OFFSET        0                    // 
#define AXI3_END_ADDR_13_WIDTH         19                   // 
#define AXI3_END_ADDR_14_OFFSET        0                    // 
#define AXI3_END_ADDR_14_WIDTH         19                   // 
#define AXI3_END_ADDR_15_OFFSET        0                    // 
#define AXI3_END_ADDR_15_WIDTH         19                   // 
#define AXI3_END_RESP                  20                   // 
#define AXI3_END_RESP_BUFFERABLE       16                   // 
#define AXI3_END_RESP_CMD_AVAIL        17                   // 
#define AXI3_END_RESP_COBUF            22                   // 
#define AXI3_END_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI3_END_RESP_EXPECTED_SPLIT_CNT 25                   // 
#define AXI3_END_RESP_ID               0                    // 
#define AXI3_END_RESP_MEM_LASTDATA     19                   // 
#define AXI3_END_RESP_PORT_LASTDATA    18                   // 
#define AXI3_END_RESP_RCV_SPLIT_CNT    30                   // 
#define AXI3_END_RESP_SPLIT_CMD_DONE   24                   // 
#define AXI3_FIXED_PORT_PRIORITY_ENABLE_OFFSET 0                    // 
#define AXI3_FIXED_PORT_PRIORITY_ENABLE_WIDTH 1                    // 
#define AXI3_PORT_COBUFFIFO_DEPTH      AXI3_CMDFIFO_DEPTH + 32 + 2 // 
#define AXI3_PORT_COBUFFIFO_WIDTH      16                   // 
#define AXI3_PORT_RMODW_LEN_WIDTH      11                   // 
#define AXI3_PORT_RMODW_NUM_BEATS      64                   // 
#define AXI3_PORT_SPLIT_BLOCKS_ADDR_WIDTH 12                   // 
#define AXI3_PORT_SPLIT_MAX_NUM_BLOCKS_WIDTH 5                    // 
#define AXI3_PRDINTFIFO_PTR_WIDTH      AXI3_PRDINTFIFO_LOG2_DEPTH + 1 // 
#define AXI3_R_PRIORITY_OFFSET         8                    // 
#define AXI3_R_PRIORITY_WIDTH          3                    // 
#define AXI3_RANGE_PROT_BITS_0_OFFSET  24                   // 
#define AXI3_RANGE_PROT_BITS_0_WIDTH   2                    // 
#define AXI3_RANGE_PROT_BITS_1_OFFSET  24                   // 
#define AXI3_RANGE_PROT_BITS_1_WIDTH   2                    // 
#define AXI3_RANGE_PROT_BITS_2_OFFSET  24                   // 
#define AXI3_RANGE_PROT_BITS_2_WIDTH   2                    // 
#define AXI3_RANGE_PROT_BITS_3_OFFSET  24                   // 
#define AXI3_RANGE_PROT_BITS_3_WIDTH   2                    // 
#define AXI3_RANGE_PROT_BITS_4_OFFSET  24                   // 
#define AXI3_RANGE_PROT_BITS_4_WIDTH   2                    // 
#define AXI3_RANGE_PROT_BITS_5_OFFSET  24                   // 
#define AXI3_RANGE_PROT_BITS_5_WIDTH   2                    // 
#define AXI3_RANGE_PROT_BITS_6_OFFSET  24                   // 
#define AXI3_RANGE_PROT_BITS_6_WIDTH   2                    // 
#define AXI3_RANGE_PROT_BITS_7_OFFSET  24                   // 
#define AXI3_RANGE_PROT_BITS_7_WIDTH   2                    // 
#define AXI3_RANGE_PROT_BITS_8_OFFSET  24                   // 
#define AXI3_RANGE_PROT_BITS_8_WIDTH   2                    // 
#define AXI3_RANGE_PROT_BITS_9_OFFSET  24                   // 
#define AXI3_RANGE_PROT_BITS_9_WIDTH   2                    // 
#define AXI3_RANGE_PROT_BITS_10_OFFSET 24                   // 
#define AXI3_RANGE_PROT_BITS_10_WIDTH  2                    // 
#define AXI3_RANGE_PROT_BITS_11_OFFSET 24                   // 
#define AXI3_RANGE_PROT_BITS_11_WIDTH  2                    // 
#define AXI3_RANGE_PROT_BITS_12_OFFSET 24                   // 
#define AXI3_RANGE_PROT_BITS_12_WIDTH  2                    // 
#define AXI3_RANGE_PROT_BITS_13_OFFSET 24                   // 
#define AXI3_RANGE_PROT_BITS_13_WIDTH  2                    // 
#define AXI3_RANGE_PROT_BITS_14_OFFSET 24                   // 
#define AXI3_RANGE_PROT_BITS_14_WIDTH  2                    // 
#define AXI3_RANGE_PROT_BITS_15_OFFSET 24                   // 
#define AXI3_RANGE_PROT_BITS_15_WIDTH  2                    // 
#define AXI3_RANGE_RID_CHECK_BITS_0_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_1_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_2_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_3_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_4_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_5_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_6_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_7_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_8_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_9_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_10_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_11_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_12_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_13_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_14_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_15_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_OFFSET 0                    // 
#define AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_0_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_1_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_2_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_3_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_4_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_5_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_6_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_7_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_8_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_9_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_10_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_11_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_12_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_13_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_14_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_15_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_OFFSET 16                   // 
#define AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI3_RATE_SEL_WIDTH            4                    // 
#define AXI3_RDFIFO_LOG2_DEPTH_OFFSET  8                    // 
#define AXI3_RDFIFO_LOG2_DEPTH_WIDTH   8                    // 
#define AXI3_RDFIFO_PTR_WIDTH          AXI3_RDFIFO_LOG2_DEPTH + 1 // 
#define AXI3_RDFIFO_WIDTH              168                  // 
#define AXI3_RESP_RCV_SPLIT_CNT_WIDTH  5                    // 
#define AXI3_RESP_STORAGE_DEPTH        16                   // 
#define AXI3_RESP_STORAGE_PTR_WIDTH    4                    // 
#define AXI3_RESP_STORAGE_WIDTH        35                   // 
#define AXI3_RMODWFIFO_PTR_WIDTH       AXI3_CMDFIFO_PTR_WIDTH  // 
#define AXI3_RMODWFIFO_WIDTH           76                   // 
#define AXI3_START_ADDR_0_OFFSET       8                    // 
#define AXI3_START_ADDR_0_WIDTH        19                   // 
#define AXI3_START_ADDR_1_OFFSET       0                    // 
#define AXI3_START_ADDR_1_WIDTH        19                   // 
#define AXI3_START_ADDR_2_OFFSET       0                    // 
#define AXI3_START_ADDR_2_WIDTH        19                   // 
#define AXI3_START_ADDR_3_OFFSET       0                    // 
#define AXI3_START_ADDR_3_WIDTH        19                   // 
#define AXI3_START_ADDR_4_OFFSET       0                    // 
#define AXI3_START_ADDR_4_WIDTH        19                   // 
#define AXI3_START_ADDR_5_OFFSET       0                    // 
#define AXI3_START_ADDR_5_WIDTH        19                   // 
#define AXI3_START_ADDR_6_OFFSET       0                    // 
#define AXI3_START_ADDR_6_WIDTH        19                   // 
#define AXI3_START_ADDR_7_OFFSET       0                    // 
#define AXI3_START_ADDR_7_WIDTH        19                   // 
#define AXI3_START_ADDR_8_OFFSET       0                    // 
#define AXI3_START_ADDR_8_WIDTH        19                   // 
#define AXI3_START_ADDR_9_OFFSET       0                    // 
#define AXI3_START_ADDR_9_WIDTH        19                   // 
#define AXI3_START_ADDR_10_OFFSET      0                    // 
#define AXI3_START_ADDR_10_WIDTH       19                   // 
#define AXI3_START_ADDR_11_OFFSET      0                    // 
#define AXI3_START_ADDR_11_WIDTH       19                   // 
#define AXI3_START_ADDR_12_OFFSET      0                    // 
#define AXI3_START_ADDR_12_WIDTH       19                   // 
#define AXI3_START_ADDR_13_OFFSET      0                    // 
#define AXI3_START_ADDR_13_WIDTH       19                   // 
#define AXI3_START_ADDR_14_OFFSET      0                    // 
#define AXI3_START_ADDR_14_WIDTH       19                   // 
#define AXI3_START_ADDR_15_OFFSET      0                    // 
#define AXI3_START_ADDR_15_WIDTH       19                   // 
#define AXI3_START_RESP                21                   // 
#define AXI3_START_RESP_BUFFERABLE     16                   // 
#define AXI3_START_RESP_CMD_AVAIL      17                   // 
#define AXI3_START_RESP_COBUF          22                   // 
#define AXI3_START_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI3_START_RESP_EXPECTED_SPLIT_CNT 29                   // 
#define AXI3_START_RESP_ID             15                   // 
#define AXI3_START_RESP_MEM_LASTDATA   19                   // 
#define AXI3_START_RESP_PORT_LASTDATA  18                   // 
#define AXI3_START_RESP_RCV_SPLIT_CNT  34                   // 
#define AXI3_START_RESP_SPLIT_CMD_DONE 24                   // 
#define AXI3_STATS_REP_PERIOD_WIDTH    4                    // 
#define AXI3_TRANS_WRFIFO_LOG2_DEPTH_OFFSET 24                   // 
#define AXI3_TRANS_WRFIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI3_TRANS_WRFIFO_PTR_WIDTH    AXI3_TRANS_WRFIFO_LOG2_DEPTH + 1 // 
#define AXI3_W_PRIORITY_OFFSET         16                   // 
#define AXI3_W_PRIORITY_WIDTH          3                    // 
#define AXI3_WR_ARRAY_DEPTH_WIDTH      4                    // 
#define AXI3_WR_ARRAY_LOG2_DEPTH_OFFSET 16                   // 
#define AXI3_WR_ARRAY_LOG2_DEPTH_WIDTH 8                    // 
#define AXI3_WR_ARRAY_PTR_WIDTH        AXI3_WR_ARRAY_LOG2_DEPTH // 
#define AXI3_WR_ARRAY_WIDTH            179                  // 
#define AXI3_WR_DAGR_DOUT_WIDTH        179                  // 
#define AXI3_WR_DAGR_WRFIFO_WIDTH      187                  // 
#define AXI3_WRCMD_PROC_FIFO_LOG2_DEPTH_OFFSET 0                    // 
#define AXI3_WRCMD_PROC_FIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI3_WRCMD_PROC_FIFO_PTR_WIDTH AXI3_WRCMD_PROC_FIFO_LOG2_DEPTH + 1 // 
#define AXI4_ADDR_WIDTH                33                   // 
#define AXI4_ADDRESS_RANGE_ENABLE_OFFSET 0                    // 
#define AXI4_ADDRESS_RANGE_ENABLE_WIDTH 1                    // 
#define AXI4_ALL_STROBES_USED_ENABLE_OFFSET 24                   // 
#define AXI4_ALL_STROBES_USED_ENABLE_WIDTH 1                    // 
#define AXI4_BDW_OFFSET                8                    // 
#define AXI4_BDW_OVFLOW_OFFSET         16                   // 
#define AXI4_BDW_OVFLOW_WIDTH          1                    // 
#define AXI4_BDW_WIDTH                 7                    // 
#define AXI4_CFG_PRT_DATAIFO_SRAM_WIDTH 173                  // 
#define AXI4_CFG_PRT_DATIFO_AGR_WIDTH  173                  // 
#define AXI4_CFG_PRT_RDFIFO_WIDTH      168                  // 
#define AXI4_CMDFIFO_DEPTH             8                    // 
#define AXI4_CMDFIFO_DEPTH_WIDTH       3                    // 
#define AXI4_CMDFIFO_LOG2_DEPTH_OFFSET 8                    // 
#define AXI4_CMDFIFO_LOG2_DEPTH_WIDTH  8                    // 
#define AXI4_CMDFIFO_PTR_WIDTH         AXI4_CMDFIFO_LOG2_DEPTH + 1 // 
#define AXI4_CMDFIFO_WIDTH             85                   // 
#define AXI4_CURRENT_BDW_ADDR          855                  // 
#define AXI4_CURRENT_BDW_OFFSET        24                   // 
#define AXI4_CURRENT_BDW_WIDTH         7                    // 
#define AXI4_DB_RESPFIFO_PTR_WIDTH     5                    // 
#define AXI4_DB_RESPFIFO_WIDTH         18                   // 
#define AXI4_DB_SPLIT_TRFIFO_PTR_WIDTH 5                    // 
#define AXI4_DB_SPLIT_TRFIFO_WIDTH     17                   // 
#define AXI4_END_ADDR_0_OFFSET         0                    // 
#define AXI4_END_ADDR_0_WIDTH          19                   // 
#define AXI4_END_ADDR_1_OFFSET         0                    // 
#define AXI4_END_ADDR_1_WIDTH          19                   // 
#define AXI4_END_ADDR_2_OFFSET         0                    // 
#define AXI4_END_ADDR_2_WIDTH          19                   // 
#define AXI4_END_ADDR_3_OFFSET         0                    // 
#define AXI4_END_ADDR_3_WIDTH          19                   // 
#define AXI4_END_ADDR_4_OFFSET         0                    // 
#define AXI4_END_ADDR_4_WIDTH          19                   // 
#define AXI4_END_ADDR_5_OFFSET         0                    // 
#define AXI4_END_ADDR_5_WIDTH          19                   // 
#define AXI4_END_ADDR_6_OFFSET         0                    // 
#define AXI4_END_ADDR_6_WIDTH          19                   // 
#define AXI4_END_ADDR_7_OFFSET         0                    // 
#define AXI4_END_ADDR_7_WIDTH          19                   // 
#define AXI4_END_ADDR_8_OFFSET         0                    // 
#define AXI4_END_ADDR_8_WIDTH          19                   // 
#define AXI4_END_ADDR_9_OFFSET         0                    // 
#define AXI4_END_ADDR_9_WIDTH          19                   // 
#define AXI4_END_ADDR_10_OFFSET        0                    // 
#define AXI4_END_ADDR_10_WIDTH         19                   // 
#define AXI4_END_ADDR_11_OFFSET        0                    // 
#define AXI4_END_ADDR_11_WIDTH         19                   // 
#define AXI4_END_ADDR_12_OFFSET        0                    // 
#define AXI4_END_ADDR_12_WIDTH         19                   // 
#define AXI4_END_ADDR_13_OFFSET        0                    // 
#define AXI4_END_ADDR_13_WIDTH         19                   // 
#define AXI4_END_ADDR_14_OFFSET        0                    // 
#define AXI4_END_ADDR_14_WIDTH         19                   // 
#define AXI4_END_ADDR_15_OFFSET        0                    // 
#define AXI4_END_ADDR_15_WIDTH         19                   // 
#define AXI4_END_RESP                  20                   // 
#define AXI4_END_RESP_BUFFERABLE       16                   // 
#define AXI4_END_RESP_CMD_AVAIL        17                   // 
#define AXI4_END_RESP_COBUF            22                   // 
#define AXI4_END_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI4_END_RESP_EXPECTED_SPLIT_CNT 25                   // 
#define AXI4_END_RESP_ID               0                    // 
#define AXI4_END_RESP_MEM_LASTDATA     19                   // 
#define AXI4_END_RESP_PORT_LASTDATA    18                   // 
#define AXI4_END_RESP_RCV_SPLIT_CNT    30                   // 
#define AXI4_END_RESP_SPLIT_CMD_DONE   24                   // 
#define AXI4_FIXED_PORT_PRIORITY_ENABLE_OFFSET 0                    // 
#define AXI4_FIXED_PORT_PRIORITY_ENABLE_WIDTH 1                    // 
#define AXI4_PORT_COBUFFIFO_DEPTH      AXI4_CMDFIFO_DEPTH + 32 + 2 // 
#define AXI4_PORT_COBUFFIFO_WIDTH      16                   // 
#define AXI4_PORT_RMODW_LEN_WIDTH      11                   // 
#define AXI4_PORT_RMODW_NUM_BEATS      64                   // 
#define AXI4_PORT_SPLIT_BLOCKS_ADDR_WIDTH 12                   // 
#define AXI4_PORT_SPLIT_MAX_NUM_BLOCKS_WIDTH 5                    // 
#define AXI4_PRDINTFIFO_PTR_WIDTH      AXI4_PRDINTFIFO_LOG2_DEPTH + 1 // 
#define AXI4_R_PRIORITY_OFFSET         8                    // 
#define AXI4_R_PRIORITY_WIDTH          3                    // 
#define AXI4_RANGE_PROT_BITS_0_OFFSET  24                   // 
#define AXI4_RANGE_PROT_BITS_0_WIDTH   2                    // 
#define AXI4_RANGE_PROT_BITS_1_OFFSET  24                   // 
#define AXI4_RANGE_PROT_BITS_1_WIDTH   2                    // 
#define AXI4_RANGE_PROT_BITS_2_OFFSET  24                   // 
#define AXI4_RANGE_PROT_BITS_2_WIDTH   2                    // 
#define AXI4_RANGE_PROT_BITS_3_OFFSET  24                   // 
#define AXI4_RANGE_PROT_BITS_3_WIDTH   2                    // 
#define AXI4_RANGE_PROT_BITS_4_OFFSET  24                   // 
#define AXI4_RANGE_PROT_BITS_4_WIDTH   2                    // 
#define AXI4_RANGE_PROT_BITS_5_OFFSET  24                   // 
#define AXI4_RANGE_PROT_BITS_5_WIDTH   2                    // 
#define AXI4_RANGE_PROT_BITS_6_OFFSET  24                   // 
#define AXI4_RANGE_PROT_BITS_6_WIDTH   2                    // 
#define AXI4_RANGE_PROT_BITS_7_OFFSET  24                   // 
#define AXI4_RANGE_PROT_BITS_7_WIDTH   2                    // 
#define AXI4_RANGE_PROT_BITS_8_OFFSET  24                   // 
#define AXI4_RANGE_PROT_BITS_8_WIDTH   2                    // 
#define AXI4_RANGE_PROT_BITS_9_OFFSET  24                   // 
#define AXI4_RANGE_PROT_BITS_9_WIDTH   2                    // 
#define AXI4_RANGE_PROT_BITS_10_OFFSET 24                   // 
#define AXI4_RANGE_PROT_BITS_10_WIDTH  2                    // 
#define AXI4_RANGE_PROT_BITS_11_OFFSET 24                   // 
#define AXI4_RANGE_PROT_BITS_11_WIDTH  2                    // 
#define AXI4_RANGE_PROT_BITS_12_OFFSET 24                   // 
#define AXI4_RANGE_PROT_BITS_12_WIDTH  2                    // 
#define AXI4_RANGE_PROT_BITS_13_OFFSET 24                   // 
#define AXI4_RANGE_PROT_BITS_13_WIDTH  2                    // 
#define AXI4_RANGE_PROT_BITS_14_OFFSET 24                   // 
#define AXI4_RANGE_PROT_BITS_14_WIDTH  2                    // 
#define AXI4_RANGE_PROT_BITS_15_OFFSET 24                   // 
#define AXI4_RANGE_PROT_BITS_15_WIDTH  2                    // 
#define AXI4_RANGE_RID_CHECK_BITS_0_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_1_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_2_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_3_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_4_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_5_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_6_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_7_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_8_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_9_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_10_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_11_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_12_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_13_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_14_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_15_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_OFFSET 0                    // 
#define AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_0_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_1_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_2_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_3_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_4_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_5_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_6_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_7_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_8_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_9_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_10_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_11_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_12_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_13_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_14_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_15_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_OFFSET 16                   // 
#define AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI4_RATE_SEL_WIDTH            4                    // 
#define AXI4_RDFIFO_LOG2_DEPTH_OFFSET  16                   // 
#define AXI4_RDFIFO_LOG2_DEPTH_WIDTH   8                    // 
#define AXI4_RDFIFO_PTR_WIDTH          AXI4_RDFIFO_LOG2_DEPTH + 1 // 
#define AXI4_RDFIFO_WIDTH              168                  // 
#define AXI4_RESP_RCV_SPLIT_CNT_WIDTH  5                    // 
#define AXI4_RESP_STORAGE_DEPTH        16                   // 
#define AXI4_RESP_STORAGE_PTR_WIDTH    4                    // 
#define AXI4_RESP_STORAGE_WIDTH        35                   // 
#define AXI4_RMODWFIFO_PTR_WIDTH       AXI4_CMDFIFO_PTR_WIDTH  // 
#define AXI4_RMODWFIFO_WIDTH           76                   // 
#define AXI4_START_ADDR_0_OFFSET       8                    // 
#define AXI4_START_ADDR_0_WIDTH        19                   // 
#define AXI4_START_ADDR_1_OFFSET       0                    // 
#define AXI4_START_ADDR_1_WIDTH        19                   // 
#define AXI4_START_ADDR_2_OFFSET       0                    // 
#define AXI4_START_ADDR_2_WIDTH        19                   // 
#define AXI4_START_ADDR_3_OFFSET       0                    // 
#define AXI4_START_ADDR_3_WIDTH        19                   // 
#define AXI4_START_ADDR_4_OFFSET       0                    // 
#define AXI4_START_ADDR_4_WIDTH        19                   // 
#define AXI4_START_ADDR_5_OFFSET       0                    // 
#define AXI4_START_ADDR_5_WIDTH        19                   // 
#define AXI4_START_ADDR_6_OFFSET       0                    // 
#define AXI4_START_ADDR_6_WIDTH        19                   // 
#define AXI4_START_ADDR_7_OFFSET       0                    // 
#define AXI4_START_ADDR_7_WIDTH        19                   // 
#define AXI4_START_ADDR_8_OFFSET       0                    // 
#define AXI4_START_ADDR_8_WIDTH        19                   // 
#define AXI4_START_ADDR_9_OFFSET       0                    // 
#define AXI4_START_ADDR_9_WIDTH        19                   // 
#define AXI4_START_ADDR_10_OFFSET      0                    // 
#define AXI4_START_ADDR_10_WIDTH       19                   // 
#define AXI4_START_ADDR_11_OFFSET      0                    // 
#define AXI4_START_ADDR_11_WIDTH       19                   // 
#define AXI4_START_ADDR_12_OFFSET      0                    // 
#define AXI4_START_ADDR_12_WIDTH       19                   // 
#define AXI4_START_ADDR_13_OFFSET      0                    // 
#define AXI4_START_ADDR_13_WIDTH       19                   // 
#define AXI4_START_ADDR_14_OFFSET      0                    // 
#define AXI4_START_ADDR_14_WIDTH       19                   // 
#define AXI4_START_ADDR_15_OFFSET      0                    // 
#define AXI4_START_ADDR_15_WIDTH       19                   // 
#define AXI4_START_RESP                21                   // 
#define AXI4_START_RESP_BUFFERABLE     16                   // 
#define AXI4_START_RESP_CMD_AVAIL      17                   // 
#define AXI4_START_RESP_COBUF          22                   // 
#define AXI4_START_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI4_START_RESP_EXPECTED_SPLIT_CNT 29                   // 
#define AXI4_START_RESP_ID             15                   // 
#define AXI4_START_RESP_MEM_LASTDATA   19                   // 
#define AXI4_START_RESP_PORT_LASTDATA  18                   // 
#define AXI4_START_RESP_RCV_SPLIT_CNT  34                   // 
#define AXI4_START_RESP_SPLIT_CMD_DONE 24                   // 
#define AXI4_STATS_REP_PERIOD_WIDTH    4                    // 
#define AXI4_TRANS_WRFIFO_LOG2_DEPTH_OFFSET 0                    // 
#define AXI4_TRANS_WRFIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI4_TRANS_WRFIFO_PTR_WIDTH    AXI4_TRANS_WRFIFO_LOG2_DEPTH + 1 // 
#define AXI4_W_PRIORITY_OFFSET         16                   // 
#define AXI4_W_PRIORITY_WIDTH          3                    // 
#define AXI4_WR_ARRAY_DEPTH_WIDTH      4                    // 
#define AXI4_WR_ARRAY_LOG2_DEPTH_OFFSET 24                   // 
#define AXI4_WR_ARRAY_LOG2_DEPTH_WIDTH 8                    // 
#define AXI4_WR_ARRAY_PTR_WIDTH        AXI4_WR_ARRAY_LOG2_DEPTH // 
#define AXI4_WR_ARRAY_WIDTH            179                  // 
#define AXI4_WR_DAGR_DOUT_WIDTH        179                  // 
#define AXI4_WR_DAGR_WRFIFO_WIDTH      187                  // 
#define AXI4_WRCMD_PROC_FIFO_LOG2_DEPTH_OFFSET 8                    // 
#define AXI4_WRCMD_PROC_FIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI4_WRCMD_PROC_FIFO_PTR_WIDTH AXI4_WRCMD_PROC_FIFO_LOG2_DEPTH + 1 // 
#define AXI5_ADDR_WIDTH                33                   // 
#define AXI5_ADDRESS_RANGE_ENABLE_OFFSET 0                    // 
#define AXI5_ADDRESS_RANGE_ENABLE_WIDTH 1                    // 
#define AXI5_ALL_STROBES_USED_ENABLE_OFFSET 24                   // 
#define AXI5_ALL_STROBES_USED_ENABLE_WIDTH 1                    // 
#define AXI5_BDW_OFFSET                0                    // 
#define AXI5_BDW_OVFLOW_OFFSET         8                    // 
#define AXI5_BDW_OVFLOW_WIDTH          1                    // 
#define AXI5_BDW_WIDTH                 7                    // 
#define AXI5_CFG_PRT_DATAIFO_SRAM_WIDTH 173                  // 
#define AXI5_CFG_PRT_DATIFO_AGR_WIDTH  173                  // 
#define AXI5_CFG_PRT_RDFIFO_WIDTH      168                  // 
#define AXI5_CMDFIFO_DEPTH             8                    // 
#define AXI5_CMDFIFO_DEPTH_WIDTH       3                    // 
#define AXI5_CMDFIFO_LOG2_DEPTH_OFFSET 16                   // 
#define AXI5_CMDFIFO_LOG2_DEPTH_WIDTH  8                    // 
#define AXI5_CMDFIFO_PTR_WIDTH         AXI5_CMDFIFO_LOG2_DEPTH + 1 // 
#define AXI5_CMDFIFO_WIDTH             85                   // 
#define AXI5_CURRENT_BDW_ADDR          856                  // 
#define AXI5_CURRENT_BDW_OFFSET        16                   // 
#define AXI5_CURRENT_BDW_WIDTH         7                    // 
#define AXI5_DB_RESPFIFO_PTR_WIDTH     5                    // 
#define AXI5_DB_RESPFIFO_WIDTH         18                   // 
#define AXI5_DB_SPLIT_TRFIFO_PTR_WIDTH 5                    // 
#define AXI5_DB_SPLIT_TRFIFO_WIDTH     17                   // 
#define AXI5_END_ADDR_0_OFFSET         0                    // 
#define AXI5_END_ADDR_0_WIDTH          19                   // 
#define AXI5_END_ADDR_1_OFFSET         0                    // 
#define AXI5_END_ADDR_1_WIDTH          19                   // 
#define AXI5_END_ADDR_2_OFFSET         0                    // 
#define AXI5_END_ADDR_2_WIDTH          19                   // 
#define AXI5_END_ADDR_3_OFFSET         0                    // 
#define AXI5_END_ADDR_3_WIDTH          19                   // 
#define AXI5_END_ADDR_4_OFFSET         0                    // 
#define AXI5_END_ADDR_4_WIDTH          19                   // 
#define AXI5_END_ADDR_5_OFFSET         0                    // 
#define AXI5_END_ADDR_5_WIDTH          19                   // 
#define AXI5_END_ADDR_6_OFFSET         0                    // 
#define AXI5_END_ADDR_6_WIDTH          19                   // 
#define AXI5_END_ADDR_7_OFFSET         0                    // 
#define AXI5_END_ADDR_7_WIDTH          19                   // 
#define AXI5_END_ADDR_8_OFFSET         0                    // 
#define AXI5_END_ADDR_8_WIDTH          19                   // 
#define AXI5_END_ADDR_9_OFFSET         0                    // 
#define AXI5_END_ADDR_9_WIDTH          19                   // 
#define AXI5_END_ADDR_10_OFFSET        0                    // 
#define AXI5_END_ADDR_10_WIDTH         19                   // 
#define AXI5_END_ADDR_11_OFFSET        0                    // 
#define AXI5_END_ADDR_11_WIDTH         19                   // 
#define AXI5_END_ADDR_12_OFFSET        0                    // 
#define AXI5_END_ADDR_12_WIDTH         19                   // 
#define AXI5_END_ADDR_13_OFFSET        0                    // 
#define AXI5_END_ADDR_13_WIDTH         19                   // 
#define AXI5_END_ADDR_14_OFFSET        0                    // 
#define AXI5_END_ADDR_14_WIDTH         19                   // 
#define AXI5_END_ADDR_15_OFFSET        0                    // 
#define AXI5_END_ADDR_15_WIDTH         19                   // 
#define AXI5_END_RESP                  20                   // 
#define AXI5_END_RESP_BUFFERABLE       16                   // 
#define AXI5_END_RESP_CMD_AVAIL        17                   // 
#define AXI5_END_RESP_COBUF            22                   // 
#define AXI5_END_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI5_END_RESP_EXPECTED_SPLIT_CNT 25                   // 
#define AXI5_END_RESP_ID               0                    // 
#define AXI5_END_RESP_MEM_LASTDATA     19                   // 
#define AXI5_END_RESP_PORT_LASTDATA    18                   // 
#define AXI5_END_RESP_RCV_SPLIT_CNT    30                   // 
#define AXI5_END_RESP_SPLIT_CMD_DONE   24                   // 
#define AXI5_FIXED_PORT_PRIORITY_ENABLE_OFFSET 0                    // 
#define AXI5_FIXED_PORT_PRIORITY_ENABLE_WIDTH 1                    // 
#define AXI5_PORT_COBUFFIFO_DEPTH      AXI5_CMDFIFO_DEPTH + 32 + 2 // 
#define AXI5_PORT_COBUFFIFO_WIDTH      16                   // 
#define AXI5_PORT_RMODW_LEN_WIDTH      11                   // 
#define AXI5_PORT_RMODW_NUM_BEATS      64                   // 
#define AXI5_PORT_SPLIT_BLOCKS_ADDR_WIDTH 12                   // 
#define AXI5_PORT_SPLIT_MAX_NUM_BLOCKS_WIDTH 5                    // 
#define AXI5_PRDINTFIFO_PTR_WIDTH      AXI5_PRDINTFIFO_LOG2_DEPTH + 1 // 
#define AXI5_R_PRIORITY_OFFSET         8                    // 
#define AXI5_R_PRIORITY_WIDTH          3                    // 
#define AXI5_RANGE_PROT_BITS_0_OFFSET  24                   // 
#define AXI5_RANGE_PROT_BITS_0_WIDTH   2                    // 
#define AXI5_RANGE_PROT_BITS_1_OFFSET  24                   // 
#define AXI5_RANGE_PROT_BITS_1_WIDTH   2                    // 
#define AXI5_RANGE_PROT_BITS_2_OFFSET  24                   // 
#define AXI5_RANGE_PROT_BITS_2_WIDTH   2                    // 
#define AXI5_RANGE_PROT_BITS_3_OFFSET  24                   // 
#define AXI5_RANGE_PROT_BITS_3_WIDTH   2                    // 
#define AXI5_RANGE_PROT_BITS_4_OFFSET  24                   // 
#define AXI5_RANGE_PROT_BITS_4_WIDTH   2                    // 
#define AXI5_RANGE_PROT_BITS_5_OFFSET  24                   // 
#define AXI5_RANGE_PROT_BITS_5_WIDTH   2                    // 
#define AXI5_RANGE_PROT_BITS_6_OFFSET  24                   // 
#define AXI5_RANGE_PROT_BITS_6_WIDTH   2                    // 
#define AXI5_RANGE_PROT_BITS_7_OFFSET  24                   // 
#define AXI5_RANGE_PROT_BITS_7_WIDTH   2                    // 
#define AXI5_RANGE_PROT_BITS_8_OFFSET  24                   // 
#define AXI5_RANGE_PROT_BITS_8_WIDTH   2                    // 
#define AXI5_RANGE_PROT_BITS_9_OFFSET  24                   // 
#define AXI5_RANGE_PROT_BITS_9_WIDTH   2                    // 
#define AXI5_RANGE_PROT_BITS_10_OFFSET 24                   // 
#define AXI5_RANGE_PROT_BITS_10_WIDTH  2                    // 
#define AXI5_RANGE_PROT_BITS_11_OFFSET 24                   // 
#define AXI5_RANGE_PROT_BITS_11_WIDTH  2                    // 
#define AXI5_RANGE_PROT_BITS_12_OFFSET 24                   // 
#define AXI5_RANGE_PROT_BITS_12_WIDTH  2                    // 
#define AXI5_RANGE_PROT_BITS_13_OFFSET 24                   // 
#define AXI5_RANGE_PROT_BITS_13_WIDTH  2                    // 
#define AXI5_RANGE_PROT_BITS_14_OFFSET 24                   // 
#define AXI5_RANGE_PROT_BITS_14_WIDTH  2                    // 
#define AXI5_RANGE_PROT_BITS_15_OFFSET 24                   // 
#define AXI5_RANGE_PROT_BITS_15_WIDTH  2                    // 
#define AXI5_RANGE_RID_CHECK_BITS_0_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_1_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_2_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_3_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_4_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_5_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_6_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_7_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_8_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_9_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_10_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_11_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_12_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_13_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_14_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_15_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_OFFSET 0                    // 
#define AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_0_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_1_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_2_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_3_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_4_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_5_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_6_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_7_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_8_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_9_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_10_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_11_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_12_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_13_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_14_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_15_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_OFFSET 16                   // 
#define AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI5_RATE_SEL_WIDTH            4                    // 
#define AXI5_RDFIFO_LOG2_DEPTH_OFFSET  24                   // 
#define AXI5_RDFIFO_LOG2_DEPTH_WIDTH   8                    // 
#define AXI5_RDFIFO_PTR_WIDTH          AXI5_RDFIFO_LOG2_DEPTH + 1 // 
#define AXI5_RDFIFO_WIDTH              168                  // 
#define AXI5_RESP_RCV_SPLIT_CNT_WIDTH  5                    // 
#define AXI5_RESP_STORAGE_DEPTH        16                   // 
#define AXI5_RESP_STORAGE_PTR_WIDTH    4                    // 
#define AXI5_RESP_STORAGE_WIDTH        35                   // 
#define AXI5_RMODWFIFO_PTR_WIDTH       AXI5_CMDFIFO_PTR_WIDTH  // 
#define AXI5_RMODWFIFO_WIDTH           76                   // 
#define AXI5_START_ADDR_0_OFFSET       8                    // 
#define AXI5_START_ADDR_0_WIDTH        19                   // 
#define AXI5_START_ADDR_1_OFFSET       0                    // 
#define AXI5_START_ADDR_1_WIDTH        19                   // 
#define AXI5_START_ADDR_2_OFFSET       0                    // 
#define AXI5_START_ADDR_2_WIDTH        19                   // 
#define AXI5_START_ADDR_3_OFFSET       0                    // 
#define AXI5_START_ADDR_3_WIDTH        19                   // 
#define AXI5_START_ADDR_4_OFFSET       0                    // 
#define AXI5_START_ADDR_4_WIDTH        19                   // 
#define AXI5_START_ADDR_5_OFFSET       0                    // 
#define AXI5_START_ADDR_5_WIDTH        19                   // 
#define AXI5_START_ADDR_6_OFFSET       0                    // 
#define AXI5_START_ADDR_6_WIDTH        19                   // 
#define AXI5_START_ADDR_7_OFFSET       0                    // 
#define AXI5_START_ADDR_7_WIDTH        19                   // 
#define AXI5_START_ADDR_8_OFFSET       0                    // 
#define AXI5_START_ADDR_8_WIDTH        19                   // 
#define AXI5_START_ADDR_9_OFFSET       0                    // 
#define AXI5_START_ADDR_9_WIDTH        19                   // 
#define AXI5_START_ADDR_10_OFFSET      0                    // 
#define AXI5_START_ADDR_10_WIDTH       19                   // 
#define AXI5_START_ADDR_11_OFFSET      0                    // 
#define AXI5_START_ADDR_11_WIDTH       19                   // 
#define AXI5_START_ADDR_12_OFFSET      0                    // 
#define AXI5_START_ADDR_12_WIDTH       19                   // 
#define AXI5_START_ADDR_13_OFFSET      0                    // 
#define AXI5_START_ADDR_13_WIDTH       19                   // 
#define AXI5_START_ADDR_14_OFFSET      0                    // 
#define AXI5_START_ADDR_14_WIDTH       19                   // 
#define AXI5_START_ADDR_15_OFFSET      0                    // 
#define AXI5_START_ADDR_15_WIDTH       19                   // 
#define AXI5_START_RESP                21                   // 
#define AXI5_START_RESP_BUFFERABLE     16                   // 
#define AXI5_START_RESP_CMD_AVAIL      17                   // 
#define AXI5_START_RESP_COBUF          22                   // 
#define AXI5_START_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI5_START_RESP_EXPECTED_SPLIT_CNT 29                   // 
#define AXI5_START_RESP_ID             15                   // 
#define AXI5_START_RESP_MEM_LASTDATA   19                   // 
#define AXI5_START_RESP_PORT_LASTDATA  18                   // 
#define AXI5_START_RESP_RCV_SPLIT_CNT  34                   // 
#define AXI5_START_RESP_SPLIT_CMD_DONE 24                   // 
#define AXI5_STATS_REP_PERIOD_WIDTH    4                    // 
#define AXI5_TRANS_WRFIFO_LOG2_DEPTH_OFFSET 8                    // 
#define AXI5_TRANS_WRFIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI5_TRANS_WRFIFO_PTR_WIDTH    AXI5_TRANS_WRFIFO_LOG2_DEPTH + 1 // 
#define AXI5_W_PRIORITY_OFFSET         16                   // 
#define AXI5_W_PRIORITY_WIDTH          3                    // 
#define AXI5_WR_ARRAY_DEPTH_WIDTH      4                    // 
#define AXI5_WR_ARRAY_LOG2_DEPTH_OFFSET 0                    // 
#define AXI5_WR_ARRAY_LOG2_DEPTH_WIDTH 8                    // 
#define AXI5_WR_ARRAY_PTR_WIDTH        AXI5_WR_ARRAY_LOG2_DEPTH // 
#define AXI5_WR_ARRAY_WIDTH            179                  // 
#define AXI5_WR_DAGR_DOUT_WIDTH        179                  // 
#define AXI5_WR_DAGR_WRFIFO_WIDTH      187                  // 
#define AXI5_WRCMD_PROC_FIFO_LOG2_DEPTH_OFFSET 16                   // 
#define AXI5_WRCMD_PROC_FIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI5_WRCMD_PROC_FIFO_PTR_WIDTH AXI5_WRCMD_PROC_FIFO_LOG2_DEPTH + 1 // 
#define AXI6_ADDR_WIDTH                33                   // 
#define AXI6_ADDRESS_RANGE_ENABLE_OFFSET 0                    // 
#define AXI6_ADDRESS_RANGE_ENABLE_WIDTH 1                    // 
#define AXI6_ALL_STROBES_USED_ENABLE_OFFSET 24                   // 
#define AXI6_ALL_STROBES_USED_ENABLE_WIDTH 1                    // 
#define AXI6_BDW_OFFSET                24                   // 
#define AXI6_BDW_OVFLOW_OFFSET         0                    // 
#define AXI6_BDW_OVFLOW_WIDTH          1                    // 
#define AXI6_BDW_WIDTH                 7                    // 
#define AXI6_CFG_PRT_DATAIFO_SRAM_WIDTH 173                  // 
#define AXI6_CFG_PRT_DATIFO_AGR_WIDTH  173                  // 
#define AXI6_CFG_PRT_RDFIFO_WIDTH      168                  // 
#define AXI6_CMDFIFO_DEPTH             8                    // 
#define AXI6_CMDFIFO_DEPTH_WIDTH       3                    // 
#define AXI6_CMDFIFO_LOG2_DEPTH_OFFSET 24                   // 
#define AXI6_CMDFIFO_LOG2_DEPTH_WIDTH  8                    // 
#define AXI6_CMDFIFO_PTR_WIDTH         AXI6_CMDFIFO_LOG2_DEPTH + 1 // 
#define AXI6_CMDFIFO_WIDTH             85                   // 
#define AXI6_CURRENT_BDW_ADDR          857                  // 
#define AXI6_CURRENT_BDW_OFFSET        8                    // 
#define AXI6_CURRENT_BDW_WIDTH         7                    // 
#define AXI6_DB_RESPFIFO_PTR_WIDTH     5                    // 
#define AXI6_DB_RESPFIFO_WIDTH         18                   // 
#define AXI6_DB_SPLIT_TRFIFO_PTR_WIDTH 5                    // 
#define AXI6_DB_SPLIT_TRFIFO_WIDTH     17                   // 
#define AXI6_END_ADDR_0_OFFSET         0                    // 
#define AXI6_END_ADDR_0_WIDTH          19                   // 
#define AXI6_END_ADDR_1_OFFSET         0                    // 
#define AXI6_END_ADDR_1_WIDTH          19                   // 
#define AXI6_END_ADDR_2_OFFSET         0                    // 
#define AXI6_END_ADDR_2_WIDTH          19                   // 
#define AXI6_END_ADDR_3_OFFSET         0                    // 
#define AXI6_END_ADDR_3_WIDTH          19                   // 
#define AXI6_END_ADDR_4_OFFSET         0                    // 
#define AXI6_END_ADDR_4_WIDTH          19                   // 
#define AXI6_END_ADDR_5_OFFSET         0                    // 
#define AXI6_END_ADDR_5_WIDTH          19                   // 
#define AXI6_END_ADDR_6_OFFSET         0                    // 
#define AXI6_END_ADDR_6_WIDTH          19                   // 
#define AXI6_END_ADDR_7_OFFSET         0                    // 
#define AXI6_END_ADDR_7_WIDTH          19                   // 
#define AXI6_END_ADDR_8_OFFSET         0                    // 
#define AXI6_END_ADDR_8_WIDTH          19                   // 
#define AXI6_END_ADDR_9_OFFSET         0                    // 
#define AXI6_END_ADDR_9_WIDTH          19                   // 
#define AXI6_END_ADDR_10_OFFSET        0                    // 
#define AXI6_END_ADDR_10_WIDTH         19                   // 
#define AXI6_END_ADDR_11_OFFSET        0                    // 
#define AXI6_END_ADDR_11_WIDTH         19                   // 
#define AXI6_END_ADDR_12_OFFSET        0                    // 
#define AXI6_END_ADDR_12_WIDTH         19                   // 
#define AXI6_END_ADDR_13_OFFSET        0                    // 
#define AXI6_END_ADDR_13_WIDTH         19                   // 
#define AXI6_END_ADDR_14_OFFSET        0                    // 
#define AXI6_END_ADDR_14_WIDTH         19                   // 
#define AXI6_END_ADDR_15_OFFSET        0                    // 
#define AXI6_END_ADDR_15_WIDTH         19                   // 
#define AXI6_END_RESP                  20                   // 
#define AXI6_END_RESP_BUFFERABLE       16                   // 
#define AXI6_END_RESP_CMD_AVAIL        17                   // 
#define AXI6_END_RESP_COBUF            22                   // 
#define AXI6_END_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI6_END_RESP_EXPECTED_SPLIT_CNT 25                   // 
#define AXI6_END_RESP_ID               0                    // 
#define AXI6_END_RESP_MEM_LASTDATA     19                   // 
#define AXI6_END_RESP_PORT_LASTDATA    18                   // 
#define AXI6_END_RESP_RCV_SPLIT_CNT    30                   // 
#define AXI6_END_RESP_SPLIT_CMD_DONE   24                   // 
#define AXI6_FIXED_PORT_PRIORITY_ENABLE_OFFSET 0                    // 
#define AXI6_FIXED_PORT_PRIORITY_ENABLE_WIDTH 1                    // 
#define AXI6_PORT_COBUFFIFO_DEPTH      AXI6_CMDFIFO_DEPTH + 32 + 2 // 
#define AXI6_PORT_COBUFFIFO_WIDTH      16                   // 
#define AXI6_PORT_RMODW_LEN_WIDTH      11                   // 
#define AXI6_PORT_RMODW_NUM_BEATS      64                   // 
#define AXI6_PORT_SPLIT_BLOCKS_ADDR_WIDTH 12                   // 
#define AXI6_PORT_SPLIT_MAX_NUM_BLOCKS_WIDTH 5                    // 
#define AXI6_PRDINTFIFO_PTR_WIDTH      AXI6_PRDINTFIFO_LOG2_DEPTH + 1 // 
#define AXI6_R_PRIORITY_OFFSET         8                    // 
#define AXI6_R_PRIORITY_WIDTH          3                    // 
#define AXI6_RANGE_PROT_BITS_0_OFFSET  24                   // 
#define AXI6_RANGE_PROT_BITS_0_WIDTH   2                    // 
#define AXI6_RANGE_PROT_BITS_1_OFFSET  24                   // 
#define AXI6_RANGE_PROT_BITS_1_WIDTH   2                    // 
#define AXI6_RANGE_PROT_BITS_2_OFFSET  24                   // 
#define AXI6_RANGE_PROT_BITS_2_WIDTH   2                    // 
#define AXI6_RANGE_PROT_BITS_3_OFFSET  24                   // 
#define AXI6_RANGE_PROT_BITS_3_WIDTH   2                    // 
#define AXI6_RANGE_PROT_BITS_4_OFFSET  24                   // 
#define AXI6_RANGE_PROT_BITS_4_WIDTH   2                    // 
#define AXI6_RANGE_PROT_BITS_5_OFFSET  24                   // 
#define AXI6_RANGE_PROT_BITS_5_WIDTH   2                    // 
#define AXI6_RANGE_PROT_BITS_6_OFFSET  24                   // 
#define AXI6_RANGE_PROT_BITS_6_WIDTH   2                    // 
#define AXI6_RANGE_PROT_BITS_7_OFFSET  24                   // 
#define AXI6_RANGE_PROT_BITS_7_WIDTH   2                    // 
#define AXI6_RANGE_PROT_BITS_8_OFFSET  24                   // 
#define AXI6_RANGE_PROT_BITS_8_WIDTH   2                    // 
#define AXI6_RANGE_PROT_BITS_9_OFFSET  24                   // 
#define AXI6_RANGE_PROT_BITS_9_WIDTH   2                    // 
#define AXI6_RANGE_PROT_BITS_10_OFFSET 24                   // 
#define AXI6_RANGE_PROT_BITS_10_WIDTH  2                    // 
#define AXI6_RANGE_PROT_BITS_11_OFFSET 24                   // 
#define AXI6_RANGE_PROT_BITS_11_WIDTH  2                    // 
#define AXI6_RANGE_PROT_BITS_12_OFFSET 24                   // 
#define AXI6_RANGE_PROT_BITS_12_WIDTH  2                    // 
#define AXI6_RANGE_PROT_BITS_13_OFFSET 24                   // 
#define AXI6_RANGE_PROT_BITS_13_WIDTH  2                    // 
#define AXI6_RANGE_PROT_BITS_14_OFFSET 24                   // 
#define AXI6_RANGE_PROT_BITS_14_WIDTH  2                    // 
#define AXI6_RANGE_PROT_BITS_15_OFFSET 24                   // 
#define AXI6_RANGE_PROT_BITS_15_WIDTH  2                    // 
#define AXI6_RANGE_RID_CHECK_BITS_0_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_1_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_2_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_3_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_4_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_5_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_6_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_7_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_8_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_9_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_10_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_11_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_12_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_13_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_14_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_15_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_OFFSET 0                    // 
#define AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_0_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_0_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_1_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_1_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_2_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_2_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_3_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_3_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_4_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_4_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_5_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_5_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_6_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_6_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_7_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_7_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_8_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_8_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_9_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_9_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_10_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_10_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_11_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_11_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_12_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_12_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_13_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_13_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_14_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_14_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_15_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_15_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_0_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_1_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_2_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_3_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_4_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_5_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_6_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_7_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_8_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_9_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_10_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_11_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_12_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_13_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_14_WIDTH 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_OFFSET 16                   // 
#define AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_15_WIDTH 16                   // 
#define AXI6_RATE_SEL_WIDTH            4                    // 
#define AXI6_RDFIFO_LOG2_DEPTH_OFFSET  0                    // 
#define AXI6_RDFIFO_LOG2_DEPTH_WIDTH   8                    // 
#define AXI6_RDFIFO_PTR_WIDTH          AXI6_RDFIFO_LOG2_DEPTH + 1 // 
#define AXI6_RDFIFO_WIDTH              168                  // 
#define AXI6_RESP_RCV_SPLIT_CNT_WIDTH  5                    // 
#define AXI6_RESP_STORAGE_DEPTH        16                   // 
#define AXI6_RESP_STORAGE_PTR_WIDTH    4                    // 
#define AXI6_RESP_STORAGE_WIDTH        35                   // 
#define AXI6_RMODWFIFO_PTR_WIDTH       AXI6_CMDFIFO_PTR_WIDTH  // 
#define AXI6_RMODWFIFO_WIDTH           76                   // 
#define AXI6_START_ADDR_0_OFFSET       8                    // 
#define AXI6_START_ADDR_0_WIDTH        19                   // 
#define AXI6_START_ADDR_1_OFFSET       0                    // 
#define AXI6_START_ADDR_1_WIDTH        19                   // 
#define AXI6_START_ADDR_2_OFFSET       0                    // 
#define AXI6_START_ADDR_2_WIDTH        19                   // 
#define AXI6_START_ADDR_3_OFFSET       0                    // 
#define AXI6_START_ADDR_3_WIDTH        19                   // 
#define AXI6_START_ADDR_4_OFFSET       0                    // 
#define AXI6_START_ADDR_4_WIDTH        19                   // 
#define AXI6_START_ADDR_5_OFFSET       0                    // 
#define AXI6_START_ADDR_5_WIDTH        19                   // 
#define AXI6_START_ADDR_6_OFFSET       0                    // 
#define AXI6_START_ADDR_6_WIDTH        19                   // 
#define AXI6_START_ADDR_7_OFFSET       0                    // 
#define AXI6_START_ADDR_7_WIDTH        19                   // 
#define AXI6_START_ADDR_8_OFFSET       0                    // 
#define AXI6_START_ADDR_8_WIDTH        19                   // 
#define AXI6_START_ADDR_9_OFFSET       0                    // 
#define AXI6_START_ADDR_9_WIDTH        19                   // 
#define AXI6_START_ADDR_10_OFFSET      0                    // 
#define AXI6_START_ADDR_10_WIDTH       19                   // 
#define AXI6_START_ADDR_11_OFFSET      0                    // 
#define AXI6_START_ADDR_11_WIDTH       19                   // 
#define AXI6_START_ADDR_12_OFFSET      0                    // 
#define AXI6_START_ADDR_12_WIDTH       19                   // 
#define AXI6_START_ADDR_13_OFFSET      0                    // 
#define AXI6_START_ADDR_13_WIDTH       19                   // 
#define AXI6_START_ADDR_14_OFFSET      0                    // 
#define AXI6_START_ADDR_14_WIDTH       19                   // 
#define AXI6_START_ADDR_15_OFFSET      0                    // 
#define AXI6_START_ADDR_15_WIDTH       19                   // 
#define AXI6_START_RESP                21                   // 
#define AXI6_START_RESP_BUFFERABLE     16                   // 
#define AXI6_START_RESP_CMD_AVAIL      17                   // 
#define AXI6_START_RESP_COBUF          22                   // 
#define AXI6_START_RESP_DB_PORT_LASTDATA 23                   // 
#define AXI6_START_RESP_EXPECTED_SPLIT_CNT 29                   // 
#define AXI6_START_RESP_ID             15                   // 
#define AXI6_START_RESP_MEM_LASTDATA   19                   // 
#define AXI6_START_RESP_PORT_LASTDATA  18                   // 
#define AXI6_START_RESP_RCV_SPLIT_CNT  34                   // 
#define AXI6_START_RESP_SPLIT_CMD_DONE 24                   // 
#define AXI6_STATS_REP_PERIOD_WIDTH    4                    // 
#define AXI6_TRANS_WRFIFO_LOG2_DEPTH_OFFSET 16                   // 
#define AXI6_TRANS_WRFIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI6_TRANS_WRFIFO_PTR_WIDTH    AXI6_TRANS_WRFIFO_LOG2_DEPTH + 1 // 
#define AXI6_W_PRIORITY_OFFSET         16                   // 
#define AXI6_W_PRIORITY_WIDTH          3                    // 
#define AXI6_WR_ARRAY_DEPTH_WIDTH      4                    // 
#define AXI6_WR_ARRAY_LOG2_DEPTH_OFFSET 8                    // 
#define AXI6_WR_ARRAY_LOG2_DEPTH_WIDTH 8                    // 
#define AXI6_WR_ARRAY_PTR_WIDTH        AXI6_WR_ARRAY_LOG2_DEPTH // 
#define AXI6_WR_ARRAY_WIDTH            179                  // 
#define AXI6_WR_DAGR_DOUT_WIDTH        179                  // 
#define AXI6_WR_DAGR_WRFIFO_WIDTH      187                  // 
#define AXI6_WRCMD_PROC_FIFO_LOG2_DEPTH_OFFSET 24                   // 
#define AXI6_WRCMD_PROC_FIFO_LOG2_DEPTH_WIDTH 8                    // 
#define AXI6_WRCMD_PROC_FIFO_PTR_WIDTH AXI6_WRCMD_PROC_FIFO_LOG2_DEPTH + 1 // 
#define AXI_ADDR_PARITY_WIDTH          5                    // 
#define AXI_ADDR_WIDTH                 33                   // 
#define AXI_ADDRESS_RANGE_ENABLE_WIDTH 1                    // 
#define AXI_ALL_STROBES_USED_ENABLE_WIDTH 1                    // 
#define AXI_ARSNOOP_WIDTH              4                    // 
#define AXI_BEAT_WIDTH                 4                    // 
#define AXI_BURST_PARITY_WIDTH         1                    // 
#define AXI_BURST_WIDTH                2                    // 
#define AXI_CACHE_WIDTH                4                    // 
#define AXI_CLK                        0.94                 // 
#define AXI_CLK_CYC                    0.94 * TSCALE       // 
#define AXI_EXCLUSIVE                  1   // 
#define AXI_FIXED                      0 // 
#define AXI_FIXED_PORT_PRIORITY_ENABLE_WIDTH 1                    // 
#define AXI_ID_CHECK_BITS_ID_LOOKUP_WIDTH 16                   // 
#define AXI_ID_CHECK_BITS_WIDTH        16                   // 
#define AXI_ID_PARITY_WIDTH            2                    // 
#define AXI_ID_WIDTH                   16                   // 
#define AXI_INCR                       1 // 
#define AXI_LEN_PARITY_WIDTH           1                    // 
#define AXI_LEN_WIDTH                  8                    // 
#define AXI_LOCK_WIDTH                 1                    // 
#define AXI_PARITY_ERR_P               245                  // Start position of the flags indicating the parity errors in AXI port.
#define AXI_PARITY_ERR_WIDTH           1                    // 
#define AXI_PARITY_WIDTH               16                   // 
#define AXI_PARITY_WRDATA_CTRL_WIDTH   2                    // 
#define AXI_PROT_WIDTH                 2                    // 
#define AXI_QOS_PARITY_WIDTH           1                    // 
#define AXI_REGION_WIDTH               4                    // 
#define AXI_RESP_WIDTH                 2                    // 
#define AXI_RESPONSE_OK                0  // 
#define AXI_SIZE_PARITY_WIDTH          1                    // 
#define AXI_SIZE_VAL_WIDTH             8                    // 
#define AXI_SIZE_WIDTH                 3                    // 
#define AXI_WRAP                       2 // 
#define AXI_WRITE_INTERLEAVING_DEPTH   1                    // 
#define B2B_PLACEMENT_REQ_P            241                  // Start position of the flag indicating the command is part og b2b sequence
#define BANK_ACTIVATE_2TICK_COUNT_OFFSET 8                    // 
#define BANK_ACTIVATE_2TICK_COUNT_WIDTH 3                    // 
#define BANK_ACTIVATE_4TICK_COUNT_OFFSET 0                    // 
#define BANK_ACTIVATE_4TICK_COUNT_WIDTH 3                    // 
#define BANK_ADDR_INTLV_EN_WIDTH       2                    // 
#define BANK_DIFF_0_ADDR               308                  // 
#define BANK_DIFF_0_OFFSET             16                   // 
#define BANK_DIFF_0_WIDTH              2                    // 
#define BANK_DIFF_1_ADDR               308                  // 
#define BANK_DIFF_1_OFFSET             24                   // 
#define BANK_DIFF_1_WIDTH              2                    // 
#define BANK_DIFF_WIDTH                2                    // 
#define BANK_GROUP_WIDTH               1                    // 
#define BANK_SPLIT_EN_OFFSET           24                   // 
#define BANK_SPLIT_EN_WIDTH            1                    // 
#define BANK_START_BIT_OFFSET          8                    // 
#define BANK_START_BIT_WIDTH           5                    // 
#define BANK_WIDTH                     3                    // width of DRAM bank bus used in internal controller logic.
#define BDW_WIDTH                      7                    // 
#define BEAT_SIZE_P                    236                  // Start position of beat size in command queue register
#define BEAT_WIDTH                     4                    // 
#define BIST_ADDR_CHECK_WIDTH          1                    // 
#define BIST_DATA_CHECK_OFFSET         0                    // 
#define BIST_DATA_CHECK_WIDTH          1                    // 
#define BIST_DATA_MASK_OFFSET          0                    // 
#define BIST_DATA_MASK_WIDTH           64                   // 
#define BIST_DATA_PATTERN_OFFSET       0                    // 
#define BIST_DATA_PATTERN_WIDTH        128                  // 
#define BIST_DATA_WIDTH                128                  // 
#define BIST_DONE_WIDTH                1                    // 
#define BIST_ERR_COUNT_OFFSET          0                    // 
#define BIST_ERR_COUNT_WIDTH           12                   // 
#define BIST_ERR_STOP_OFFSET           8                    // 
#define BIST_ERR_STOP_WIDTH            12                   // 
#define BIST_EXP_DATA_OFFSET           0                    // 
#define BIST_FAIL_ADDR_OFFSET          0                    // 
#define BIST_FAIL_ADDR_WIDTH           33                   // 
#define BIST_FAIL_DATA_OFFSET          0                    // 
#define BIST_GO_WIDTH                  1                    // 
#define BIST_NUM_OF_BG_WIDTH           5                    // 
#define BIST_RD_FIFO_DEPTH             95                   // 
#define BIST_RD_FIFO_DEPTH_WIDTH       7                    // 
#define BIST_RESULT_OFFSET             16                   // 
#define BIST_RESULT_WIDTH              1                    // 
#define BIST_RESULT_WIDTH_INT          2                    // 
#define BIST_RET_STATE_EXIT_WIDTH      1                    // 
#define BIST_RET_STATE_OFFSET          0                    // 
#define BIST_RET_STATE_WIDTH           1                    // 
#define BIST_START_ADDRESS_OFFSET      0                    // 
#define BIST_START_ADDRESS_WIDTH       33                   // 
#define BIST_TEST_MODE_OFFSET          0                    // 
#define BIST_TEST_MODE_WIDTH           3                    // 
#define BIST_WRD_ADDR_WIDTH            33                   // 
#define BITS_PER_SLICE                 8                    // 
#define BL_CACK_WIDTH                  5                    // 
#define BL_MCCK_WIDTH                  5                    // 
#define BOOT_CLK                       20.0*TSCALE         // 
#define BST_ADDR_LOWER                 1                    // 
#define BST_ADDR_UPPER                 4                    // 
#define BST_ADDR_WIDTH                 4                    // 
#define BST_LAT_WIDTH                  5                    // Width of latency required for the maximum burst.
#define BSTLEN_ADDR                    65                   // 
#define BSTLEN_OFFSET                  24                   // 
#define BSTLEN_WIDTH                   6                    // 
#define BSTOF2                         1   // Burst of 2
#define BSTOF4                         2   // Burst of 4
#define BSTOF8                         3   // Burst of 8
#define BSTOF16                        4   // Burst of 16
#define BSTOF32                        5   // Burst of 32
#define BURST_ADDRESS_MASK_WIDTH       10                   // number of bit needed for param_gen_burst_address_mask_width
#define BURST_PARITY_ERR_BIT           5                    // 
#define BUS_ARB_WIDTH                  3                    // 
#define BYTE_P_USERWORD                16                   // 
#define BYTE_PER_CW                    16                   // 
#define BYTE_WIDTH                     3                    // number of bits of address that affect a single word.
#define BYTES_PER_CORE_DW              16                   // 
#define BYTES_PER_CORE_DW_ENC          4                    // 
#define CA_DEFAULT_VAL_F0_OFFSET       0                    // 
#define CA_DEFAULT_VAL_F0_WIDTH        1                    // 
#define CA_DEFAULT_VAL_F1_OFFSET       16                   // 
#define CA_DEFAULT_VAL_F1_WIDTH        1                    // 
#define CA_DEFAULT_VAL_F2_OFFSET       0                    // 
#define CA_DEFAULT_VAL_F2_WIDTH        1                    // 
#define CA_DEFAULT_VAL_WIDTH           1                    // width of signal indicating that CA ODT is enabled on CA bus
#define CA_PARITY_LAT_WIDTH            1                    // 
#define CAS_TYPE_WIDTH                 3                    // 
#define CASLAT_LIN_F0_OFFSET           0                    // 
#define CASLAT_LIN_F0_WIDTH            7                    // 
#define CASLAT_LIN_F1_OFFSET           16                   // 
#define CASLAT_LIN_F1_WIDTH            7                    // 
#define CASLAT_LIN_F2_OFFSET           0                    // 
#define CASLAT_LIN_F2_WIDTH            7                    // 
#define CASLAT_LIN_WIDTH               7                    // 
#define CHANNELWIDTH                   16                   // Width of the channel id for a transaction
#define CHECK_B_WIDTH                  8                    // 
#define CHECK_D_WIDTH                  64                   // 
#define CID_WIDTH                      0                    // 
#define CKE_DELAY_OFFSET               8                    // 
#define CKE_DELAY_WIDTH                3                    // 
#define CKE_INACTIVE_OFFSET            0                    // 
#define CKE_INACTIVE_WIDTH             32                   // 
#define CKE_SHIFT_WIDTH                8                    // 
#define CKE_STATUS_OFFSET              16                   // 
#define CKE_STATUS_WIDTH               2                    // 
#define CKSRE_F0_OFFSET                24                   // 
#define CKSRE_F0_WIDTH                 8                    // 
#define CKSRE_F1_OFFSET                8                    // 
#define CKSRE_F1_WIDTH                 8                    // 
#define CKSRE_F2_OFFSET                24                   // 
#define CKSRE_F2_WIDTH                 8                    // 
#define CKSRE_WIDTH                    8                    // width of CKSRE Register Data.
#define CKSRX_F0_OFFSET                0                    // 
#define CKSRX_F0_WIDTH                 8                    // 
#define CKSRX_F1_OFFSET                16                   // 
#define CKSRX_F1_WIDTH                 8                    // 
#define CKSRX_F2_OFFSET                0                    // 
#define CKSRX_F2_WIDTH                 8                    // 
#define CKSRX_WIDTH                    8                    // width of CKSRX Register Data.
#define CLK_CYC                        0.469 * TSCALE      // system clock cycle in ns
#define CMD_ERR_P                      244                  // Start position of the flag indicating the command has an error.
#define CMD_SEL_WIDTH                  8                    // 
#define COL_DIFF_0_ADDR                309                  // 
#define COL_DIFF_0_OFFSET              16                   // 
#define COL_DIFF_0_WIDTH               4                    // 
#define COL_DIFF_1_ADDR                309                  // 
#define COL_DIFF_1_OFFSET              24                   // 
#define COL_DIFF_1_WIDTH               4                    // 
#define COL_DIFF_WIDTH                 4                    // 
#define COL_DP_WIDTH                   12                   // 
#define COL_WIDTH                      10                   // 
#define COMMAND_AGE_COUNT_OFFSET       0                    // 
#define COMMAND_AGE_COUNT_WIDTH        8                    // 
#define COMMAND_ECC_P                  259                  // Start position of the flag indicating this is INLINE ECC transaction
#define COMMAND_ECC_WIDTH              1                    // 
#define COMMAND_MUX_SELECT_WIDTH       2                    // 
#define COMMAND_RMODW_ALLOCATE_P       262                  // 
#define COMMAND_RMODW_ALLOCATE_WIDTH   1                    // 
#define COMMAND_RMODW_P                182                  // Start position of command_rmodw in command queue register
#define COMMAND_RMW_INTERLEAVE_P       263                  // Start position of the flag indicating this is RMW_INTERLEAVE transaction
#define COMMAND_RMW_INTERLEAVE_WIDTH   5                    // 
#define COMMAND_RMW_INTERLEAVE_WRITE_TYPE_P 268                  // Start position of the flag indicating this is RMW_INTERLEAVE Write Type transaction
#define COMMAND_RMW_INTERLEAVE_WRITE_TYPE_WIDTH 2                    // 
#define COMMAND_TYPE_P                 35                   // Start position of command_type in command queue register
#define CONCURRENTAP_OFFSET            16                   // 
#define CONCURRENTAP_WIDTH             1                    // 
#define CONTROL_WORD_WIDTH             35                   // 
#define CONTROLLER_BUSY_OFFSET         24                   // 
#define CONTROLLER_BUSY_WIDTH          1                    // 
#define CONTROLLER_ID_OFFSET           16                   // 
#define CONTROLLER_ID_WIDTH            16                   // 
#define CONTROLLER_VERSION_OFFSET      0                    // 
#define CONTROLLER_VERSION_WIDTH       64                   // 
#define CORE_BYTE_WIDTH                4                    // 
#define CORE_BYTE_WIDTH_M1             3                    // 
#define CORE_DATA_WIDTH                128                  // 
#define CORE_DM_WIDTH                  16                   // 
#define CORE_PARITY_WIDTH              16                   // 
#define CS_BANK_WIDTH                  4                    // 
#define CS_CID_WIDTH                   1                    // 
#define CS_COMPARISON_FOR_REFRESH_DEPTH_OFFSET 24                   // 
#define CS_COMPARISON_FOR_REFRESH_DEPTH_WIDTH 6                    // 
#define CS_DIFF_WIDTH                  1                    // 
#define CS_LOWER_ADDR_EN_WIDTH         2                    // 
#define CS_LOWER_END_CS                15                   // 
#define CS_LOWER_END_ROW               16                   // 
#define CS_LOWER_START_CS              15                   // 
#define CS_LOWER_START_ROW             32                   // 
#define CS_MAP_ADDR                    318                  // 
#define CS_MAP_NON_POW2_OFFSET         24                   // 
#define CS_MAP_NON_POW2_WIDTH          2                    // 
#define CS_MAP_OFFSET                  24                   // 
#define CS_MAP_WIDTH                   2                    // 
#define CS_MSK_0_OFFSET                8                    // 
#define CS_MSK_0_WIDTH                 16                   // 
#define CS_MSK_1_OFFSET                8                    // 
#define CS_MSK_1_WIDTH                 16                   // 
#define CS_MSK_ROW_SHIFT               3                    // 
#define CS_SAME_EN_ADDR                317                  // 
#define CS_SAME_EN_OFFSET              0                    // 
#define CS_SAME_EN_WIDTH               1                    // 
#define CS_VAL_LOWER_0_OFFSET          0                    // 
#define CS_VAL_LOWER_0_WIDTH           16                   // 
#define CS_VAL_LOWER_1_OFFSET          0                    // 
#define CS_VAL_LOWER_1_WIDTH           16                   // 
#define CS_VAL_UPPER_0_OFFSET          16                   // 
#define CS_VAL_UPPER_0_WIDTH           16                   // 
#define CS_VAL_UPPER_1_OFFSET          16                   // 
#define CS_VAL_UPPER_1_WIDTH           16                   // 
#define CS_WIDTH                       1                    //  log2 (MAX_CS) number of bits in address used for CHIP SELECT 
#define CTL_REG_ADDR_WIDTH             11                   // 
#define CTLR_DISABLE_ODT_ON_ZQ_WIDTH   1                    // 
#define CTRLMSG_ALL_LOGICAL_RANKS_BIT  1                    // 
#define CTRLMSG_ALL_PHYSICAL_RANKS_BIT 0                    // 
#define CTRLMSG_DQS_OSC                8                    // 
#define CTRLMSG_FUNC_HI                15                   // 
#define CTRLMSG_FUNC_LO                12                   // 
#define CTRLMSG_FUNC_WIDTH             4                    // 
#define CTRLMSG_LOGICAL_RANK_HI        11                   // 
#define CTRLMSG_LOGICAL_RANK_LO        8                    // 
#define CTRLMSG_LOGICAL_RANK_WIDTH     4                    // 
#define CTRLMSG_PHYSICAL_RANK_HI       7                    // 
#define CTRLMSG_PHYSICAL_RANK_LO       4                    // 
#define CTRLMSG_PHYSICAL_RANK_WIDTH    4                    // 
#define CTRLUPD_AREF_HP_ENABLE_OFFSET  16                   // 
#define CTRLUPD_AREF_HP_ENABLE_WIDTH   1                    // width of parameter that enables automatic controller initiated DFI update requests on high priority subtask requests
#define CTRLUPD_REQ_PER_AREF_EN_ADDR   327                  // 
#define CTRLUPD_REQ_PER_AREF_EN_OFFSET 8                    // 
#define CTRLUPD_REQ_PER_AREF_EN_WIDTH  1                    // width of parameter that enables automatic controller initiated DFI update requests after every refresh
#define CTRLUPD_REQ_WIDTH              1                    // width of parameter that initiates a controller initiated DFI update request
#define CURRENT_CORE_RATIO_WIDTH       3                    // 
#define CURRENT_REG_COPY_ADDR          175                  // 
#define CURRENT_REG_COPY_OFFSET        24                   // 
#define CURRENT_REG_COPY_WIDTH         2                    // 
#define DATA_BYTE_WIDTH                4                    // number of bits of address that affect a signal data path word.
#define DATA_WIDTH                     64                   // 
#define DDR1_CLASS                     0   // 
#define DDR2_CLASS                     2   // 
#define DDR3_CLASS                     3   // 
#define DDR4_CLASS                     5   // 
#define DDR5_CLASS                     6   // 
#define DDR_MODE_WIDTH                 3                    // 
#define DECODED_BSTLEN_WIDTH           6                    // 
#define DEVICE0_BYTE0_CS0_OFFSET       0                    // 
#define DEVICE0_BYTE0_CS0_WIDTH        4                    // 
#define DEVICE0_BYTE0_CS1_OFFSET       0                    // 
#define DEVICE0_BYTE0_CS1_WIDTH        4                    // 
#define DEVICE1_BYTE0_CS0_OFFSET       8                    // 
#define DEVICE1_BYTE0_CS0_WIDTH        4                    // 
#define DEVICE1_BYTE0_CS1_OFFSET       8                    // 
#define DEVICE1_BYTE0_CS1_WIDTH        4                    // 
#define DEVICE2_BYTE0_CS0_OFFSET       16                   // 
#define DEVICE2_BYTE0_CS0_WIDTH        4                    // 
#define DEVICE2_BYTE0_CS1_OFFSET       16                   // 
#define DEVICE2_BYTE0_CS1_WIDTH        4                    // 
#define DEVICE3_BYTE0_CS0_OFFSET       24                   // 
#define DEVICE3_BYTE0_CS0_WIDTH        4                    // 
#define DEVICE3_BYTE0_CS1_OFFSET       24                   // 
#define DEVICE3_BYTE0_CS1_WIDTH        4                    // 
#define DEVICE_BIT_WIDTH               9                    // 
#define DEVICE_BYTE0_WIDTH             4                    // 
#define DFI_ADDRESS_WIDTH              12                   // width of dfi address bus output of the controller
#define DFI_CALVL_RESP_WIDTH           2                    // 
#define DFI_CALVL_SLICE_WIDTH          1                    // 
#define DFI_CMD_COUNT_WIDTH            4                    // 
#define DFI_CMD_RATIO_1_1              0                    // 
#define DFI_CMD_RATIO_1_2              1                    // 
#define DFI_CMD_RATIO_OFFSET           0                    // 
#define DFI_CMD_RATIO_WIDTH            1                    // 
#define DFI_CTLR_DATA_WIDTH            128                  // 
#define DFI_CTLR_WRDATA_MASK_WIDTH     16                   // 
#define DFI_CTRLMSG_DATA_WIDTH         16                   // 
#define DFI_CTRLMSG_WIDTH              8                    // 
#define DFI_DATA_BYTE_WIDTH            4                    // 
#define DFI_DATA_ONLY_WIDTH            64                   // 
#define DFI_DATA_RATIO_1_2             1                    // 
#define DFI_DATA_RATIO_WIDTH           2                    // 
#define DFI_DATA_SLICE_WIDTH           4                    // 
#define DFI_DATA_WIDTH                 64                   // 
#define DFI_DBI_WIDTH                  8                    // 
#define DFI_DNV_WIDTH                  8                    // 
#define DFI_ERROR_INFO_OFFSET          8                    // 
#define DFI_ERROR_INFO_WIDTH           20                   // 
#define DFI_ERROR_OFFSET               0                    // 
#define DFI_ERROR_WIDTH                5                    // 
#define DFI_FREQ_RATIO_F0_ADDR         26                   // 
#define DFI_FREQ_RATIO_F0_OFFSET       8                    // 
#define DFI_FREQ_RATIO_F0_WIDTH        2                    // 
#define DFI_FREQ_RATIO_F1_OFFSET       16                   // 
#define DFI_FREQ_RATIO_F1_WIDTH        2                    // 
#define DFI_FREQ_RATIO_F2_OFFSET       24                   // 
#define DFI_FREQ_RATIO_F2_WIDTH        2                    // 
#define DFI_FREQ_RATIO_WIDTH           2                    // 
#define DFI_FULL_RDDATA_WIDTH          64                   // 
#define DFI_LP_WAKEUP_WIDTH            4                    // 
#define DFI_MRR_WIDTH                  32                   // 
#define DFI_NET_DLY                    0                    // 
#define DFI_PHYMSTR_TYPE_WIDTH         2                    // 
#define DFI_RDLVL_DELAY_WIDTH          16                   // 
#define DFI_RDLVL_GATE_DELAY_WIDTH     16                   // 
#define DFI_RDLVL_RESP_WIDTH           8                    // 
#define DFI_RDLVL_SLICE_WIDTH          4                    // 
#define DFI_WRDATA_MASK_WIDTH          8                    // 
#define DFI_WRLVL_DELAY_WIDTH          16                   // 
#define DFI_WRLVL_RESP_WIDTH           4                    // 
#define DFIBUS_BOOT_FREQ_ADDR          176                  // 
#define DFIBUS_BOOT_FREQ_OFFSET        8                    // 
#define DFIBUS_BOOT_FREQ_WIDTH         2                    // 
#define DFIBUS_FREQ_F0_OFFSET          16                   // 
#define DFIBUS_FREQ_F0_WIDTH           5                    // 
#define DFIBUS_FREQ_F1_OFFSET          24                   // 
#define DFIBUS_FREQ_F1_WIDTH           5                    // 
#define DFIBUS_FREQ_F2_OFFSET          0                    // 
#define DFIBUS_FREQ_F2_WIDTH           5                    // 
#define DFIBUS_FREQ_WIDTH              5                    // 
#define DFS_ALWAYS_WRITE_FSP_OFFSET    8                    // 
#define DFS_ALWAYS_WRITE_FSP_WIDTH     1                    // 
#define DFS_CMD_WIDTH                  5                    // 
#define DFS_ENABLE_OFFSET              24                   // 
#define DFS_ENABLE_WIDTH               1                    // 
#define DFS_EXIT_BIT                   0                    // 
#define DFS_FRC_HIGH                   4                    // 
#define DFS_FRC_LOW                    3                    // 
#define DFS_FRC_STATUS_WIDTH           4                    // 
#define DFS_FSP_INSYNC_ACTIVE_OFFSET   16                   // 
#define DFS_FSP_INSYNC_ACTIVE_WIDTH    1                    // 
#define DFS_FSP_INSYNC_INACTIVE_OFFSET 24                   // 
#define DFS_FSP_INSYNC_INACTIVE_WIDTH  1                    // 
#define DFS_MEM_CLK_GATE_BIT           2                    // 
#define DFS_PHY_REG_WRITE_ADDR_OFFSET  0                    // 
#define DFS_PHY_REG_WRITE_ADDR_WIDTH   32                   // 
#define DFS_PHY_REG_WRITE_DATA_F0_OFFSET 0                    // 
#define DFS_PHY_REG_WRITE_DATA_F0_WIDTH 32                   // 
#define DFS_PHY_REG_WRITE_DATA_F1_OFFSET 0                    // 
#define DFS_PHY_REG_WRITE_DATA_F1_WIDTH 32                   // 
#define DFS_PHY_REG_WRITE_DATA_F2_OFFSET 0                    // 
#define DFS_PHY_REG_WRITE_DATA_F2_WIDTH 32                   // 
#define DFS_PHY_REG_WRITE_DATA_WIDTH   32                   // 
#define DFS_PHY_REG_WRITE_EN_OFFSET    0                    // 
#define DFS_PHY_REG_WRITE_EN_WIDTH     1                    // 
#define DFS_PHY_REG_WRITE_MASK_OFFSET  0                    // 
#define DFS_PHY_REG_WRITE_MASK_WIDTH   4                    // 
#define DFS_PHY_REG_WRITE_WAIT_OFFSET  8                    // 
#define DFS_PHY_REG_WRITE_WAIT_WIDTH   16                   // 
#define DFS_PROMOTE_THRESHOLD_F0_OFFSET 8                    // 
#define DFS_PROMOTE_THRESHOLD_F0_WIDTH 16                   // 
#define DFS_PROMOTE_THRESHOLD_F1_OFFSET 0                    // 
#define DFS_PROMOTE_THRESHOLD_F1_WIDTH 16                   // 
#define DFS_PROMOTE_THRESHOLD_F2_OFFSET 16                   // 
#define DFS_PROMOTE_THRESHOLD_F2_WIDTH 16                   // 
#define DFS_PROMOTE_THRESHOLD_WIDTH    16                   // 
#define DFS_REG_COPY_WIDTH             2                    // 
#define DFS_REQ_BIT                    1                    // 
#define DFS_STATUS_OFFSET              24                   // 
#define DFS_STATUS_WIDTH               7                    // 
#define DFS_ZQ_EN_OFFSET               0                    // 
#define DFS_ZQ_EN_WIDTH                1                    // 
#define DIRTY_TO_VALID_WRITES_OFFSET   16                   // 
#define DIRTY_TO_VALID_WRITES_WIDTH    1                    // 
#define DISABLE_MEMORY_MASKED_WRITE_OFFSET 16                   // 
#define DISABLE_MEMORY_MASKED_WRITE_WIDTH 1                    // 
#define DISABLE_RD_INTERLEAVE_OFFSET   8                    // 
#define DISABLE_RD_INTERLEAVE_WIDTH    1                    // 
#define DISABLE_RW_GROUP_W_BNK_CONFLICT_ADDR 317                  // 
#define DISABLE_RW_GROUP_W_BNK_CONFLICT_OFFSET 16                   // 
#define DISABLE_RW_GROUP_W_BNK_CONFLICT_WIDTH 2                    // 
#define DISABLE_UPDATE_TVRCG_OFFSET    16                   // 
#define DISABLE_UPDATE_TVRCG_WIDTH     1                    // 
#define DLL_RST_ADJ_DLY_OFFSET         16                   // 
#define DLL_RST_ADJ_DLY_WIDTH          8                    // 
#define DLL_RST_DELAY_OFFSET           0                    // 
#define DLL_RST_DELAY_WIDTH            16                   // 
#define DM_BYTE_WIDTH_D                8                    // 
#define DM_WIDTH                       8                    // width of DIMM dm bus : byte masking
#define DQS_OSC_BASE_VALUE_0_CS0_OFFSET 16                   // 
#define DQS_OSC_BASE_VALUE_0_CS0_WIDTH 16                   // 
#define DQS_OSC_BASE_VALUE_0_CS1_OFFSET 16                   // 
#define DQS_OSC_BASE_VALUE_0_CS1_WIDTH 16                   // 
#define DQS_OSC_BASE_VALUE_1_CS0_OFFSET 0                    // 
#define DQS_OSC_BASE_VALUE_1_CS0_WIDTH 16                   // 
#define DQS_OSC_BASE_VALUE_1_CS1_OFFSET 0                    // 
#define DQS_OSC_BASE_VALUE_1_CS1_WIDTH 16                   // 
#define DQS_OSC_BASE_VALUE_2_CS0_OFFSET 16                   // 
#define DQS_OSC_BASE_VALUE_2_CS0_WIDTH 16                   // 
#define DQS_OSC_BASE_VALUE_2_CS1_OFFSET 16                   // 
#define DQS_OSC_BASE_VALUE_2_CS1_WIDTH 16                   // 
#define DQS_OSC_BASE_VALUE_3_CS0_OFFSET 0                    // 
#define DQS_OSC_BASE_VALUE_3_CS0_WIDTH 16                   // 
#define DQS_OSC_BASE_VALUE_3_CS1_OFFSET 0                    // 
#define DQS_OSC_BASE_VALUE_3_CS1_WIDTH 16                   // 
#define DQS_OSC_BASE_VALUE_WIDTH       16                   // 
#define DQS_OSC_ENABLE_OFFSET          8                    // 
#define DQS_OSC_ENABLE_WIDTH           1                    // 
#define DQS_OSC_HIGH_THRESHOLD_OFFSET  0                    // 
#define DQS_OSC_HIGH_THRESHOLD_WIDTH   32                   // 
#define DQS_OSC_IN_PROGRESS_STATUS_OFFSET 24                   // 
#define DQS_OSC_IN_PROGRESS_STATUS_WIDTH 1                    // 
#define DQS_OSC_MPC_CMD_OFFSET         0                    // 
#define DQS_OSC_MPC_CMD_WIDTH          24                   // 
#define DQS_OSC_NORM_THRESHOLD_OFFSET  0                    // 
#define DQS_OSC_NORM_THRESHOLD_WIDTH   32                   // 
#define DQS_OSC_PER_CS_OOV_TRAINING_STATUS_OFFSET 8                    // 
#define DQS_OSC_PER_CS_OOV_TRAINING_STATUS_WIDTH 2                    // 
#define DQS_OSC_PERIOD_OFFSET          16                   // 
#define DQS_OSC_PERIOD_WIDTH           15                   // 
#define DQS_OSC_PROMOTE_THRESHOLD_OFFSET 0                    // 
#define DQS_OSC_PROMOTE_THRESHOLD_WIDTH 32                   // 
#define DQS_OSC_REQUEST_WIDTH          1                    // 
#define DQS_OSC_STATUS_OFFSET          16                   // 
#define DQS_OSC_STATUS_WIDTH           4                    // 
#define DQS_OSC_TIMEOUT_BIT            4                    // 
#define DQS_OSC_TIMEOUT_OFFSET         0                    // 
#define DQS_OSC_TIMEOUT_WIDTH          32                   // 
#define DQS_OSC_TST_OFFSET             16                   // 
#define DQS_OSC_TST_WIDTH              1                    // 
#define DQS_WIDTH                      8                    // width of DIMM dqs bus 
#define DRAM_CLASS_OFFSET              8                    // 
#define DRAM_CLASS_WIDTH               4                    // 
#define DRAM_CLK_DISABLE_OFFSET        0                    // 
#define DRAM_CLK_DISABLE_WIDTH         2                    // 
#define ECC_AXI_ERROR_RESPONSE_INHIBIT_OFFSET 24                   // 
#define ECC_AXI_ERROR_RESPONSE_INHIBIT_WIDTH 1                    // 
#define ECC_C_ADDR_OFFSET              0                    // 
#define ECC_C_ADDR_WIDTH               33                   // 
#define ECC_C_DATA_OFFSET              0                    // 
#define ECC_C_DATA_WIDTH               64                   // 
#define ECC_C_ID_OFFSET                0                    // 
#define ECC_C_ID_WIDTH                 19                   // 
#define ECC_C_SYND_OFFSET              8                    // 
#define ECC_C_SYND_WIDTH               8                    // 
#define ECC_CHECK_WIDTH                8                    // 
#define ECC_DATA_WIDTH                 64                   // 
#define ECC_DISABLE_BIT                6                    // 
#define ECC_DISABLE_W_UC_ERR_OFFSET    24                   // 
#define ECC_DISABLE_W_UC_ERR_WIDTH     1                    // 
#define ECC_DM                         8                    // 
#define ECC_DM_WIDTH                   2                    // 
#define ECC_EN_WIDTH                   1                    // 
#define ECC_ENABLE_ADDR                235                  // 
#define ECC_ENABLE_OFFSET              24                   // 
#define ECC_ENABLE_WIDTH               2                    // 
#define ECC_READ_CACHING_EN_OFFSET     24                   // 
#define ECC_READ_CACHING_EN_WIDTH      1                    // 
#define ECC_SCRUB_END_ADDR_OFFSET      0                    // 
#define ECC_SCRUB_END_ADDR_WIDTH       33                   // 
#define ECC_SCRUB_IDLE_CNT_OFFSET      16                   // 
#define ECC_SCRUB_IDLE_CNT_WIDTH       16                   // 
#define ECC_SCRUB_IN_PROGRESS_OFFSET   24                   // 
#define ECC_SCRUB_IN_PROGRESS_WIDTH    1                    // 
#define ECC_SCRUB_INTERVAL_OFFSET      0                    // 
#define ECC_SCRUB_INTERVAL_WIDTH       16                   // 
#define ECC_SCRUB_LEN_OFFSET           0                    // 
#define ECC_SCRUB_LEN_WIDTH            12                   // 
#define ECC_SCRUB_MODE_OFFSET          16                   // 
#define ECC_SCRUB_MODE_WIDTH           1                    // 
#define ECC_SCRUB_START_ADDR_OFFSET    0                    // 
#define ECC_SCRUB_START_ADDR_WIDTH     33                   // 
#define ECC_SCRUB_START_WIDTH          1                    // 
#define ECC_U_ADDR_OFFSET              0                    // 
#define ECC_U_ADDR_WIDTH               33                   // 
#define ECC_U_DATA_OFFSET              0                    // 
#define ECC_U_DATA_WIDTH               64                   // 
#define ECC_U_ID_OFFSET                0                    // 
#define ECC_U_ID_WIDTH                 19                   // 
#define ECC_U_SYND_OFFSET              8                    // 
#define ECC_U_SYND_WIDTH               8                    // 
#define ECC_WORDS_PER_CORE_WORD        2                    // 
#define ECC_WRITE_COMBINING_EN_OFFSET  0                    // 
#define ECC_WRITE_COMBINING_EN_WIDTH   1                    // 
#define ECC_WRITEBACK_EN_OFFSET        0                    // 
#define ECC_WRITEBACK_EN_WIDTH         1                    // 
#define EFFECT_CORE_DATA_WIDTH         128                  // 
#define EFFECT_MEM_DATA_WIDTH          32                   // 
#define EN_1T_TIMING_WIDTH             1                    // 
#define EN_ODT_ASSERT_EXCEPT_RD_OFFSET 8                    // 
#define EN_ODT_ASSERT_EXCEPT_RD_WIDTH  1                    // 
#define ENABLE_QUICK_SREFRESH_OFFSET   0                    // 
#define ENABLE_QUICK_SREFRESH_WIDTH    1                    // 
#define END_BANK                       12                   // end bit of bank portion of address
#define END_COL                        2                    // log2 (DATA_WIDTH/8)
#define END_CS                         32                   // end bit of chip select portion of address
#define END_ENTRY_EQUAL                0                    // 
#define END_ROW                        15                   // end bit of row portion of address
#define ENHANCED_PARITY_PROTECTION_EN_OFFSET 8                    // 
#define ENHANCED_PARITY_PROTECTION_EN_WIDTH 1                    // 
#define ENTRY_EQUAL                    0                    // 
#define ENTRY_EQUAL_WIDTH              1                    // 
#define ENTRY_FULL                     1                    // 
#define EXCLUSIVE_ACCESS_DEPTH         2                    // 
#define EXCLUSIVE_BIT                  3                    // 
#define FIFO_SRAM                      0                    // 
#define FIRST_CMD_IN_INLINE_ECC_SEQ_P  260                  // 
#define FIRST_CMD_IN_INLINE_ECC_SEQ_WIDTH 1                    // 
#define FIRST_CMD_IN_SEQ_P             240                  // Start position of the flag indicating the command is the first command in a sequence.
#define FM_ARB_AREF_BIT                1                    // 
#define FM_ARB_BIST_BIT                11                   // 
#define FM_ARB_DFS_BIT                 9                    // 
#define FM_ARB_DQS_OSC_BIT             4                    // 
#define FM_ARB_HW_BIT                  0                    // 
#define FM_ARB_LPC_BIT                 10                   // 
#define FM_ARB_MRR_BIT                 8                    // 
#define FM_ARB_MRW_BIT                 7                    // 
#define FM_ARB_PHYMSTR_BIT             6                    // 
#define FM_ARB_PRE_BIT                 2                    // 
#define FM_ARB_REQ_WIDTH               12                   // 
#define FM_ARB_UPD_BIT                 5                    // 
#define FM_ARB_ZQ_BIT                  3                    // 
#define FM_DISCONNECT_OFFSET           8                    // 
#define FM_DISCONNECT_WIDTH            8                    // 
#define FM_HIGH_CQ_DISCONNECT_OFFSET   0                    // 
#define FM_HIGH_CQ_DISCONNECT_WIDTH    8                    // 
#define FM_NORM_CQ_DISCONNECT_OFFSET   24                   // 
#define FM_NORM_CQ_DISCONNECT_WIDTH    8                    // 
#define FM_OVRIDE_CONTROL_OFFSET       16                   // 
#define FM_OVRIDE_CONTROL_WIDTH        1                    // 
#define FM_OVRIDE_EN                   0                    // 
#define FREQ_CHANGE_REG_COPY_WIDTH     2                    // 
#define FREQ_CHANGE_TYPE_F0_OFFSET     8                    // 
#define FREQ_CHANGE_TYPE_F0_WIDTH      2                    // 
#define FREQ_CHANGE_TYPE_F1_OFFSET     16                   // 
#define FREQ_CHANGE_TYPE_F1_WIDTH      2                    // 
#define FREQ_CHANGE_TYPE_F2_OFFSET     24                   // 
#define FREQ_CHANGE_TYPE_F2_WIDTH      2                    // 
#define FREQ_CHANGE_TYPE_WIDTH         2                    // 
#define FSP0_FRC_OFFSET                24                   // 
#define FSP0_FRC_VALID_OFFSET          8                    // 
#define FSP0_FRC_VALID_WIDTH           1                    // 
#define FSP0_FRC_WIDTH                 2                    // 
#define FSP1_FRC_OFFSET                0                    // 
#define FSP1_FRC_VALID_OFFSET          16                   // 
#define FSP1_FRC_VALID_WIDTH           1                    // 
#define FSP1_FRC_WIDTH                 2                    // 
#define FSP_OP_CURRENT_OFFSET          24                   // 
#define FSP_OP_CURRENT_WIDTH           1                    // 
#define FSP_PHY_UPDATE_MRW_OFFSET      0                    // 
#define FSP_PHY_UPDATE_MRW_WIDTH       1                    // 
#define FSP_STATUS_OFFSET              16                   // 
#define FSP_STATUS_WIDTH               1                    // 
#define FSP_WR_CURRENT_OFFSET          0                    // 
#define FSP_WR_CURRENT_WIDTH           1                    // 
#define FULL_BEAT_WIDTH                5                    // 
#define FULL_ECC_CHECK_WIDTH           16                   // 
#define FULL_PORT2CORE_DATA_RATIO_WIDTH 9                    // 
#define FULL_RD_BEAT_WIDTH             5                    // 
#define FUNC_VALID_CYCLES_OFFSET       0                    // 
#define FUNC_VALID_CYCLES_WIDTH        4                    // 
#define FWC_OFFSET                     0                    // 
#define FWC_WIDTH                      1                    // 
#define GATHER_FIFO_RESYNC_WIDTH       1                    // 
#define GEN_RDLAT_WIDTH                7                    // 
#define HISPEED_IECC                   1                    // 
#define HW_DFS_DONE_BIT                2                    // 
#define HW_DFS_TERMINATED_BIT          1                    // 
#define HW_PROMOTE_THRESHOLD_F0_OFFSET 0                    // 
#define HW_PROMOTE_THRESHOLD_F0_WIDTH  16                   // 
#define HW_PROMOTE_THRESHOLD_F1_OFFSET 16                   // 
#define HW_PROMOTE_THRESHOLD_F1_WIDTH  16                   // 
#define HW_PROMOTE_THRESHOLD_F2_OFFSET 0                    // 
#define HW_PROMOTE_THRESHOLD_F2_WIDTH  16                   // 
#define HW_PROMOTE_THRESHOLD_WIDTH     16                   // 
#define HWI_CLK_WIDTH                  2                    // 
#define HWI_CMD_WIDTH                  6                    // 
#define HWI_CMDTYPE_WIDTH              2                    // 
#define ID_PARITY_ERR_BIT              2                    // 
#define IE_BUFFER_COL_INDEX_WIDTH      4                    // 
#define IE_BUFFER_INDEX_WIDTH          6                    // 
#define IE_BUFFER_ROW_INDEX_WIDTH      2                    // 
#define IE_NUM_ECC_BUFFER_ROWS         4                    // 
#define IECC_SAME_PAGE_MIN_PAGE_ADDR_LSB 8                    // 
#define IECC_SAME_PAGE_MIN_PAGE_ADDR_WIDTH 11                   // 
#define IECC_SAME_PAGE_REQ_PAGE_ADDR_WIDTH 25                   // 
#define IGNORED_HW_DFS_CMD_BIT         0                    // 
#define IGNORED_SW_DFS_CMD_BIT         3                    // 
#define IN_ORDER_ACCEPT_ADDR           326                  // 
#define IN_ORDER_ACCEPT_OFFSET         8                    // 
#define IN_ORDER_ACCEPT_WIDTH          1                    // 
#define IN_SW_WAIT_STATE_BIT           6                    // 
#define INHIBIT_CMD_WIDTH              27                   // 
#define INHIBIT_DRAM_CMD_OFFSET        16                   // 
#define INHIBIT_DRAM_CMD_WIDTH         2                    // 
#define INIT_FREQ_OFFSET               0                    // 
#define INIT_FREQ_WIDTH                2                    // 
#define INLINE_ECC_BANK_OFFSET_OFFSET  16                   // 
#define INLINE_ECC_BANK_OFFSET_WIDTH   3                    // 
#define INLINE_ECC_DM_WIDTH            2                    // 
#define INLINE_ECC_EN_WIDTH            1                    // 
#define INLINE_ECC_SAME_PAGE_OFFSET    8                    // 
#define INLINE_ECC_SAME_PAGE_WIDTH     1                    // 
#define INT_ACK_BIST_ADDR              349                  // 
#define INT_ACK_BIST_OFFSET            16                   // 
#define INT_ACK_BIST_WIDTH             8                    // 
#define INT_ACK_CRC_ADDR               349                  // 
#define INT_ACK_CRC_OFFSET             24                   // 
#define INT_ACK_CRC_WIDTH              8                    // 
#define INT_ACK_DFI_ADDR               350                  // 
#define INT_ACK_DFI_OFFSET             0                    // 
#define INT_ACK_DFI_WIDTH              8                    // 
#define INT_ACK_DIMM_ADDR              350                  // 
#define INT_ACK_DIMM_OFFSET            8                    // 
#define INT_ACK_DIMM_WIDTH             8                    // 
#define INT_ACK_ECC_ADDR               344                  // 
#define INT_ACK_ECC_OFFSET             0                    // 
#define INT_ACK_ECC_WIDTH              32                   // 
#define INT_ACK_FREQ_ADDR              350                  // 
#define INT_ACK_FREQ_OFFSET            16                   // 
#define INT_ACK_FREQ_WIDTH             8                    // 
#define INT_ACK_INIT_ADDR              350                  // 
#define INT_ACK_INIT_OFFSET            24                   // 
#define INT_ACK_INIT_WIDTH             8                    // 
#define INT_ACK_LOWPOWER_ADDR          345                  // 
#define INT_ACK_LOWPOWER_OFFSET        0                    // 
#define INT_ACK_LOWPOWER_WIDTH         16                   // 
#define INT_ACK_MISC_ADDR              349                  // 
#define INT_ACK_MISC_OFFSET            0                    // 
#define INT_ACK_MISC_WIDTH             16                   // 
#define INT_ACK_MODE_ADDR              351                  // 
#define INT_ACK_MODE_OFFSET            0                    // 
#define INT_ACK_MODE_WIDTH             8                    // 
#define INT_ACK_PARITY_ADDR            351                  // 
#define INT_ACK_PARITY_OFFSET          8                    // 
#define INT_ACK_PARITY_WIDTH           8                    // 
#define INT_ACK_PORT_TIMEOUT_ADDR      345                  // 
#define INT_ACK_PORT_TIMEOUT_OFFSET    16                   // 
#define INT_ACK_PORT_TIMEOUT_WIDTH     16                   // 
#define INT_ACK_RFIFO_TIMEOUT_ADDR     346                  // 
#define INT_ACK_RFIFO_TIMEOUT_OFFSET   0                    // 
#define INT_ACK_RFIFO_TIMEOUT_WIDTH    16                   // 
#define INT_ACK_TIMEOUT_ADDR           343                  // 
#define INT_ACK_TIMEOUT_OFFSET         0                    // 
#define INT_ACK_TIMEOUT_WIDTH          32                   // 
#define INT_ACK_TRAINING_ADDR          347                  // 
#define INT_ACK_TRAINING_OFFSET        0                    // 
#define INT_ACK_TRAINING_WIDTH         32                   // 
#define INT_ACK_USERIF_ADDR            348                  // 
#define INT_ACK_USERIF_OFFSET          0                    // 
#define INT_ACK_USERIF_WIDTH           32                   // 
#define INT_BIST_BIST_DONE_BIT_INDEX   0                    // 
#define INT_DFI_DFI_ERROR_BIT_INDEX    2                    // 
#define INT_DFI_DLL_LOCK_STATE_CHANGE_BIT_INDEX 3                    // 
#define INT_DFI_PHYMSTR_ERROR_BIT_INDEX 1                    // 
#define INT_DFI_TDFI_INIT_COMPLETE_TIMEOUT_BIT_INDEX 5                    // 
#define INT_DFI_UPDATE_ERROR_BIT_INDEX 0                    // 
#define INT_DFI_USER_RESYNC_DLL_BIT_INDEX 4                    // 
#define INT_ECC_ECC_CORRECTED_BIT_INDEX 0                    // 
#define INT_ECC_ECC_CORRECTED_OVFLOW_BIT_INDEX 1                    // 
#define INT_ECC_ECC_SCRUB_CORRECTED_BIT_INDEX 8                    // 
#define INT_ECC_ECC_SCRUB_DONE_BIT_INDEX 7                    // 
#define INT_ECC_ECC_UNCORRECTED_BIT_INDEX 2                    // 
#define INT_ECC_ECC_UNCORRECTED_OVFLOW_BIT_INDEX 3                    // 
#define INT_ECC_ECC_WB_CANCELED_BIT_INDEX 6                    // 
#define INT_ECC_RMODW_DATA_ECC_CORRECTED_BIT_INDEX 14                   // 
#define INT_ECC_RMODW_DATA_ECC_UNCORRECTED_BIT_INDEX 16                   // 
#define INT_FREQ_DFS_DONE_BIT_INDEX    0                    // 
#define INT_FREQ_HW_DFS_DONE_BIT_INDEX 2                    // 
#define INT_FREQ_HW_DFS_TERMINATED_BIT_INDEX 1                    // 
#define INT_FREQ_IGNORED_HW_DFS_CMD_BIT_INDEX 0                    // 
#define INT_FREQ_IGNORED_SW_DFS_CMD_BIT_INDEX 3                    // 
#define INT_FREQ_IN_SW_WAIT_STATE_BIT_INDEX 6                    // 
#define INT_FREQ_SW_DFS_DONE_BIT_INDEX 5                    // 
#define INT_FREQ_SW_DFS_TERMINATED_BIT_INDEX 4                    // 
#define INT_INIT_INIT_DONE_BIT_INDEX   1                    // 
#define INT_INIT_MEM_RST_VALID_BIT_INDEX 0                    // 
#define INT_LOWPOWER_LPC_CMD_DONE_BIT_INDEX 0                    // 
#define INT_MASK_BIST_OFFSET           16                   // 
#define INT_MASK_BIST_WIDTH            8                    // 
#define INT_MASK_CRC_OFFSET            24                   // 
#define INT_MASK_CRC_WIDTH             8                    // 
#define INT_MASK_DFI_OFFSET            0                    // 
#define INT_MASK_DFI_WIDTH             8                    // 
#define INT_MASK_DIMM_OFFSET           8                    // 
#define INT_MASK_DIMM_WIDTH            8                    // 
#define INT_MASK_ECC_OFFSET            0                    // 
#define INT_MASK_ECC_WIDTH             32                   // 
#define INT_MASK_FREQ_OFFSET           16                   // 
#define INT_MASK_FREQ_WIDTH            8                    // 
#define INT_MASK_INIT_OFFSET           24                   // 
#define INT_MASK_INIT_WIDTH            8                    // 
#define INT_MASK_LOWPOWER_OFFSET       0                    // 
#define INT_MASK_LOWPOWER_WIDTH        16                   // 
#define INT_MASK_MASTER_OFFSET         0                    // 
#define INT_MASK_MASTER_WIDTH          32                   // 
#define INT_MASK_MISC_OFFSET           0                    // 
#define INT_MASK_MISC_WIDTH            16                   // 
#define INT_MASK_MODE_OFFSET           0                    // 
#define INT_MASK_MODE_WIDTH            8                    // 
#define INT_MASK_PARITY_OFFSET         8                    // 
#define INT_MASK_PARITY_WIDTH          8                    // 
#define INT_MASK_PORT_TIMEOUT_OFFSET   16                   // 
#define INT_MASK_PORT_TIMEOUT_WIDTH    16                   // 
#define INT_MASK_RFIFO_TIMEOUT_OFFSET  0                    // 
#define INT_MASK_RFIFO_TIMEOUT_WIDTH   16                   // 
#define INT_MASK_TIMEOUT_OFFSET        0                    // 
#define INT_MASK_TIMEOUT_WIDTH         32                   // 
#define INT_MASK_TRAINING_OFFSET       0                    // 
#define INT_MASK_TRAINING_WIDTH        32                   // 
#define INT_MASK_USERIF_OFFSET         0                    // 
#define INT_MASK_USERIF_WIDTH          32                   // 
#define INT_MASTER_BIST_BIT_INDEX      8                    // 
#define INT_MASTER_CRC_BIT_INDEX       9                    // 
#define INT_MASTER_DFI_BIT_INDEX       10                   // 
#define INT_MASTER_DIMM_BIT_INDEX      11                   // 
#define INT_MASTER_ECC_BIT_INDEX       1                    // 
#define INT_MASTER_FREQ_BIT_INDEX      12                   // 
#define INT_MASTER_GLOBAL_BIT_INDEX    31                   // 
#define INT_MASTER_INIT_BIT_INDEX      13                   // 
#define INT_MASTER_LOWPOWER_BIT_INDEX  2                    // 
#define INT_MASTER_MISC_BIT_INDEX      7                    // 
#define INT_MASTER_MODE_BIT_INDEX      14                   // 
#define INT_MASTER_PARITY_BIT_INDEX    15                   // 
#define INT_MASTER_PORT_TIMEOUT_BIT_INDEX 3                    // 
#define INT_MASTER_RFIFO_TIMEOUT_BIT_INDEX 4                    // 
#define INT_MASTER_TIMEOUT_BIT_INDEX   0                    // 
#define INT_MASTER_TRAINING_BIT_INDEX  5                    // 
#define INT_MASTER_USERIF_BIT_INDEX    6                    // 
#define INT_MISC_AREF_STATUS_BIT_INDEX 7                    // 
#define INT_MISC_AREF_SW_ACK_BIT_INDEX 11                   // 
#define INT_MISC_DRAM_CMD_INHIBIT_BIT_INDEX 3                    // 
#define INT_MISC_PPR_STATUS_BIT_INDEX  4                    // 
#define INT_MISC_TEMP_ALERT_BIT_INDEX  6                    // 
#define INT_MISC_TEMP_CHG_ALERT_BIT_INDEX 5                    // 
#define INT_MODE_MRR_ERROR_BIT_INDEX   0                    // 
#define INT_MODE_PERIPHERAL_MRR_DONE_BIT_INDEX 2                    // 
#define INT_MODE_WRITE_MODEREG_DONE_BIT_INDEX 3                    // 
#define INT_PARITY_WR_PARITY_ERROR_BIT_INDEX 0                    // 
#define INT_PARITY_WRITE_PARITY_OVERLAP_ERROR_BIT_INDEX 1                    // 
#define INT_STATUS_BIST_ADDR           340                  // 
#define INT_STATUS_BIST_OFFSET         16                   // 
#define INT_STATUS_BIST_WIDTH          8                    // 
#define INT_STATUS_CRC_ADDR            340                  // 
#define INT_STATUS_CRC_OFFSET          24                   // 
#define INT_STATUS_CRC_WIDTH           8                    // 
#define INT_STATUS_DFI_ADDR            341                  // 
#define INT_STATUS_DFI_OFFSET          0                    // 
#define INT_STATUS_DFI_WIDTH           8                    // 
#define INT_STATUS_DIMM_ADDR           341                  // 
#define INT_STATUS_DIMM_OFFSET         8                    // 
#define INT_STATUS_DIMM_WIDTH          8                    // 
#define INT_STATUS_ECC_ADDR            335                  // 
#define INT_STATUS_ECC_OFFSET          0                    // 
#define INT_STATUS_ECC_WIDTH           32                   // 
#define INT_STATUS_FREQ_ADDR           341                  // 
#define INT_STATUS_FREQ_OFFSET         16                   // 
#define INT_STATUS_FREQ_WIDTH          8                    // 
#define INT_STATUS_INIT_ADDR           341                  // 
#define INT_STATUS_INIT_OFFSET         24                   // 
#define INT_STATUS_INIT_WIDTH          8                    // 
#define INT_STATUS_LOWPOWER_ADDR       336                  // 
#define INT_STATUS_LOWPOWER_OFFSET     0                    // 
#define INT_STATUS_LOWPOWER_WIDTH      16                   // 
#define INT_STATUS_MASTER_OFFSET       0                    // 
#define INT_STATUS_MASTER_WIDTH        32                   // 
#define INT_STATUS_MISC_ADDR           340                  // 
#define INT_STATUS_MISC_OFFSET         0                    // 
#define INT_STATUS_MISC_WIDTH          16                   // 
#define INT_STATUS_MODE_ADDR           342                  // 
#define INT_STATUS_MODE_OFFSET         0                    // 
#define INT_STATUS_MODE_WIDTH          8                    // 
#define INT_STATUS_PARITY_ADDR         342                  // 
#define INT_STATUS_PARITY_OFFSET       8                    // 
#define INT_STATUS_PARITY_WIDTH        8                    // 
#define INT_STATUS_PORT_TIMEOUT_ADDR   336                  // 
#define INT_STATUS_PORT_TIMEOUT_OFFSET 16                   // 
#define INT_STATUS_PORT_TIMEOUT_WIDTH  16                   // 
#define INT_STATUS_RFIFO_TIMEOUT_ADDR  337                  // 
#define INT_STATUS_RFIFO_TIMEOUT_OFFSET 0                    // 
#define INT_STATUS_RFIFO_TIMEOUT_WIDTH 16                   // 
#define INT_STATUS_TIMEOUT_ADDR        334                  // 
#define INT_STATUS_TIMEOUT_OFFSET      0                    // 
#define INT_STATUS_TIMEOUT_WIDTH       32                   // 
#define INT_STATUS_TRAINING_ADDR       338                  // 
#define INT_STATUS_TRAINING_OFFSET     0                    // 
#define INT_STATUS_TRAINING_WIDTH      32                   // 
#define INT_STATUS_USERIF_ADDR         339                  // 
#define INT_STATUS_USERIF_OFFSET       0                    // 
#define INT_STATUS_USERIF_WIDTH        32                   // 
#define INT_TIMEOUT_AREF_MAX_DEFICIT_TIMEOUT_BIT_INDEX 19                   // 
#define INT_TIMEOUT_DQS_OSC_TIMEOUT_BIT_INDEX 15                   // 
#define INT_TIMEOUT_LPI_WAKEUP_TIMEOUT_BIT_INDEX 17                   // 
#define INT_TIMEOUT_MRR_TEMPCHK_TIMEOUT_BIT_INDEX 14                   // 
#define INT_TIMEOUT_UPD_CTRL_TIMEOUT_BIT_INDEX 16                   // 
#define INT_TIMEOUT_ZQ_CALLATCH_TIMEOUT_BIT_INDEX 9                    // 
#define INT_TIMEOUT_ZQ_CALSTART_TIMEOUT_BIT_INDEX 8                    // 
#define INT_TIMEOUT_ZQ_CS_TIMEOUT_BIT_INDEX 7                    // 
#define INT_TRAINING_DQS_OSC_BASE_BIT_INDEX 13                   // 
#define INT_TRAINING_DQS_OSC_DONE_BIT_INDEX 12                   // 
#define INT_TRAINING_DQS_OSC_OOV_BIT_INDEX 15                   // 
#define INT_TRAINING_DQS_OSC_OVFL_BIT_INDEX 14                   // 
#define INT_TRAINING_ZQ_STATUS_BIT_INDEX 11                   // 
#define INT_USERIF_CORE_WORDS_PER_BURST_ERROR_BIT_INDEX 7                    // 
#define INT_USERIF_OUT_OF_RANGE_BIT_INDEX 0                    // 
#define INT_USERIF_OUT_OF_RANGE_OVFLOW_BIT_INDEX 1                    // 
#define INT_USERIF_PORT_CMD_ERR_BIT_INDEX 2                    // 
#define INT_USERIF_WRAP_SPLIT_ERROR_BIT_INDEX 6                    // 
#define LAST_CMD_IN_INLINE_ECC_SEQ_P   261                  // 
#define LAST_CMD_IN_INLINE_ECC_SEQ_WIDTH 1                    // 
#define LAST_CMD_IN_SEQ_P              239                  // Start position of the flag indicating the command is the last command in a sequence.
#define LAST_RD_WIDTH                  1                    // 
#define LEN_PARITY_ERR_BIT             3                    // 
#define LENGTH_P                       170                  // Start position of length in command queue register
#define LONG_COUNT_MASK_OFFSET         8                    // 
#define LONG_COUNT_MASK_WIDTH          5                    // 
#define LOWPOWER_REFRESH_ENABLE_OFFSET 8                    // 
#define LOWPOWER_REFRESH_ENABLE_WIDTH  2                    //  Lowpower refresh enable width
#define LP_AUTO_ENTRY_EN_OFFSET        24                   // 
#define LP_AUTO_ENTRY_EN_WIDTH         4                    // 
#define LP_AUTO_EXIT_EN_OFFSET         0                    // 
#define LP_AUTO_EXIT_EN_WIDTH          4                    // 
#define LP_AUTO_MEM_GATE_EN_OFFSET     8                    // 
#define LP_AUTO_MEM_GATE_EN_WIDTH      3                    // 
#define LP_AUTO_PD_IDLE_OFFSET         16                   // 
#define LP_AUTO_PD_IDLE_WIDTH          12                   // 
#define LP_AUTO_SR_LONG_IDLE_OFFSET    16                   // 
#define LP_AUTO_SR_LONG_IDLE_WIDTH     8                    // 
#define LP_AUTO_SR_LONG_MC_GATE_IDLE_OFFSET 24                   // 
#define LP_AUTO_SR_LONG_MC_GATE_IDLE_WIDTH 8                    // 
#define LP_AUTO_SR_SHORT_IDLE_OFFSET   0                    // 
#define LP_AUTO_SR_SHORT_IDLE_WIDTH    12                   // 
#define LP_CMD_ADDR                    155                  // 
#define LP_CMD_OFFSET                  16                   // 
#define LP_CMD_WIDTH                   7                    // 
#define LP_EXT_CMD_WIDTH               6                    // 
#define LP_EXT_RESP_WIDTH              2                    // 
#define LP_INST                        2                    // 
#define LP_STATE_CS0_OFFSET            8                    // 
#define LP_STATE_CS0_WIDTH             7                    // 
#define LP_STATE_CS1_OFFSET            16                   // 
#define LP_STATE_CS1_WIDTH             7                    // 
#define LP_STATE_WIDTH                 7                    // 
#define LPC_PROMOTE_THRESHOLD_F0_OFFSET 16                   // 
#define LPC_PROMOTE_THRESHOLD_F0_WIDTH 16                   // 
#define LPC_PROMOTE_THRESHOLD_F1_OFFSET 0                    // 
#define LPC_PROMOTE_THRESHOLD_F1_WIDTH 16                   // 
#define LPC_PROMOTE_THRESHOLD_F2_OFFSET 16                   // 
#define LPC_PROMOTE_THRESHOLD_F2_WIDTH 16                   // 
#define LPC_PROMOTE_THRESHOLD_WIDTH    16                   // 
#define LPC_SR_CTRLUPD_EN_OFFSET       0                    // 
#define LPC_SR_CTRLUPD_EN_WIDTH        1                    // 
#define LPC_SR_EXIT_CMD_EN_OFFSET      24                   // 
#define LPC_SR_EXIT_CMD_EN_WIDTH       1                    // 
#define LPC_SR_PHYMSTR_EN_OFFSET       16                   // 
#define LPC_SR_PHYMSTR_EN_WIDTH        1                    // 
#define LPC_SR_PHYUPD_EN_OFFSET        8                    // 
#define LPC_SR_PHYUPD_EN_WIDTH         1                    // 
#define LPC_SR_ZQ_EN_OFFSET            0                    // 
#define LPC_SR_ZQ_EN_WIDTH             1                    // 
#define LPC_SW_ENTER_DQS_OSC_IN_PROGRESS_ERR_STATUS_OFFSET 0                    // 
#define LPC_SW_ENTER_DQS_OSC_IN_PROGRESS_ERR_STATUS_WIDTH 1                    // 
#define LPDDR3_ODT_OFF_MAX             350.0                // 
#define LPDDR3_ODT_ON_MIN              175.0                // 
#define LPDDR4_ADDR_WIDTH              6                    // 
#define LPI_CTRL_REQ_EN_OFFSET         24                   // 
#define LPI_CTRL_REQ_EN_WIDTH          1                    // 
#define LPI_IDLE_WAKEUP_F0_OFFSET      24                   // 
#define LPI_IDLE_WAKEUP_F0_WIDTH       4                    // 
#define LPI_IDLE_WAKEUP_F1_OFFSET      0                    // 
#define LPI_IDLE_WAKEUP_F1_WIDTH       4                    // 
#define LPI_IDLE_WAKEUP_F2_OFFSET      8                    // 
#define LPI_IDLE_WAKEUP_F2_WIDTH       4                    // 
#define LPI_IDLE_WAKEUP_WIDTH          4                    // 
#define LPI_PD_WAKEUP_F0_OFFSET        24                   // 
#define LPI_PD_WAKEUP_F0_WIDTH         4                    // 
#define LPI_PD_WAKEUP_F1_OFFSET        0                    // 
#define LPI_PD_WAKEUP_F1_WIDTH         4                    // 
#define LPI_PD_WAKEUP_F2_OFFSET        8                    // 
#define LPI_PD_WAKEUP_F2_WIDTH         4                    // 
#define LPI_PD_WAKEUP_WIDTH            4                    // 
#define LPI_SR_LONG_MCCLK_GATE_WAKEUP_F0_OFFSET 16                   // 
#define LPI_SR_LONG_MCCLK_GATE_WAKEUP_F0_WIDTH 4                    // 
#define LPI_SR_LONG_MCCLK_GATE_WAKEUP_F1_OFFSET 24                   // 
#define LPI_SR_LONG_MCCLK_GATE_WAKEUP_F1_WIDTH 4                    // 
#define LPI_SR_LONG_MCCLK_GATE_WAKEUP_F2_OFFSET 0                    // 
#define LPI_SR_LONG_MCCLK_GATE_WAKEUP_F2_WIDTH 4                    // 
#define LPI_SR_LONG_MCCLK_GATE_WAKEUP_WIDTH 4                    // 
#define LPI_SR_LONG_WAKEUP_F0_OFFSET   8                    // 
#define LPI_SR_LONG_WAKEUP_F0_WIDTH    4                    // 
#define LPI_SR_LONG_WAKEUP_F1_OFFSET   16                   // 
#define LPI_SR_LONG_WAKEUP_F1_WIDTH    4                    // 
#define LPI_SR_LONG_WAKEUP_F2_OFFSET   24                   // 
#define LPI_SR_LONG_WAKEUP_F2_WIDTH    4                    // 
#define LPI_SR_LONG_WAKEUP_WIDTH       4                    // 
#define LPI_SR_SHORT_WAKEUP_F0_OFFSET  0                    // 
#define LPI_SR_SHORT_WAKEUP_F0_WIDTH   4                    // 
#define LPI_SR_SHORT_WAKEUP_F1_OFFSET  8                    // 
#define LPI_SR_SHORT_WAKEUP_F1_WIDTH   4                    // 
#define LPI_SR_SHORT_WAKEUP_F2_OFFSET  16                   // 
#define LPI_SR_SHORT_WAKEUP_F2_WIDTH   4                    // 
#define LPI_SR_SHORT_WAKEUP_WIDTH      4                    // 
#define LPI_SRPD_LONG_MCCLK_GATE_WAKEUP_F0_OFFSET 16                   // 
#define LPI_SRPD_LONG_MCCLK_GATE_WAKEUP_F0_WIDTH 4                    // 
#define LPI_SRPD_LONG_MCCLK_GATE_WAKEUP_F1_OFFSET 24                   // 
#define LPI_SRPD_LONG_MCCLK_GATE_WAKEUP_F1_WIDTH 4                    // 
#define LPI_SRPD_LONG_MCCLK_GATE_WAKEUP_F2_OFFSET 0                    // 
#define LPI_SRPD_LONG_MCCLK_GATE_WAKEUP_F2_WIDTH 4                    // 
#define LPI_SRPD_LONG_MCCLK_GATE_WAKEUP_WIDTH 4                    // 
#define LPI_SRPD_LONG_WAKEUP_F0_OFFSET 8                    // 
#define LPI_SRPD_LONG_WAKEUP_F0_WIDTH  4                    // 
#define LPI_SRPD_LONG_WAKEUP_F1_OFFSET 16                   // 
#define LPI_SRPD_LONG_WAKEUP_F1_WIDTH  4                    // 
#define LPI_SRPD_LONG_WAKEUP_F2_OFFSET 24                   // 
#define LPI_SRPD_LONG_WAKEUP_F2_WIDTH  4                    // 
#define LPI_SRPD_LONG_WAKEUP_WIDTH     4                    // 
#define LPI_SRPD_SHORT_WAKEUP_F0_OFFSET 0                    // 
#define LPI_SRPD_SHORT_WAKEUP_F0_WIDTH 4                    // 
#define LPI_SRPD_SHORT_WAKEUP_F1_OFFSET 8                    // 
#define LPI_SRPD_SHORT_WAKEUP_F1_WIDTH 4                    // 
#define LPI_SRPD_SHORT_WAKEUP_F2_OFFSET 16                   // 
#define LPI_SRPD_SHORT_WAKEUP_F2_WIDTH 4                    // 
#define LPI_SRPD_SHORT_WAKEUP_WIDTH    4                    // 
#define LPI_TIMER_COUNT_OFFSET         0                    // 
#define LPI_TIMER_COUNT_WIDTH          12                   // 
#define LPI_TIMER_WAKEUP_F0_OFFSET     24                   // 
#define LPI_TIMER_WAKEUP_F0_WIDTH      4                    // 
#define LPI_TIMER_WAKEUP_F1_OFFSET     0                    // 
#define LPI_TIMER_WAKEUP_F1_WIDTH      4                    // 
#define LPI_TIMER_WAKEUP_F2_OFFSET     8                    // 
#define LPI_TIMER_WAKEUP_F2_WIDTH      4                    // 
#define LPI_TIMER_WAKEUP_WIDTH         4                    // 
#define LPI_WAKEUP_EN_ADDR             162                  // 
#define LPI_WAKEUP_EN_OFFSET           16                   // 
#define LPI_WAKEUP_EN_WIDTH            6                    // 
#define LPI_WAKEUP_TIMEOUT_BIT         6                    // 
#define LPI_WAKEUP_TIMEOUT_OFFSET      16                   // 
#define LPI_WAKEUP_TIMEOUT_WIDTH       12                   // 
#define LVL_PATTERN_WIDTH              4                    // 
#define MASKED_WRITE_BIT               1                    // 
#define MASKED_WRITE_CMD               2                // 
#define MASTER_LONG_COUNTER_WIDTH      10                   // 
#define MAX_ADDR_RANGE_WIDTH           19                   // 
#define MAX_ADDR_WIDTH                 33                   // Controller Address Width    
#define MAX_BANK_PER_CMD               1                    // 
#define MAX_BANK_PER_CMD_WIDTH         0                    // 
#define MAX_BG_PER_CS                  1                    // Maximum number of bank groups within a single rank.
#define MAX_BST_ADDR_WIDTH             7                    // 
#define MAX_BST_CYCLES                 16                   // Number of memory clock cycles needed to execute the maximum burst.
#define MAX_BYTE_WORD                  2                    // highest bit of address and length that effect mask calculation
#define MAX_CID_WIDTH                  0                    // 
#define MAX_CMD_QUE                    32                   // number of entrys in the command queue.
#define MAX_CMD_REG_WIDTH              270                  // Width of the command type field into the controller
#define MAX_CMD_WIDTH                  5                    // highest bit of the command queue pointer.
#define MAX_COL                        10                   //  width of column address bus
#define MAX_COL_REG_OFFSET             8                    // 
#define MAX_COL_REG_WIDTH              4                    // 
#define MAX_COLUMNS_SUPPORTED          10                   // 
#define MAX_CORE_ADDR_WIDTH            33                   // User Address Width    
#define MAX_CS                         2                    // 
#define MAX_CS_REG_OFFSET              16                   // 
#define MAX_CS_REG_WIDTH               2                    // 
#define MAX_DFI_CMD_RATIO              2                    // 
#define MAX_DFI_CMD_RATIO_WIDTH        2                    // 
#define MAX_DFI_DATA_RATIO             2                    // 
#define MAX_DFI_DATA_RATIO_WIDTH       2                    // 
#define MAX_DG_WIDTH                   15                   // 
#define MAX_LEN_WIDTH                  12                   // number of bits used in the transaction to specify
#define MAX_LEN_WORD_WIDTH             10                   //  This defines the maximum number of core words per user command
#define MAX_MEM_BURSTS                 128                  // Maximum number of memory bursts for a given command.
#define MAX_MEM_BURSTS_P               42                   // Start position of the one hot memory burst is masked vector
#define MAX_MEMBST_USERWORDS           512                  // 
#define MAX_MSK_WIDTH                  16                   // 
#define MAX_NUM_RMW_INTERLEAVE_OFFSET  8                    // 
#define MAX_NUM_RMW_INTERLEAVE_WIDTH   2                    // 
#define MAX_PORT2CORE_DATA_RATIO       2                    // 
#define MAX_RANK                       2                    // 
#define MAX_READ_INDEX_WIDTH           2                    // 
#define MAX_REF_PER_TREF               8                    // 
#define MAX_REG_ADDR                   5464                 // 
#define MAX_RMW_INTERLEAVE_TAG         32                   // 
#define MAX_ROW_REG_OFFSET             0                    // 
#define MAX_ROW_REG_WIDTH              5                    // 
#define MAX_SDRAM_CORE_ADDR_WIDTH      33                   // User Address Width for SDRAM address   
#define MAX_VAL_WIDTH                  16                   // 
#define MAX_WR_COMBINE_OFFSET          8                    // 
#define MAX_WR_COMBINE_WIDTH           3                    // 
#define MAXIMUM_BYTE_REQUEST           4096                 // 
#define MEM_ADDRESS_WIDTH              6                    // width of memory address bus
#define MEM_BANK_PIN_WIDTH             3                    // width of DIMM bank PIN
#define MEM_BANK_WIDTH                 3                    // width of memory bank bus
#define MEM_DATA_LOG2_WIDTH            5                    // 
#define MEM_DATA_WIDTH                 32                   // 
#define MEM_DM_WIDTH                   4                    // 
#define MEM_DP_REDUCTION_ADDR          319                  // 
#define MEM_DP_REDUCTION_OFFSET        0                    // 
#define MEM_DP_REDUCTION_WIDTH         1                    // 
#define MEM_RST_VALID_OFFSET           24                   // 
#define MEM_RST_VALID_WIDTH            1                    // 
#define MEMCD_RMODW_FIFO_DEPTH         40                   // 
#define MEMCD_RMODW_FIFO_DEPTH_OFFSET  8                    // 
#define MEMCD_RMODW_FIFO_DEPTH_WIDTH   16                   // 
#define MEMCD_RMODW_FIFO_PTR_WIDTH     6                  // 
#define MEMCD_RMODW_FIFO_PTR_WIDTH_OFFSET 24                   // 
#define MEMCD_RMODW_FIFO_PTR_WIDTH_WIDTH 8                    // 
#define MEMDATA_RATIO_0_ADDR           323                  // 
#define MEMDATA_RATIO_0_OFFSET         16                   // 
#define MEMDATA_RATIO_0_WIDTH          3                    // 
#define MEMDATA_RATIO_1_ADDR           323                  // 
#define MEMDATA_RATIO_1_OFFSET         24                   // 
#define MEMDATA_RATIO_1_WIDTH          3                    // 
#define MEMDATA_RATIO_WIDTH            3                    // 
#define MISC_PARITY_ERR_BIT            7                    // 
#define MPM_P                          246                  // Start position of micro page mask in command queue register
#define MPMWIDTH                       12                   // number of bits in width micro page mask for a transaction
#define MR0_DATA_WIDTH                 8                    // 
#define MR1_DATA_F0_0_OFFSET           0                    // 
#define MR1_DATA_F0_0_WIDTH            8                    // 
#define MR1_DATA_F0_1_OFFSET           16                   // 
#define MR1_DATA_F0_1_WIDTH            8                    // 
#define MR1_DATA_F1_0_OFFSET           16                   // 
#define MR1_DATA_F1_0_WIDTH            8                    // 
#define MR1_DATA_F1_1_OFFSET           0                    // 
#define MR1_DATA_F1_1_WIDTH            8                    // 
#define MR1_DATA_F2_0_OFFSET           0                    // 
#define MR1_DATA_F2_0_WIDTH            8                    // 
#define MR1_DATA_F2_1_OFFSET           16                   // 
#define MR1_DATA_F2_1_WIDTH            8                    // 
#define MR1_DATA_WIDTH                 8                    // width of Extended Mode Register Data
#define MR2_DATA_0_WIDTH               8                    // 
#define MR2_DATA_F0_0_OFFSET           8                    // 
#define MR2_DATA_F0_0_WIDTH            8                    // 
#define MR2_DATA_F0_1_OFFSET           24                   // 
#define MR2_DATA_F0_1_WIDTH            8                    // 
#define MR2_DATA_F1_0_OFFSET           24                   // 
#define MR2_DATA_F1_0_WIDTH            8                    // 
#define MR2_DATA_F1_1_OFFSET           8                    // 
#define MR2_DATA_F1_1_WIDTH            8                    // 
#define MR2_DATA_F2_0_OFFSET           8                    // 
#define MR2_DATA_F2_0_WIDTH            8                    // 
#define MR2_DATA_F2_1_OFFSET           24                   // 
#define MR2_DATA_F2_1_WIDTH            8                    // 
#define MR2_DATA_WIDTH                 8                    // 
#define MR3_DATA_F0_0_OFFSET           16                   // 
#define MR3_DATA_F0_0_WIDTH            8                    // 
#define MR3_DATA_F0_1_OFFSET           8                    // 
#define MR3_DATA_F0_1_WIDTH            8                    // 
#define MR3_DATA_F1_0_OFFSET           24                   // 
#define MR3_DATA_F1_0_WIDTH            8                    // 
#define MR3_DATA_F1_1_OFFSET           16                   // 
#define MR3_DATA_F1_1_WIDTH            8                    // 
#define MR3_DATA_F2_0_OFFSET           0                    // 
#define MR3_DATA_F2_0_WIDTH            8                    // 
#define MR3_DATA_F2_1_OFFSET           24                   // 
#define MR3_DATA_F2_1_WIDTH            8                    // 
#define MR3_DATA_WIDTH                 8                    // 
#define MR4_DATA_F0_0_OFFSET           0                    // 
#define MR4_DATA_F0_0_WIDTH            8                    // 
#define MR4_DATA_F0_1_OFFSET           24                   // 
#define MR4_DATA_F0_1_WIDTH            8                    // 
#define MR4_DATA_F1_0_OFFSET           8                    // 
#define MR4_DATA_F1_0_WIDTH            8                    // 
#define MR4_DATA_F1_1_OFFSET           0                    // 
#define MR4_DATA_F1_1_WIDTH            8                    // 
#define MR4_DATA_F2_0_OFFSET           16                   // 
#define MR4_DATA_F2_0_WIDTH            8                    // 
#define MR4_DATA_F2_1_OFFSET           8                    // 
#define MR4_DATA_F2_1_WIDTH            8                    // 
#define MR4_DATA_WIDTH                 8                    // 
#define MR8_DATA_0_OFFSET              16                   // 
#define MR8_DATA_0_WIDTH               8                    // 
#define MR8_DATA_1_OFFSET              24                   // 
#define MR8_DATA_1_WIDTH               8                    // 
#define MR8_DATA_WIDTH                 8                    // 
#define MR10_DATA_F0_0_OFFSET          0                    // 
#define MR10_DATA_F0_0_WIDTH           8                    // 
#define MR10_DATA_F0_1_OFFSET          24                   // 
#define MR10_DATA_F0_1_WIDTH           8                    // 
#define MR10_DATA_F1_0_OFFSET          8                    // 
#define MR10_DATA_F1_0_WIDTH           8                    // 
#define MR10_DATA_F1_1_OFFSET          0                    // 
#define MR10_DATA_F1_1_WIDTH           8                    // 
#define MR10_DATA_F2_0_OFFSET          16                   // 
#define MR10_DATA_F2_0_WIDTH           8                    // 
#define MR10_DATA_F2_1_OFFSET          8                    // 
#define MR10_DATA_F2_1_WIDTH           8                    // 
#define MR10_DATA_WIDTH                8                    // 
#define MR11_DATA_F0_0_OFFSET          16                   // 
#define MR11_DATA_F0_0_WIDTH           8                    // 
#define MR11_DATA_F0_1_OFFSET          8                    // 
#define MR11_DATA_F0_1_WIDTH           8                    // 
#define MR11_DATA_F1_0_OFFSET          24                   // 
#define MR11_DATA_F1_0_WIDTH           8                    // 
#define MR11_DATA_F1_1_OFFSET          16                   // 
#define MR11_DATA_F1_1_WIDTH           8                    // 
#define MR11_DATA_F2_0_OFFSET          0                    // 
#define MR11_DATA_F2_0_WIDTH           8                    // 
#define MR11_DATA_F2_1_OFFSET          24                   // 
#define MR11_DATA_F2_1_WIDTH           8                    // 
#define MR11_DATA_WIDTH                8                    // 
#define MR12_DATA_F0_0_OFFSET          0                    // 
#define MR12_DATA_F0_0_WIDTH           8                    // 
#define MR12_DATA_F0_1_OFFSET          24                   // 
#define MR12_DATA_F0_1_WIDTH           8                    // 
#define MR12_DATA_F1_0_OFFSET          8                    // 
#define MR12_DATA_F1_0_WIDTH           8                    // 
#define MR12_DATA_F1_1_OFFSET          0                    // 
#define MR12_DATA_F1_1_WIDTH           8                    // 
#define MR12_DATA_F2_0_OFFSET          16                   // 
#define MR12_DATA_F2_0_WIDTH           8                    // 
#define MR12_DATA_F2_1_OFFSET          8                    // 
#define MR12_DATA_F2_1_WIDTH           8                    // 
#define MR12_DATA_WIDTH                8                    // 
#define MR13_DATA_0_ADDR               214                  // 
#define MR13_DATA_0_OFFSET             16                   // 
#define MR13_DATA_0_WIDTH              8                    // 
#define MR13_DATA_1_ADDR               214                  // 
#define MR13_DATA_1_OFFSET             24                   // 
#define MR13_DATA_1_WIDTH              8                    // 
#define MR13_DATA_WIDTH                8                    // 
#define MR14_DATA_F0_0_OFFSET          0                    // 
#define MR14_DATA_F0_0_WIDTH           8                    // 
#define MR14_DATA_F0_1_OFFSET          24                   // 
#define MR14_DATA_F0_1_WIDTH           8                    // 
#define MR14_DATA_F1_0_OFFSET          8                    // 
#define MR14_DATA_F1_0_WIDTH           8                    // 
#define MR14_DATA_F1_1_OFFSET          0                    // 
#define MR14_DATA_F1_1_WIDTH           8                    // 
#define MR14_DATA_F2_0_OFFSET          16                   // 
#define MR14_DATA_F2_0_WIDTH           8                    // 
#define MR14_DATA_F2_1_OFFSET          8                    // 
#define MR14_DATA_F2_1_WIDTH           8                    // 
#define MR14_DATA_WIDTH                8                    // 
#define MR16_DATA_0_OFFSET             16                   // 
#define MR16_DATA_0_WIDTH              8                    // 
#define MR16_DATA_1_OFFSET             24                   // 
#define MR16_DATA_1_WIDTH              8                    // 
#define MR16_DATA_WIDTH                8                    // 
#define MR17_DATA_0_OFFSET             0                    // 
#define MR17_DATA_0_WIDTH              8                    // 
#define MR17_DATA_1_OFFSET             8                    // 
#define MR17_DATA_1_WIDTH              8                    // 
#define MR17_DATA_WIDTH                8                    // 
#define MR20_DATA_0_OFFSET             16                   // 
#define MR20_DATA_0_WIDTH              8                    // 
#define MR20_DATA_1_OFFSET             24                   // 
#define MR20_DATA_1_WIDTH              8                    // 
#define MR20_DATA_WIDTH                8                    // 
#define MR22_DATA_F0_0_OFFSET          0                    // 
#define MR22_DATA_F0_0_WIDTH           8                    // 
#define MR22_DATA_F0_1_OFFSET          24                   // 
#define MR22_DATA_F0_1_WIDTH           8                    // 
#define MR22_DATA_F1_0_OFFSET          8                    // 
#define MR22_DATA_F1_0_WIDTH           8                    // 
#define MR22_DATA_F1_1_OFFSET          0                    // 
#define MR22_DATA_F1_1_WIDTH           8                    // 
#define MR22_DATA_F2_0_OFFSET          16                   // 
#define MR22_DATA_F2_0_WIDTH           8                    // 
#define MR22_DATA_F2_1_OFFSET          8                    // 
#define MR22_DATA_F2_1_WIDTH           8                    // 
#define MR22_DATA_WIDTH                8                    // 
#define MR23_DATA_OFFSET               16                   // 
#define MR23_DATA_WIDTH                8                    // 
#define MR_DATA_WIDTH                  8                    // 
#define MR_FSP_DATA_VALID_F0_OFFSET    24                   // 
#define MR_FSP_DATA_VALID_F0_WIDTH     1                    // 
#define MR_FSP_DATA_VALID_F1_OFFSET    0                    // 
#define MR_FSP_DATA_VALID_F1_WIDTH     1                    // 
#define MR_FSP_DATA_VALID_F2_OFFSET    8                    // 
#define MR_FSP_DATA_VALID_F2_WIDTH     1                    // 
#define MR_FSP_DATA_VALID_WIDTH        1                    // 
#define MRR_CMD_SOURCE_WIDTH           3                    // 
#define MRR_DATA_MASK_WIDTH            32                   // 
#define MRR_DATA_WIDTH                 8                    // 
#define MRR_ERROR_STATUS_OFFSET        0                    // 
#define MRR_ERROR_STATUS_WIDTH         1                    // 
#define MRR_LSB_REG_OFFSET             24                   // 
#define MRR_LSB_REG_WIDTH              8                    // 
#define MRR_MSB_REG_OFFSET             0                    // 
#define MRR_MSB_REG_WIDTH              8                    // 
#define MRR_PROMOTE_THRESHOLD_F0_OFFSET 0                    // 
#define MRR_PROMOTE_THRESHOLD_F0_WIDTH 16                   // 
#define MRR_PROMOTE_THRESHOLD_F1_OFFSET 16                   // 
#define MRR_PROMOTE_THRESHOLD_F1_WIDTH 16                   // 
#define MRR_PROMOTE_THRESHOLD_F2_OFFSET 0                    // 
#define MRR_PROMOTE_THRESHOLD_F2_WIDTH 16                   // 
#define MRR_PROMOTE_THRESHOLD_WIDTH    16                   // 
#define MRR_TEMPCHK_HIGH_THRESHOLD_F0_OFFSET 0                    // 
#define MRR_TEMPCHK_HIGH_THRESHOLD_F0_WIDTH 24                   // 
#define MRR_TEMPCHK_HIGH_THRESHOLD_F1_OFFSET 0                    // 
#define MRR_TEMPCHK_HIGH_THRESHOLD_F1_WIDTH 24                   // 
#define MRR_TEMPCHK_HIGH_THRESHOLD_F2_OFFSET 0                    // 
#define MRR_TEMPCHK_HIGH_THRESHOLD_F2_WIDTH 24                   // 
#define MRR_TEMPCHK_HIGH_THRESHOLD_WIDTH 24                   // 
#define MRR_TEMPCHK_NORM_THRESHOLD_F0_OFFSET 0                    // 
#define MRR_TEMPCHK_NORM_THRESHOLD_F0_WIDTH 24                   // 
#define MRR_TEMPCHK_NORM_THRESHOLD_F1_OFFSET 0                    // 
#define MRR_TEMPCHK_NORM_THRESHOLD_F1_WIDTH 24                   // 
#define MRR_TEMPCHK_NORM_THRESHOLD_F2_OFFSET 0                    // 
#define MRR_TEMPCHK_NORM_THRESHOLD_F2_WIDTH 24                   // 
#define MRR_TEMPCHK_NORM_THRESHOLD_WIDTH 24                   // 
#define MRR_TEMPCHK_TIMEOUT_BIT        3                    // 
#define MRR_TEMPCHK_TIMEOUT_F0_OFFSET  0                    // 
#define MRR_TEMPCHK_TIMEOUT_F0_WIDTH   24                   // 
#define MRR_TEMPCHK_TIMEOUT_F1_OFFSET  0                    // 
#define MRR_TEMPCHK_TIMEOUT_F1_WIDTH   24                   // 
#define MRR_TEMPCHK_TIMEOUT_F2_OFFSET  0                    // 
#define MRR_TEMPCHK_TIMEOUT_F2_WIDTH   24                   // 
#define MRR_TEMPCHK_TIMEOUT_WIDTH      24                   // 
#define MRS_WIDTH                      8                    // 
#define MRSINGLE_DATA_0_ADDR           206                  // 
#define MRSINGLE_DATA_0_OFFSET         0                    // 
#define MRSINGLE_DATA_0_WIDTH          8                    // 
#define MRSINGLE_DATA_1_ADDR           206                  // 
#define MRSINGLE_DATA_1_OFFSET         8                    // 
#define MRSINGLE_DATA_1_WIDTH          8                    // 
#define MRSINGLE_DATA_WIDTH            8                    // 
#define MRW_ARB_FM_SINGLE              6                    // index pointer to the one hot arbitration for an MRW single initiated by FM task module
#define MRW_ARB_FREQ_CHANGE            3                    // index pointer to the one hot arbitration for an MRW initiated during a frequency change
#define MRW_ARB_FREQ_CHANGE_FSP        5                    // index pointer to the one hot arbitration for an MRW initiated during a frequency change
#define MRW_ARB_FSP_SET_OP             4                    // index pointer to the one hot arbitration for an MRW initiated during a frequency change
#define MRW_ARB_NUM_REQ                11                   // The number of requestest in the MRW's  one hot arbitration
#define MRW_ARB_PWR_ON_DLLRST          2                    // index pointer to the one hot arbitration for an MRW initiated at power on for the DLL reset
#define MRW_ARB_PWR_ON_SM              1                    // index pointer to the one hot arbitration for an MRW initiated by at power on
#define MRW_ARB_SOFTWARE               0                    // index pointer to the one hot arbitration for an MRW initiated by software
#define MRW_ARB_ZQ                     7                    // index pointer to the one hot arbitration for an MRW initiated for zq calibration
#define MRW_CS_WIDTH                   8                    // 
#define MRW_CSNUM_END                  8                    // 
#define MRW_CSNUM_START                15                   // 
#define MRW_DFS_UPDATE_FRC_OFFSET      24                   // 
#define MRW_DFS_UPDATE_FRC_WIDTH       2                    // 
#define MRW_MODEBIT_ALL                16                   // 
#define MRW_MODEBIT_BASE               17                   // 
#define MRW_MODEBIT_FSP_UPDATE         26                   // 
#define MRW_MODEBIT_OW                 19                   // 
#define MRW_MODEBIT_PASR               18                   // 
#define MRW_MODEBIT_SINGLE             23                   // 
#define MRW_MODEBIT_START              25                   // 
#define MRW_MODEBIT_UPDATEALL          24                   // 
#define MRW_PROMOTE_THRESHOLD_F0_OFFSET 16                   // 
#define MRW_PROMOTE_THRESHOLD_F0_WIDTH 16                   // 
#define MRW_PROMOTE_THRESHOLD_F1_OFFSET 0                    // 
#define MRW_PROMOTE_THRESHOLD_F1_WIDTH 16                   // 
#define MRW_PROMOTE_THRESHOLD_F2_OFFSET 16                   // 
#define MRW_PROMOTE_THRESHOLD_F2_WIDTH 16                   // 
#define MRW_PROMOTE_THRESHOLD_WIDTH    16                   // 
#define MRW_REGNUM_END                 0                    // 
#define MRW_REGNUM_START               7                    // 
#define MRW_REGNUM_WIDTH               8                    // 
#define MRW_STATUS_OFFSET              0                    // 
#define MRW_STATUS_WIDTH               8                    // 
#define MULTI_CHANNEL_ZQ_CAL_MASTER_OFFSET 24                   // 
#define MULTI_CHANNEL_ZQ_CAL_MASTER_WIDTH 1                    // 
#define NO_AUTO_MRR_INIT_OFFSET        24                   // 
#define NO_AUTO_MRR_INIT_WIDTH         1                    // 
#define NO_MEMORY_DM_OFFSET            24                   // 
#define NO_MEMORY_DM_WIDTH             1                    // 
#define NO_MRW_INIT_OFFSET             8                    // 
#define NO_MRW_INIT_WIDTH              1                    // 
#define NO_SREF                        0x0   // encoding of NO_SREF
#define NO_ZQ_INIT_OFFSET              0                    // 
#define NO_ZQ_INIT_WIDTH               1                    // 
#define NON_ECC_REGION_ENABLE_OFFSET   0                    // 
#define NON_ECC_REGION_ENABLE_WIDTH    16                   // 
#define NON_ECC_REGION_END_ADDR_0_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_0_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_1_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_1_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_2_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_2_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_3_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_3_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_4_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_4_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_5_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_5_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_6_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_6_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_7_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_7_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_8_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_8_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_9_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_9_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_10_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_10_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_11_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_11_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_12_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_12_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_13_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_13_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_14_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_14_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_15_OFFSET 16                   // 
#define NON_ECC_REGION_END_ADDR_15_WIDTH 13                   // 
#define NON_ECC_REGION_END_ADDR_WIDTH  13                   // 
#define NON_ECC_REGION_START_ADDR_0_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_0_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_1_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_1_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_2_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_2_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_3_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_3_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_4_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_4_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_5_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_5_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_6_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_6_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_7_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_7_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_8_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_8_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_9_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_9_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_10_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_10_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_11_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_11_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_12_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_12_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_13_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_13_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_14_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_14_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_15_OFFSET 0                    // 
#define NON_ECC_REGION_START_ADDR_15_WIDTH 13                   // 
#define NON_ECC_REGION_START_ADDR_WIDTH 13                   // 
#define NON_INHIBIT_CMD_WIDTH          9                    // 
#define NUM_ADDR_RANGES                16                   // 
#define NUM_AXI_PORTS                  7                    // 
#define NUM_BANK                       16                   // number of banks in the DIMM, one-hot coded
#define NUM_BANK_PER_ROTATION_GROUP    16                   // 
#define NUM_COMMAND_MUX_SOURCES        4                    // 
#define NUM_CTLR_PORTS                 7                    // 
#define NUM_DRAM_ERROR_PADS            0                    // 
#define NUM_ECC_BUFFERS                8                    // 
#define NUM_ECC_BUFFERS_WIDTH          3                    // 
#define NUM_INT_GROUPS                 16                   // 
#define NUM_LCNT_TIMEOUT_TIMERS        7                    // 
#define NUM_NON_ECC_REGIONS            16                   // 
#define NUM_PORTS                      7                    // 
#define NUM_PQ_PORTS                   7                    // 
#define NUM_PRIORITIES                 8                    // 
#define NUM_Q_ENTRIES_ACT_DISABLE_OFFSET 24                   // 
#define NUM_Q_ENTRIES_ACT_DISABLE_WIDTH 5                    // 
#define NUM_READ_BUFFERS               7                    // 
#define NUM_RMODW_FIFOS                4                    // 
#define NUM_RMODW_FIFOS_WIDTH          2                    // 
#define NUM_TEST_AXI_PORTS             7                    // 
#define NWR_F0_OFFSET                  24                   // 
#define NWR_F0_WIDTH                   8                    // 
#define NWR_F1_OFFSET                  0                    // 
#define NWR_F1_WIDTH                   8                    // 
#define NWR_F2_OFFSET                  8                    // 
#define NWR_F2_WIDTH                   8                    // 
#define NWR_WIDTH                      8                    // width of minimum valid command hold time after CKE de-assertion during self-refresh value
#define ODT_EN_F0_OFFSET               16                   // 
#define ODT_EN_F0_WIDTH                1                    // 
#define ODT_EN_F1_OFFSET               24                   // 
#define ODT_EN_F1_WIDTH                1                    // 
#define ODT_EN_F2_OFFSET               0                    // 
#define ODT_EN_F2_WIDTH                1                    // 
#define ODT_EN_WIDTH                   1                    // 
#define ODT_RD_MAP_CS0_OFFSET          8                    // 
#define ODT_RD_MAP_CS0_WIDTH           2                    // 
#define ODT_RD_MAP_CS1_OFFSET          24                   // 
#define ODT_RD_MAP_CS1_WIDTH           2                    // 
#define ODT_TICK_MINUS_ADJ_OFFSET      24                   // 
#define ODT_TICK_MINUS_ADJ_WIDTH       4                    // 
#define ODT_TICK_PLUS_ADJ_OFFSET       16                   // 
#define ODT_TICK_PLUS_ADJ_WIDTH        4                    // 
#define ODT_VALUE_OFFSET               16                   // 
#define ODT_VALUE_WIDTH                2                    // 
#define ODT_WR_MAP_CS0_OFFSET          16                   // 
#define ODT_WR_MAP_CS0_WIDTH           2                    // 
#define ODT_WR_MAP_CS1_OFFSET          0                    // 
#define ODT_WR_MAP_CS1_WIDTH           2                    // 
#define OPTIMAL_RMODW_EN_OFFSET        8                    // 
#define OPTIMAL_RMODW_EN_WIDTH         1                    // 
#define OPTIMAL_RMODW_WRITE_REDUC_EN_OFFSET 16                   // 
#define OPTIMAL_RMODW_WRITE_REDUC_EN_WIDTH 1                    // 
#define OSC_TIME_WIDTH                 16                   // 
#define OSC_VARIANCE_LIMIT_OFFSET      0                    // 
#define OSC_VARIANCE_LIMIT_WIDTH       16                   // 
#define OUT_OF_RANGE_ADDR_OFFSET       0                    // 
#define OUT_OF_RANGE_ADDR_WIDTH        33                   // 
#define OUT_OF_RANGE_LENGTH_OFFSET     8                    // 
#define OUT_OF_RANGE_LENGTH_WIDTH      12                   // 
#define OUT_OF_RANGE_SOURCE_ID_OFFSET  0                    // 
#define OUT_OF_RANGE_SOURCE_ID_WIDTH   19                   // 
#define OUT_OF_RANGE_TYPE_OFFSET       24                   // 
#define OUT_OF_RANGE_TYPE_WIDTH        7                    // 
#define PAGE_WIDTH                     21                   // 
#define PARITY_ERROR_ADDRESS_OFFSET    0                    // 
#define PARITY_ERROR_ADDRESS_WIDTH     33                   // 
#define PARITY_ERROR_BUS_CHANNEL_OFFSET 0                    // 
#define PARITY_ERROR_BUS_CHANNEL_WIDTH 13                   // 
#define PARITY_ERROR_CMD_CHAN_STATUS_WIDTH 10                   // 
#define PARITY_ERROR_DATA_CHAN_STATUS_WIDTH 3                    // 
#define PARITY_ERROR_INFO_WIDTH        59                   // 
#define PARITY_ERROR_MASTER_ID_OFFSET  8                    // 
#define PARITY_ERROR_MASTER_ID_WIDTH   19                   // 
#define PARITY_ERROR_TYPE_WIDTH        3                    // 
#define PARITY_ERROR_WRITE_DATA_OFFSET 0                    // 
#define PARITY_ERROR_WRITE_DATA_PARITY_VECTOR_OFFSET 0                    // 
#define PARITY_ERROR_WRITE_DATA_PARITY_VECTOR_WIDTH 16                   // 
#define PARITY_ERROR_WRITE_DATA_WIDTH  128                  // 
#define PARITY_OVERLAP_ERROR_INJECT_DATA_OFFSET 0                    // 
#define PARITY_OVERLAP_ERROR_INJECT_DATA_WIDTH 7                    // 
#define PARITY_OVERLAP_ERROR_INJECT_SRC_OFFSET 24                   // 
#define PARITY_OVERLAP_ERROR_INJECT_SRC_WIDTH 2                    // 
#define PBR_CONT_REQ_EN                1                    // 
#define PBR_CONT_REQ_EN_OFFSET         16                   // 
#define PBR_CONT_REQ_EN_WIDTH          1                    // 
#define PBR_MODE_EN_OFFSET             24                   // 
#define PBR_MODE_EN_WIDTH              4                    // 
#define PBR_NUMERIC_ORDER_OFFSET       8                    // 
#define PBR_NUMERIC_ORDER_WIDTH        1                    // 
#define PCPCS_PD_EN_OFFSET             8                    // 
#define PCPCS_PD_EN_WIDTH              1                    // 
#define PCPCS_PD_ENTER_DEPTH_OFFSET    16                   // 
#define PCPCS_PD_ENTER_DEPTH_WIDTH     6                    // 
#define PCPCS_PD_ENTER_TIMER_OFFSET    0                    // 
#define PCPCS_PD_ENTER_TIMER_WIDTH     8                    // 
#define PCPCS_PD_EXIT_DEPTH_OFFSET     24                   // 
#define PCPCS_PD_EXIT_DEPTH_WIDTH      6                    // 
#define PCPCS_PD_MASK_OFFSET           8                    // 
#define PCPCS_PD_MASK_WIDTH            2                    // 
#define PERIPHERAL_MRR_DATA_ADDR       188                  // 
#define PERIPHERAL_MRR_DATA_OFFSET     0                    // 
#define PERIPHERAL_MRR_DATA_WIDTH      40                   // width of register interface MRR data and chip
#define PHY_INDEP_INIT_MODE_ADDR       28                   // 
#define PHY_INDEP_INIT_MODE_OFFSET     8                    // 
#define PHY_INDEP_INIT_MODE_WIDTH      1                    // 
#define PHY_INDEP_TRAIN_MODE_OFFSET    24                   // 
#define PHY_INDEP_TRAIN_MODE_WIDTH     1                    // 
#define PHY_MAX_REG_ADDR_WIDTH         12                   // 
#define PHYMSTR_DFI4_PROMOTE_THRESHOLD_F0_OFFSET 0                    // 
#define PHYMSTR_DFI4_PROMOTE_THRESHOLD_F0_WIDTH 16                   // 
#define PHYMSTR_DFI4_PROMOTE_THRESHOLD_F1_OFFSET 0                    // 
#define PHYMSTR_DFI4_PROMOTE_THRESHOLD_F1_WIDTH 16                   // 
#define PHYMSTR_DFI4_PROMOTE_THRESHOLD_F2_OFFSET 0                    // 
#define PHYMSTR_DFI4_PROMOTE_THRESHOLD_F2_WIDTH 16                   // 
#define PHYMSTR_DFI4_PROMOTE_THRESHOLD_WIDTH 16                   // 
#define PHYMSTR_DFI_VERSION_4P0V1_OFFSET 8                    // 
#define PHYMSTR_DFI_VERSION_4P0V1_WIDTH 1                    // 
#define PHYMSTR_ERROR_STATUS_OFFSET    0                    // 
#define PHYMSTR_ERROR_STATUS_WIDTH     2                    // 
#define PHYMSTR_LPC_SR_LEVEL_WIDTH     1                    // 
#define PHYMSTR_NO_AREF_OFFSET         24                   // 
#define PHYMSTR_NO_AREF_WIDTH          1                    // 
#define PHYMSTR_TRAIN_AFTER_INIT_COMPLETE_OFFSET 16                   // 
#define PHYMSTR_TRAIN_AFTER_INIT_COMPLETE_WIDTH 1                    // 
#define PLACEMENT_EN_OFFSET            0                    // 
#define PLACEMENT_EN_WIDTH             1                    // 
#define PORT0_BYTE_WIDTH               4                    // 
#define PORT0_CW_PER_PW                1                    // 
#define PORT0_DAGR_DATA_VALID_WIDTH    4                    // 
#define PORT0_DATA_WIDTH               128                  // 
#define PORT0_FULL_READ_BEAT_WIDTH     5                    // 
#define PORT0_MASK_WIDTH               16                   // 
#define PORT0_READ_BEAT_WIDTH          4                    // 
#define PORT0_WCTRL_PARITY_WIDTH       3                    // 
#define PORT1_BYTE_WIDTH               4                    // 
#define PORT1_CW_PER_PW                1                    // 
#define PORT1_DAGR_DATA_VALID_WIDTH    4                    // 
#define PORT1_DATA_WIDTH               128                  // 
#define PORT1_FULL_READ_BEAT_WIDTH     5                    // 
#define PORT1_MASK_WIDTH               16                   // 
#define PORT1_READ_BEAT_WIDTH          4                    // 
#define PORT1_WCTRL_PARITY_WIDTH       3                    // 
#define PORT2_BYTE_WIDTH               4                    // 
#define PORT2_CW_PER_PW                1                    // 
#define PORT2_DAGR_DATA_VALID_WIDTH    4                    // 
#define PORT2_DATA_WIDTH               128                  // 
#define PORT2_FULL_READ_BEAT_WIDTH     5                    // 
#define PORT2_MASK_WIDTH               16                   // 
#define PORT2_READ_BEAT_WIDTH          4                    // 
#define PORT2_WCTRL_PARITY_WIDTH       3                    // 
#define PORT2CORE_PEQC                 4                    // 
#define PORT2CORE_PGTC_LOWER           5                    // 
#define PORT2CORE_PGTC_UPPER           8                    // 
#define PORT2CORE_PLTC_LOWER           0                    // 
#define PORT2CORE_PLTC_UPPER           3                    // 
#define PORT2CORE_RATIO_WIDTH          4                    // 
#define PORT3_BYTE_WIDTH               4                    // 
#define PORT3_CW_PER_PW                1                    // 
#define PORT3_DAGR_DATA_VALID_WIDTH    4                    // 
#define PORT3_DATA_WIDTH               128                  // 
#define PORT3_FULL_READ_BEAT_WIDTH     5                    // 
#define PORT3_MASK_WIDTH               16                   // 
#define PORT3_READ_BEAT_WIDTH          4                    // 
#define PORT3_WCTRL_PARITY_WIDTH       3                    // 
#define PORT4_BYTE_WIDTH               4                    // 
#define PORT4_CW_PER_PW                1                    // 
#define PORT4_DAGR_DATA_VALID_WIDTH    4                    // 
#define PORT4_DATA_WIDTH               128                  // 
#define PORT4_FULL_READ_BEAT_WIDTH     5                    // 
#define PORT4_MASK_WIDTH               16                   // 
#define PORT4_READ_BEAT_WIDTH          4                    // 
#define PORT4_WCTRL_PARITY_WIDTH       3                    // 
#define PORT5_BYTE_WIDTH               4                    // 
#define PORT5_CW_PER_PW                1                    // 
#define PORT5_DAGR_DATA_VALID_WIDTH    4                    // 
#define PORT5_DATA_WIDTH               128                  // 
#define PORT5_FULL_READ_BEAT_WIDTH     5                    // 
#define PORT5_MASK_WIDTH               16                   // 
#define PORT5_READ_BEAT_WIDTH          4                    // 
#define PORT5_WCTRL_PARITY_WIDTH       3                    // 
#define PORT6_BYTE_WIDTH               4                    // 
#define PORT6_CW_PER_PW                1                    // 
#define PORT6_DAGR_DATA_VALID_WIDTH    4                    // 
#define PORT6_DATA_WIDTH               128                  // 
#define PORT6_FULL_READ_BEAT_WIDTH     5                    // 
#define PORT6_MASK_WIDTH               16                   // 
#define PORT6_READ_BEAT_WIDTH          4                    // 
#define PORT6_WCTRL_PARITY_WIDTH       3                    // 
#define PORT_ADDR_PROTECTION_EN_OFFSET 16                   // 
#define PORT_ADDR_PROTECTION_EN_WIDTH  1                    // 
#define PORT_BEAT_SIZE_WIDTH           3                    // 
#define PORT_CMD_ERROR_ADDR_OFFSET     0                    // 
#define PORT_CMD_ERROR_ADDR_WIDTH      33                   // 
#define PORT_CMD_ERROR_ID_OFFSET       8                    // 
#define PORT_CMD_ERROR_ID_WIDTH        19                   // 
#define PORT_CMD_ERROR_TYPE_OFFSET     0                    // 
#define PORT_CMD_ERROR_TYPE_WIDTH      3                    // 
#define PORT_ERROR_ID_WIDTH            19                   // 
#define PORT_RANGE_TYPE_WIDTH          2                    // 
#define PORT_SPLIT_BLOCK_SIZE_WIDTH    7                    // 
#define PORT_WIDTH                     3                    // 
#define PORTWIDTH                      3                    // Width of the channel id for a transaction
#define PPR_BANK_ADDRESS_OFFSET        24                   // 
#define PPR_BANK_ADDRESS_WIDTH         3                    // 
#define PPR_COMMAND_MRR_REGNUM_OFFSET  24                   // 
#define PPR_COMMAND_MRR_REGNUM_WIDTH   8                    // 
#define PPR_COMMAND_MRW_DATA_OFFSET    24                   // 
#define PPR_COMMAND_MRW_DATA_WIDTH     8                    // 
#define PPR_COMMAND_MRW_REGNUM_OFFSET  16                   // 
#define PPR_COMMAND_MRW_REGNUM_WIDTH   8                    // 
#define PPR_COMMAND_WIDTH              3                    // 
#define PPR_CONTROL_OFFSET             0                    // 
#define PPR_CONTROL_WIDTH              1                    // 
#define PPR_CS_ADDRESS_OFFSET          0                    // 
#define PPR_CS_ADDRESS_WIDTH           1                    // 
#define PPR_ROW_ADDRESS_OFFSET         0                    // 
#define PPR_ROW_ADDRESS_WIDTH          17                   // 
#define PPR_STATUS_OFFSET              8                    // 
#define PPR_STATUS_WIDTH               2                    // 
#define PQ_SOURCEWIDTH                 3                    // Width of the placement queue source id for a transaction
#define PRE_2TICK_COUNT_OFFSET         16                   // 
#define PRE_2TICK_COUNT_WIDTH          3                    // 
#define PRE_4TICK_COUNT_OFFSET         8                    // 
#define PRE_4TICK_COUNT_WIDTH          3                    // 
#define PRG_MAX_RATIO                  2                    // 
#define PRG_PORT0_CW_PER_PW            4                    // 
#define PRG_PORT0_CW_PER_PW_WIDTH      2                    // 
#define PRG_PORT1_CW_PER_PW            4                    // 
#define PRG_PORT1_CW_PER_PW_WIDTH      2                    // 
#define PRG_PORT2_CW_PER_PW            4                    // 
#define PRG_PORT2_CW_PER_PW_WIDTH      2                    // 
#define PRG_PORT3_CW_PER_PW            4                    // 
#define PRG_PORT3_CW_PER_PW_WIDTH      2                    // 
#define PRG_PORT4_CW_PER_PW            4                    // 
#define PRG_PORT4_CW_PER_PW_WIDTH      2                    // 
#define PRG_PORT5_CW_PER_PW            4                    // 
#define PRG_PORT5_CW_PER_PW_WIDTH      2                    // 
#define PRG_PORT6_CW_PER_PW            4                    // 
#define PRG_PORT6_CW_PER_PW_WIDTH      2                    // 
#define PRIORITY_EN_OFFSET             8                    // 
#define PRIORITY_EN_WIDTH              1                    // 
#define PRIORITY_P                     214                  // Start position of priority in command queue register
#define PRIORITY_SLIDE_P               205                  // Start position of priority_slide in command queue register
#define PRIORITYWIDTH                  3                    // Width of the priority of the transaction
#define PRIORITYWIDTHBIT               9                    // Width of the priority bit log2ceil(PRITORIYWIDTH)
#define PROGRAMMABLE_ADDRESS_ORDER_OFFSET 0                    // 
#define PROGRAMMABLE_ADDRESS_ORDER_WIDTH 4                    // 
#define PWRDN_SHIFT_DELAY_OFFSET       16                   // 
#define PWRDN_SHIFT_DELAY_WIDTH        8                    // 
#define PWRUP_SREFRESH_EXIT_OFFSET     16                   // 
#define PWRUP_SREFRESH_EXIT_WIDTH      1                    // 
#define Q_FULLNESS_OFFSET              0                    // 
#define Q_FULLNESS_WIDTH               5                    // 
#define Q_TOTAL_WORDS_P                225                  // Start position of total words in the command queue register
#define QOS_PARITY_ERR_BIT             6                    // 
#define R2R_DIFFCS_DLY_F0_OFFSET       24                   // 
#define R2R_DIFFCS_DLY_F0_WIDTH        5                    // 
#define R2R_DIFFCS_DLY_F1_OFFSET       24                   // 
#define R2R_DIFFCS_DLY_F1_WIDTH        5                    // 
#define R2R_DIFFCS_DLY_F2_OFFSET       24                   // 
#define R2R_DIFFCS_DLY_F2_WIDTH        5                    // 
#define R2R_DIFFCS_DLY_WIDTH           5                    // width of additional read to read delay to different cs
#define R2R_SAMECS_DLY_OFFSET          16                   // 
#define R2R_SAMECS_DLY_WIDTH           5                    // width of additional read to read delay to same cs
#define R2W_DIFFCS_DLY_F0_OFFSET       0                    // 
#define R2W_DIFFCS_DLY_F0_WIDTH        5                    // 
#define R2W_DIFFCS_DLY_F1_OFFSET       0                    // 
#define R2W_DIFFCS_DLY_F1_WIDTH        5                    // 
#define R2W_DIFFCS_DLY_F2_OFFSET       0                    // 
#define R2W_DIFFCS_DLY_F2_WIDTH        5                    // 
#define R2W_DIFFCS_DLY_WIDTH           5                    // width of additional read to write delay to different cs
#define R2W_SAMECS_DLY_F0_OFFSET       24                   // 
#define R2W_SAMECS_DLY_F0_WIDTH        5                    // 
#define R2W_SAMECS_DLY_F1_OFFSET       0                    // 
#define R2W_SAMECS_DLY_F1_WIDTH        5                    // 
#define R2W_SAMECS_DLY_F2_OFFSET       8                    // 
#define R2W_SAMECS_DLY_F2_WIDTH        5                    // 
#define R2W_SAMECS_DLY_WIDTH           5                    // width of additional read to write delay to same cs
#define RAA_CNT_DECR_PER_REF_WIDTH     10                   // 
#define RAA_CNT_WIDTH                  10                   // 
#define RAAIMT_WIDTH                   10                   // 
#define RAAMMT_WIDTH                   10                   // 
#define RD_DBI_EN_OFFSET               24                   // 
#define RD_DBI_EN_WIDTH                1                    // 
#define RD_PREAMBLE_LEN_F0_OFFSET      24                   // 
#define RD_PREAMBLE_LEN_F0_WIDTH       8                    // 
#define RD_PREAMBLE_LEN_F1_OFFSET      8                    // 
#define RD_PREAMBLE_LEN_F1_WIDTH       8                    // 
#define RD_PREAMBLE_LEN_F2_OFFSET      24                   // 
#define RD_PREAMBLE_LEN_F2_WIDTH       8                    // 
#define RD_PREAMBLE_LEN_WIDTH          8                    // 
#define RD_PREAMBLE_TRAINING_EN_OFFSET 8                    // 
#define RD_PREAMBLE_TRAINING_EN_WIDTH  1                    // 
#define RD_TO_ODTH_F0_OFFSET           8                    // 
#define RD_TO_ODTH_F0_WIDTH            6                    // 
#define RD_TO_ODTH_F1_OFFSET           16                   // 
#define RD_TO_ODTH_F1_WIDTH            6                    // 
#define RD_TO_ODTH_F2_OFFSET           24                   // 
#define RD_TO_ODTH_F2_WIDTH            6                    // 
#define RD_TO_ODTH_WIDTH               6                    // 
#define RDCSLAT_MAX                    127                  // 
#define RDDATA_EN_MAX                  128                  // 
#define RDDATA_GATHER_FIFO_PTR_WIDTH   4                    // 
#define RDDATA_INFO_FIFO_PTR_WIDTH     6                    // 
#define RDDATA_INFO_FIFO_WIDTH         93                   // 
#define RDLAT_ADJ_WIDTH                7                    // 
#define RDLAT_WIDTH                    8                    // 
#define READ_ADDR_CHAN_PARITY_EN_OFFSET 0                    // 
#define READ_ADDR_CHAN_PARITY_EN_WIDTH 1                    // 
#define READ_ADDR_CHAN_PARITY_INVERT_OFFSET 24                   // 
#define READ_ADDR_CHAN_PARITY_INVERT_WIDTH 1                    // 
#define READ_ADDR_CHAN_TRIGGER_PARITY_EN_OFFSET 8                    // 
#define READ_ADDR_CHAN_TRIGGER_PARITY_EN_WIDTH 1                    // 
#define READ_DATA_CHAN_CORRUPT_PARITY_EN_OFFSET 16                   // 
#define READ_DATA_CHAN_CORRUPT_PARITY_EN_WIDTH 1                    // 
#define READ_DATA_CHAN_PARITY_EN_OFFSET 8                    // 
#define READ_DATA_CHAN_PARITY_EN_WIDTH 1                    // 
#define READ_FIFO_DEPTH                32                   //  must be 1,2,4,8,16,32, and >8 for PLB
#define READ_FIFO_STATUS_WIDTH         8                    // Width of read fifo status buffers
#define READ_MODEREG_ADDR              187                  // 
#define READ_MODEREG_OFFSET            8                    // 
#define READ_MODEREG_WIDTH             17                   // width of parameter to do register interface mode register reads
#define READ_PARITY_ERR_RRESP_EN_OFFSET 8                    // 
#define READ_PARITY_ERR_RRESP_EN_WIDTH 1                    // 
#define READ_RESP_WIDTH                2                    // 
#define READFIFO_DATA_WIDTH            146                  // 
#define REG_ADDR_WIDTH                 13                   // 
#define REG_BYTE_ADDR_WIDTH            PAR_REG_ADDR_WIDTH + REG_BYTE_WIDTH // 
#define REG_BYTE_WIDTH                 2                    // 
#define REG_DATA_WIDTH                 32                   // 
#define REG_DIMM_ENABLE_ADDR           67                   // 
#define REG_DIMM_ENABLE_OFFSET         16                   // 
#define REG_DIMM_ENABLE_WIDTH          1                    // 
#define REG_INTFC_TYPE_SYNC            0                    // 
#define REG_MASK_WIDTH                 4                    // 
#define RFM_HIGH_THRESHOLD_WIDTH       10                   // 
#define RFM_NORM_THRESHOLD_WIDTH       10                   // 
#define RL_TICK_MINUS_ADJ_OFFSET       24                   // 
#define RL_TICK_MINUS_ADJ_WIDTH        4                    // 
#define RL_TICK_PLUS_ADJ_OFFSET        16                   // 
#define RL_TICK_PLUS_ADJ_WIDTH         4                    // 
#define RMODW_BYTE                     3                    // 
#define RMODW_ECC_C_ADDR_OFFSET        0                    // 
#define RMODW_ECC_C_ADDR_WIDTH         33                   // 
#define RMODW_ECC_C_DATA_OFFSET        0                    // 
#define RMODW_ECC_C_DATA_WIDTH         64                   // 
#define RMODW_ECC_C_ID_OFFSET          0                    // 
#define RMODW_ECC_C_ID_WIDTH           19                   // 
#define RMODW_ECC_C_SYND_OFFSET        8                    // 
#define RMODW_ECC_C_SYND_WIDTH         8                    // 
#define RMODW_ECC_U_ADDR_OFFSET        0                    // 
#define RMODW_ECC_U_ADDR_WIDTH         33                   // 
#define RMODW_ECC_U_DATA_OFFSET        0                    // 
#define RMODW_ECC_U_DATA_WIDTH         64                   // 
#define RMODW_ECC_U_ID_OFFSET          0                    // 
#define RMODW_ECC_U_ID_WIDTH           19                   // 
#define RMODW_ECC_U_SYND_OFFSET        8                    // 
#define RMODW_ECC_U_SYND_WIDTH         8                    // 
#define RMODW_LEN_WIDTH                11                   // 
#define RMODW_NUM_BEATS                64                   // 
#define RMODW_WIDTH                    4                    // Width of the read-modify-write control bits
#define RMW_INTERLEAVE_OFFSET          0                    // 
#define RMW_INTERLEAVE_WIDTH           1                    // 
#define RMW_OFFSET_WIDTH               10                   // 
#define ROW_DIFF_0_ADDR                309                  // 
#define ROW_DIFF_0_OFFSET              0                    // 
#define ROW_DIFF_0_WIDTH               3                    // 
#define ROW_DIFF_1_ADDR                309                  // 
#define ROW_DIFF_1_OFFSET              8                    // 
#define ROW_DIFF_1_WIDTH               3                    // 
#define ROW_DIFF_WIDTH                 3                    // 
#define ROW_START_VAL_0_OFFSET         0                    // 
#define ROW_START_VAL_0_WIDTH          3                    // 
#define ROW_START_VAL_1_OFFSET         0                    // 
#define ROW_START_VAL_1_WIDTH          3                    // 
#define ROW_START_VAL_WIDTH            3                    // 
#define ROW_WIDTH                      17                   // 
#define RW2MRW_DLY_F0_OFFSET           0                    // 
#define RW2MRW_DLY_F0_WIDTH            5                    // 
#define RW2MRW_DLY_F1_OFFSET           8                    // 
#define RW2MRW_DLY_F1_WIDTH            5                    // 
#define RW2MRW_DLY_F2_OFFSET           16                   // 
#define RW2MRW_DLY_F2_WIDTH            5                    // 
#define RW2MRW_DLY_WIDTH               5                    // width of additional read or write delay to mode reg write 
#define RW_BIT                         0                    // 
#define RW_SAME_EN_OFFSET              16                   // 
#define RW_SAME_EN_WIDTH               1                    // 
#define RW_SAME_PAGE_EN_OFFSET         24                   // 
#define RW_SAME_PAGE_EN_WIDTH          1                    // 
#define SCRUB_NOT_FROM_PORT_P          258                  // 
#define SD                             #1                   // synchronous logic delay
#define SDRAM_END_BANK                 12                   // 
#define SDRAM_END_COL                  2                    // 
#define SDRAM_END_CS                   32                   // 
#define SDRAM_END_ROW                  15                   // 
#define SDRAM_ROW_WIDTH                17                   // 
#define SDRAM_START_BANK               14                   // 
#define SDRAM_START_COL                11                   // 
#define SDRAM_START_CS                 32                   // 
#define SDRAM_START_ROW                31                   // 
#define SELECT_BANK_IN_Q_OFFSET        0                    // 
#define SELECT_BANK_IN_Q_WIDTH         1                    // 
#define SELECT_DEPTH                   16                   // number of command entries to consider for command selection.
#define SINGLE_BEAT_WIDTH              1                    // 
#define SIZE_PARITY_ERR_BIT            4                    // 
#define SOURCE_ID_P                    186                  // Start position of source_id in command queue register
#define SOURCESIZE                     7                    // size of the buffer id translation memory for a transaction
#define SOURCEWIDTH                    19                   // number of bits in width of the source id for a transaction
#define SPLIT_STATE_WIDTH              6                    // 
#define SR_FIFO_WRDATA_LAT_E1_WIDTH    43                   // 
#define SR_FIFO_WRDATA_LAT_E2_WIDTH    3                    // 
#define SR_FIFO_WREN_LAT_WIDTH         3                    // 
#define SR_LEVEL_WIDTH                 3                    // 
#define SRAM_READ_LATENCY              2                    // 
#define SRAM_READ_LATENCY_OFFSET       16                   // 
#define SRAM_READ_LATENCY_WIDTH        2                    // 
#define SREF_SHORT                     0x1   // encoding of SREF_SHORT
#define SREFRESH_EXIT_NO_REFRESH_OFFSET 24                   // 
#define SREFRESH_EXIT_NO_REFRESH_WIDTH 1                    // 
#define SRPD_SHORT                     0x5   // encoding of SRPD_SHORT
#define START_ACT_ROW                  31                   // start bit of row portion of address used for ACT commands
#define START_ADDR                     0                    // 
#define START_BANK                     14                   // start bit of bank portion of address
#define START_COL                      11                   // start bit of column portion of address
#define START_CS                       32                   // start bit of chip select portion of address
#define START_ENTRY_EQUAL              0                    // 
#define START_OFFSET                   0                    // 
#define START_ROW                      31                   // start bit of row portion of address
#define START_WIDTH                    1                    // 
#define STAT_P                         0                    // Start position of stat in command queue register
#define STAT_WIDTH                     2                    // Number of status bits in the High performance queue entry
#define STRATEGY_2TICK_COUNT_OFFSET    0                    // 
#define STRATEGY_2TICK_COUNT_WIDTH     3                    // 
#define STRATEGY_4TICK_COUNT_OFFSET    24                   // 
#define STRATEGY_4TICK_COUNT_WIDTH     3                    // 
#define SW_DFS_DONE_BIT                5                    // 
#define SW_DFS_TERMINATED_BIT          4                    // 
#define SWAP_CMD_CNT_WIDTH             3                    // 
#define SWAP_EN_ADDR                   318                  // 
#define SWAP_EN_OFFSET                 0                    // 
#define SWAP_EN_WIDTH                  1                    // 
#define SWI_CLK_MODE_WIDTH             2                    // 
#define SWI_CMD_WIDTH                  3                    // 
#define SWI_DFS_CLK_WIDTH              2                    // 
#define SWI_DFS_CMDTYPE_WIDTH          2                    // 
#define SWI_DFS_SREF_WIDTH             2                    // 
#define SWI_LPC_CLK_WIDTH              2                    // 
#define SWI_LPC_CMDTYPE_WIDTH          2                    // 
#define SWI_LPC_SREF_WIDTH             2                    // 
#define SWI_SR_LEVEL_WIDTH             2                    // 
#define SYNC_FIFO_DEPTH                4                    // 
#define SYNC_FIFO_PTR_WIDTH            2                  // 
#define TBST_INT_INTERVAL_OFFSET       16                   // 
#define TBST_INT_INTERVAL_WIDTH        3                    // 
#define TCAL_MAX                       2                    // 
#define TCCD_OFFSET                    24                   // 
#define TCCD_WIDTH                     5                    // 
#define TCCDMW_F0_OFFSET               8                    // 
#define TCCDMW_F0_WIDTH                6                    // 
#define TCCDMW_F1_OFFSET               8                    // 
#define TCCDMW_F1_WIDTH                6                    // 
#define TCCDMW_F2_OFFSET               8                    // 
#define TCCDMW_F2_WIDTH                6                    // 
#define TCCDMW_WIDTH                   6                    // 
#define TCKCKEL_F0_OFFSET              24                   // 
#define TCKCKEL_F0_WIDTH               5                    // 
#define TCKCKEL_F1_OFFSET              16                   // 
#define TCKCKEL_F1_WIDTH               5                    // 
#define TCKCKEL_F2_OFFSET              8                    // 
#define TCKCKEL_F2_WIDTH               5                    // 
#define TCKCKEL_WIDTH                  5                    // width of minimum time valid clock required after CKE de-aasertion while in self-refresh value
#define TCKE_F0_OFFSET                 24                   // 
#define TCKE_F0_WIDTH                  5                    // 
#define TCKE_F1_OFFSET                 24                   // 
#define TCKE_F1_WIDTH                  5                    // 
#define TCKE_F2_OFFSET                 24                   // 
#define TCKE_F2_WIDTH                  5                    // 
#define TCKE_WIDTH                     5                    // width of minimum cke pulse width value
#define TCKEHCMD_F0_OFFSET             16                   // 
#define TCKEHCMD_F0_WIDTH              5                    // 
#define TCKEHCMD_F1_OFFSET             8                    // 
#define TCKEHCMD_F1_WIDTH              5                    // 
#define TCKEHCMD_F2_OFFSET             0                    // 
#define TCKEHCMD_F2_WIDTH              5                    // 
#define TCKEHCMD_WIDTH                 5                    // width of minimum time after CKE assertion before next valid command allowed in self-refresh value
#define TCKEHCS_F0_OFFSET              0                    // 
#define TCKEHCS_F0_WIDTH               5                    // 
#define TCKEHCS_F1_OFFSET              0                    // 
#define TCKEHCS_F1_WIDTH               5                    // 
#define TCKEHCS_F2_OFFSET              0                    // 
#define TCKEHCS_F2_WIDTH               5                    // 
#define TCKEHCS_WIDTH                  5                    // width of minimum CS hold time after CKE assertioni value
#define TCKELCMD_F0_OFFSET             8                    // 
#define TCKELCMD_F0_WIDTH              5                    // 
#define TCKELCMD_F1_OFFSET             0                    // 
#define TCKELCMD_F1_WIDTH              5                    // 
#define TCKELCMD_F2_OFFSET             24                   // 
#define TCKELCMD_F2_WIDTH              5                    // 
#define TCKELCMD_WIDTH                 5                    // width of minimum valid command hold time after CKE de-assertion during self-refresh value
#define TCKELCS_F0_OFFSET              24                   // 
#define TCKELCS_F0_WIDTH               5                    // 
#define TCKELCS_F1_OFFSET              24                   // 
#define TCKELCS_F1_WIDTH               5                    // 
#define TCKELCS_F2_OFFSET              24                   // 
#define TCKELCS_F2_WIDTH               5                    // 
#define TCKELCS_WIDTH                  5                    // width of minimum CS hold time after CKE de-assertioni value
#define TCKELPD_F0_OFFSET              0                    // 
#define TCKELPD_F0_WIDTH               5                    // 
#define TCKELPD_F1_OFFSET              24                   // 
#define TCKELPD_F1_WIDTH               5                    // 
#define TCKELPD_F2_OFFSET              16                   // 
#define TCKELPD_F2_WIDTH               5                    // 
#define TCKELPD_WIDTH                  5                    // width of minimum cke min pulse width during self-refresh value
#define TCKESR_F0_OFFSET               0                    // 
#define TCKESR_F0_WIDTH                8                    // 
#define TCKESR_F1_OFFSET               0                    // 
#define TCKESR_F1_WIDTH                8                    // 
#define TCKESR_F2_OFFSET               0                    // 
#define TCKESR_F2_WIDTH                8                    // 
#define TCKESR_WIDTH                   8                    // width of minimum cke low pulse width during self-refresh value
#define TCKFSPE_F0_OFFSET              16                   // 
#define TCKFSPE_F0_WIDTH               5                    // 
#define TCKFSPE_F1_OFFSET              16                   // 
#define TCKFSPE_F1_WIDTH               5                    // 
#define TCKFSPE_F2_OFFSET              16                   // 
#define TCKFSPE_F2_WIDTH               5                    // 
#define TCKFSPE_WIDTH                  5                    // 
#define TCKFSPX_F0_OFFSET              24                   // 
#define TCKFSPX_F0_WIDTH               5                    // 
#define TCKFSPX_F1_OFFSET              24                   // 
#define TCKFSPX_F1_WIDTH               5                    // 
#define TCKFSPX_F2_OFFSET              24                   // 
#define TCKFSPX_F2_WIDTH               5                    // 
#define TCKFSPX_WIDTH                  5                    // 
#define TCMDCKE_F0_OFFSET              24                   // 
#define TCMDCKE_F0_WIDTH               5                    // 
#define TCMDCKE_F1_OFFSET              0                    // 
#define TCMDCKE_F1_WIDTH               5                    // 
#define TCMDCKE_F2_OFFSET              8                    // 
#define TCMDCKE_F2_WIDTH               5                    // 
#define TCMDCKE_WIDTH                  5                    // width of minimum time after valid command that CKE can de-assert value
#define TCSCKE_F0_OFFSET               24                   // 
#define TCSCKE_F0_WIDTH                5                    // 
#define TCSCKE_F1_OFFSET               8                    // 
#define TCSCKE_F1_WIDTH                5                    // 
#define TCSCKE_F2_OFFSET               24                   // 
#define TCSCKE_F2_WIDTH                5                    // 
#define TCSCKE_WIDTH                   5                    // width of minimum time CS to be de-asserted before CKE de-assertion value
#define TCSCKEH_F0_OFFSET              0                    // 
#define TCSCKEH_F0_WIDTH               5                    // 
#define TCSCKEH_F1_OFFSET              24                   // 
#define TCSCKEH_F1_WIDTH               5                    // 
#define TCSCKEH_F2_OFFSET              16                   // 
#define TCSCKEH_F2_WIDTH               5                    // 
#define TCSCKEH_WIDTH                  5                    // width of minimum CS de-assertion time before CKE can assert value
#define TDAL_F0_OFFSET                 0                    // 
#define TDAL_F0_WIDTH                  8                    // 
#define TDAL_F1_OFFSET                 8                    // 
#define TDAL_F1_WIDTH                  8                    // 
#define TDAL_F2_OFFSET                 16                   // 
#define TDAL_F2_WIDTH                  8                    // 
#define TDAL_WIDTH                     8                    // width of AP write recovery plus precharge delay
#define TDFI_CMD_LAT_WIDTH             1                    // 
#define TDFI_CTRL_DELAY_F0_OFFSET      0                    // 
#define TDFI_CTRL_DELAY_F0_WIDTH       4                    // 
#define TDFI_CTRL_DELAY_F1_OFFSET      0                    // 
#define TDFI_CTRL_DELAY_F1_WIDTH       4                    // 
#define TDFI_CTRL_DELAY_F2_OFFSET      0                    // 
#define TDFI_CTRL_DELAY_F2_WIDTH       4                    // 
#define TDFI_CTRL_DELAY_WIDTH          4                    // 
#define TDFI_CTRLMSG_RESP_F0_OFFSET    16                   // 
#define TDFI_CTRLMSG_RESP_F0_WIDTH     7                    // 
#define TDFI_CTRLMSG_RESP_F1_OFFSET    16                   // 
#define TDFI_CTRLMSG_RESP_F1_WIDTH     7                    // 
#define TDFI_CTRLMSG_RESP_F2_OFFSET    16                   // 
#define TDFI_CTRLMSG_RESP_F2_WIDTH     7                    // 
#define TDFI_CTRLMSG_RESP_WIDTH        7                    // 
#define TDFI_CTRLUPD_INTERVAL_F0_ADDR  864                  // 
#define TDFI_CTRLUPD_INTERVAL_F0_OFFSET 0                    // 
#define TDFI_CTRLUPD_INTERVAL_F0_WIDTH 32                   // 
#define TDFI_CTRLUPD_INTERVAL_F1_ADDR  873                  // 
#define TDFI_CTRLUPD_INTERVAL_F1_OFFSET 0                    // 
#define TDFI_CTRLUPD_INTERVAL_F1_WIDTH 32                   // 
#define TDFI_CTRLUPD_INTERVAL_F2_ADDR  882                  // 
#define TDFI_CTRLUPD_INTERVAL_F2_OFFSET 0                    // 
#define TDFI_CTRLUPD_INTERVAL_F2_WIDTH 32                   // 
#define TDFI_CTRLUPD_INTERVAL_WIDTH    32                   // 
#define TDFI_CTRLUPD_MAX_F0_OFFSET     8                    // 
#define TDFI_CTRLUPD_MAX_F0_WIDTH      21                   // 
#define TDFI_CTRLUPD_MAX_F1_OFFSET     0                    // 
#define TDFI_CTRLUPD_MAX_F1_WIDTH      21                   // 
#define TDFI_CTRLUPD_MAX_F2_OFFSET     0                    // 
#define TDFI_CTRLUPD_MAX_F2_WIDTH      21                   // 
#define TDFI_CTRLUPD_MAX_WIDTH         21                   // 
#define TDFI_CTRLUPD_MIN_OFFSET        8                    // 
#define TDFI_CTRLUPD_MIN_WIDTH         16                   // 
#define TDFI_DRAM_CLK_DISABLE_OFFSET   24                   // 
#define TDFI_DRAM_CLK_DISABLE_WIDTH    4                    // 
#define TDFI_DRAM_CLK_ENABLE_OFFSET    0                    // 
#define TDFI_DRAM_CLK_ENABLE_WIDTH     4                    // 
#define TDFI_INIT_COMPLETE_F0_OFFSET   0                    // 
#define TDFI_INIT_COMPLETE_F0_WIDTH    24                   // 
#define TDFI_INIT_COMPLETE_F1_OFFSET   0                    // 
#define TDFI_INIT_COMPLETE_F1_WIDTH    24                   // 
#define TDFI_INIT_COMPLETE_F2_OFFSET   0                    // 
#define TDFI_INIT_COMPLETE_F2_WIDTH    24                   // 
#define TDFI_INIT_COMPLETE_WIDTH       24                   // 
#define TDFI_INIT_START_F0_OFFSET      0                    // 
#define TDFI_INIT_START_F0_WIDTH       24                   // 
#define TDFI_INIT_START_F1_OFFSET      0                    // 
#define TDFI_INIT_START_F1_WIDTH       24                   // 
#define TDFI_INIT_START_F2_OFFSET      0                    // 
#define TDFI_INIT_START_F2_WIDTH       24                   // 
#define TDFI_INIT_START_WIDTH          24                   // 
#define TDFI_LP_RESP_OFFSET            0                    // 
#define TDFI_LP_RESP_WIDTH             3                    // 
#define TDFI_PHY_RDLAT_F0_OFFSET       0                    // 
#define TDFI_PHY_RDLAT_F0_WIDTH        7                    // 
#define TDFI_PHY_RDLAT_F1_OFFSET       24                   // 
#define TDFI_PHY_RDLAT_F1_WIDTH        7                    // 
#define TDFI_PHY_RDLAT_F2_OFFSET       24                   // 
#define TDFI_PHY_RDLAT_F2_WIDTH        7                    // 
#define TDFI_PHY_RDLAT_WIDTH           7                    // 
#define TDFI_PHY_WRDATA_F0_OFFSET      8                    // 
#define TDFI_PHY_WRDATA_F0_WIDTH       3                    // 
#define TDFI_PHY_WRDATA_F1_OFFSET      8                    // 
#define TDFI_PHY_WRDATA_F1_WIDTH       3                    // 
#define TDFI_PHY_WRDATA_F2_OFFSET      8                    // 
#define TDFI_PHY_WRDATA_F2_WIDTH       3                    // 
#define TDFI_PHY_WRDATA_PIPE_DEPTH     8                    // 
#define TDFI_PHY_WRDATA_WIDTH          3                    // 
#define TDFI_PHY_WRLAT_F0_OFFSET       8                    // 
#define TDFI_PHY_WRLAT_F0_WIDTH        7                    // 
#define TDFI_PHY_WRLAT_F1_OFFSET       8                    // 
#define TDFI_PHY_WRLAT_F1_WIDTH        7                    // 
#define TDFI_PHY_WRLAT_F2_OFFSET       8                    // 
#define TDFI_PHY_WRLAT_F2_WIDTH        7                    // 
#define TDFI_PHY_WRLAT_WIDTH           7                    // 
#define TDFI_PHYMSTR_MAX_F0_OFFSET     0                    // 
#define TDFI_PHYMSTR_MAX_F0_WIDTH      32                   // 
#define TDFI_PHYMSTR_MAX_F1_OFFSET     0                    // 
#define TDFI_PHYMSTR_MAX_F1_WIDTH      32                   // 
#define TDFI_PHYMSTR_MAX_F2_OFFSET     0                    // 
#define TDFI_PHYMSTR_MAX_F2_WIDTH      32                   // 
#define TDFI_PHYMSTR_MAX_TYPE0_F0_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE0_F0_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE0_F1_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE0_F1_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE0_F2_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE0_F2_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE0_WIDTH   32                   // 
#define TDFI_PHYMSTR_MAX_TYPE1_F0_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE1_F0_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE1_F1_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE1_F1_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE1_F2_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE1_F2_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE1_WIDTH   32                   // 
#define TDFI_PHYMSTR_MAX_TYPE2_F0_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE2_F0_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE2_F1_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE2_F1_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE2_F2_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE2_F2_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE2_WIDTH   32                   // 
#define TDFI_PHYMSTR_MAX_TYPE3_F0_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE3_F0_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE3_F1_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE3_F1_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE3_F2_OFFSET 0                    // 
#define TDFI_PHYMSTR_MAX_TYPE3_F2_WIDTH 32                   // 
#define TDFI_PHYMSTR_MAX_TYPE3_WIDTH   32                   // 
#define TDFI_PHYMSTR_MAX_WIDTH         32                   // 
#define TDFI_PHYMSTR_RESP_F0_OFFSET    0                    // 
#define TDFI_PHYMSTR_RESP_F0_WIDTH     20                   // 
#define TDFI_PHYMSTR_RESP_F1_OFFSET    0                    // 
#define TDFI_PHYMSTR_RESP_F1_WIDTH     20                   // 
#define TDFI_PHYMSTR_RESP_F2_OFFSET    0                    // 
#define TDFI_PHYMSTR_RESP_F2_WIDTH     20                   // 
#define TDFI_PHYMSTR_RESP_WIDTH        20                   // 
#define TDFI_PHYUPD_RESP_F0_OFFSET     0                    // 
#define TDFI_PHYUPD_RESP_F0_WIDTH      23                   // 
#define TDFI_PHYUPD_RESP_F1_OFFSET     0                    // 
#define TDFI_PHYUPD_RESP_F1_WIDTH      23                   // 
#define TDFI_PHYUPD_RESP_F2_OFFSET     0                    // 
#define TDFI_PHYUPD_RESP_F2_WIDTH      23                   // 
#define TDFI_PHYUPD_RESP_WIDTH         23                   // 
#define TDFI_PHYUPD_TYPE0_F0_ADDR      859                  // 
#define TDFI_PHYUPD_TYPE0_F0_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE0_F0_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE0_F1_ADDR      868                  // 
#define TDFI_PHYUPD_TYPE0_F1_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE0_F1_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE0_F2_ADDR      877                  // 
#define TDFI_PHYUPD_TYPE0_F2_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE0_F2_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE0_WIDTH        32                   // 
#define TDFI_PHYUPD_TYPE1_F0_ADDR      860                  // 
#define TDFI_PHYUPD_TYPE1_F0_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE1_F0_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE1_F1_ADDR      869                  // 
#define TDFI_PHYUPD_TYPE1_F1_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE1_F1_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE1_F2_ADDR      878                  // 
#define TDFI_PHYUPD_TYPE1_F2_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE1_F2_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE1_WIDTH        32                   // 
#define TDFI_PHYUPD_TYPE2_F0_ADDR      861                  // 
#define TDFI_PHYUPD_TYPE2_F0_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE2_F0_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE2_F1_ADDR      870                  // 
#define TDFI_PHYUPD_TYPE2_F1_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE2_F1_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE2_F2_ADDR      879                  // 
#define TDFI_PHYUPD_TYPE2_F2_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE2_F2_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE2_WIDTH        32                   // 
#define TDFI_PHYUPD_TYPE3_F0_ADDR      862                  // 
#define TDFI_PHYUPD_TYPE3_F0_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE3_F0_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE3_F1_ADDR      871                  // 
#define TDFI_PHYUPD_TYPE3_F1_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE3_F1_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE3_F2_ADDR      880                  // 
#define TDFI_PHYUPD_TYPE3_F2_OFFSET    0                    // 
#define TDFI_PHYUPD_TYPE3_F2_WIDTH     32                   // 
#define TDFI_PHYUPD_TYPE3_WIDTH        32                   // 
#define TDFI_RDCSLAT_F0_OFFSET         16                   // 
#define TDFI_RDCSLAT_F0_WIDTH          7                    // 
#define TDFI_RDCSLAT_F1_OFFSET         16                   // 
#define TDFI_RDCSLAT_F1_WIDTH          7                    // 
#define TDFI_RDCSLAT_F2_OFFSET         16                   // 
#define TDFI_RDCSLAT_F2_WIDTH          7                    // 
#define TDFI_RDCSLAT_WIDTH             7                    // 
#define TDFI_RDDATA_EN_F0_OFFSET       24                   // 
#define TDFI_RDDATA_EN_F0_WIDTH        7                    // 
#define TDFI_RDDATA_EN_F1_OFFSET       24                   // 
#define TDFI_RDDATA_EN_F1_WIDTH        7                    // 
#define TDFI_RDDATA_EN_F2_OFFSET       24                   // 
#define TDFI_RDDATA_EN_F2_WIDTH        7                    // 
#define TDFI_RDDATA_EN_WIDTH           7                    // 
#define TDFI_WRCSLAT_F0_OFFSET         0                    // 
#define TDFI_WRCSLAT_F0_WIDTH          7                    // 
#define TDFI_WRCSLAT_F1_OFFSET         0                    // 
#define TDFI_WRCSLAT_F1_WIDTH          7                    // 
#define TDFI_WRCSLAT_F2_OFFSET         0                    // 
#define TDFI_WRCSLAT_F2_WIDTH          7                    // 
#define TDFI_WRCSLAT_WIDTH             7                    // 
#define TDFI_WRDATA_DELAY_OFFSET       8                    // 
#define TDFI_WRDATA_DELAY_WIDTH        8                    // 
#define TDQSCK_MAX_F0_OFFSET           8                    // 
#define TDQSCK_MAX_F0_WIDTH            4                    // 
#define TDQSCK_MAX_F1_OFFSET           24                   // 
#define TDQSCK_MAX_F1_WIDTH            4                    // 
#define TDQSCK_MAX_F2_OFFSET           8                    // 
#define TDQSCK_MAX_F2_WIDTH            4                    // 
#define TDQSCK_MAX_WIDTH               4                    // width of MAX value of TDQSCK
#define TDQSCK_MIN_F0_OFFSET           16                   // 
#define TDQSCK_MIN_F0_WIDTH            3                    // 
#define TDQSCK_MIN_F1_OFFSET           0                    // 
#define TDQSCK_MIN_F1_WIDTH            3                    // 
#define TDQSCK_MIN_F2_OFFSET           16                   // 
#define TDQSCK_MIN_F2_WIDTH            3                    // 
#define TDQSCK_MIN_WIDTH               3                    // width of MIN value of TDQSCK
#define TESCKE_F0_OFFSET               24                   // 
#define TESCKE_F0_WIDTH                3                    // 
#define TESCKE_F1_OFFSET               16                   // 
#define TESCKE_F1_WIDTH                3                    // 
#define TESCKE_F2_OFFSET               8                    // 
#define TESCKE_F2_WIDTH                3                    // 
#define TESCKE_WIDTH                   3                    // width of minimum delay from SRE command till CKE de-assertion value
#define TFAW_F0_OFFSET                 0                    // 
#define TFAW_F0_WIDTH                  9                    // 
#define TFAW_F1_OFFSET                 16                   // 
#define TFAW_F1_WIDTH                  9                    // 
#define TFAW_F2_OFFSET                 0                    // 
#define TFAW_F2_WIDTH                  9                    // 
#define TFAW_WIDTH                     9                    // width of Tfaw parameter for rolling bank activates.
#define TFC_F0_OFFSET                  0                    // 
#define TFC_F0_WIDTH                   10                   // 
#define TFC_F1_OFFSET                  0                    // 
#define TFC_F1_WIDTH                   10                   // 
#define TFC_F2_OFFSET                  0                    // 
#define TFC_F2_WIDTH                   10                   // 
#define TFC_WIDTH                      10                   // 
#define TICK_COUNT_WIDTH               3                    // 
#define TIMEOUT_TIMER_LOG_OFFSET       0                    // 
#define TIMEOUT_TIMER_LOG_WIDTH        8                    // 
#define TINIT3_F0_OFFSET               0                    // 
#define TINIT3_F0_WIDTH                24                   // 
#define TINIT3_F1_OFFSET               0                    // 
#define TINIT3_F1_WIDTH                24                   // 
#define TINIT3_F2_OFFSET               0                    // 
#define TINIT3_F2_WIDTH                24                   // 
#define TINIT3_WIDTH                   24                   // width of idle time clock stabilizes to request memory reset   
#define TINIT4_F0_OFFSET               0                    // 
#define TINIT4_F0_WIDTH                24                   // 
#define TINIT4_F1_OFFSET               0                    // 
#define TINIT4_F1_WIDTH                24                   // 
#define TINIT4_F2_OFFSET               0                    // 
#define TINIT4_F2_WIDTH                24                   // 
#define TINIT4_WIDTH                   24                   // width of idle time after memory reset is over to request initialization MRR   
#define TINIT5_F0_OFFSET               0                    // 
#define TINIT5_F0_WIDTH                24                   // 
#define TINIT5_F1_OFFSET               0                    // 
#define TINIT5_F1_WIDTH                24                   // 
#define TINIT5_F2_OFFSET               0                    // 
#define TINIT5_F2_WIDTH                24                   // 
#define TINIT5_WIDTH                   24                   // width of idle time after memory reset is over to request initialization MRW   
#define TINIT_F0_OFFSET                0                    // 
#define TINIT_F0_WIDTH                 24                   // 
#define TINIT_F1_OFFSET                0                    // 
#define TINIT_F1_WIDTH                 24                   // 
#define TINIT_F2_OFFSET                0                    // 
#define TINIT_F2_WIDTH                 24                   // 
#define TINIT_WIDTH                    24                   // width of idle time after system reset is over to stabilize clock   
#define TMOD_CNT_WIDTH                 8                    // 
#define TMOD_F0_OFFSET                 0                    // 
#define TMOD_F0_WIDTH                  8                    // 
#define TMOD_F1_OFFSET                 0                    // 
#define TMOD_F1_WIDTH                  8                    // 
#define TMOD_F2_OFFSET                 0                    // 
#define TMOD_F2_WIDTH                  8                    // 
#define TMOD_OPT_THRESHOLD_OFFSET      24                   // 
#define TMOD_OPT_THRESHOLD_WIDTH       3                    // 
#define TMOD_WIDTH                     8                    // 
#define TMP_2X4_TICK_MINUS_ADJ_OFFSET  24                   // 
#define TMP_2X4_TICK_MINUS_ADJ_WIDTH   4                    // 
#define TMP_2X4_TICK_PLUS_ADJ_OFFSET   16                   // 
#define TMP_2X4_TICK_PLUS_ADJ_WIDTH    4                    // 
#define TMP_4X2_TICK_MINUS_ADJ_OFFSET  24                   // 
#define TMP_4X2_TICK_MINUS_ADJ_WIDTH   4                    // 
#define TMP_4X2_TICK_PLUS_ADJ_OFFSET   16                   // 
#define TMP_4X2_TICK_PLUS_ADJ_WIDTH    4                    // 
#define TMP_NXN_TICK_MINUS_ADJ_OFFSET  8                    // 
#define TMP_NXN_TICK_MINUS_ADJ_WIDTH   4                    // 
#define TMP_NXN_TICK_PLUS_ADJ_OFFSET   0                    // 
#define TMP_NXN_TICK_PLUS_ADJ_WIDTH    4                    // 
#define TMRD_CNT_WIDTH                 8                    // 
#define TMRD_F0_OFFSET                 24                   // 
#define TMRD_F0_WIDTH                  8                    // 
#define TMRD_F1_OFFSET                 24                   // 
#define TMRD_F1_WIDTH                  8                    // 
#define TMRD_F2_OFFSET                 24                   // 
#define TMRD_F2_WIDTH                  8                    // 
#define TMRD_OPT_THRESHOLD_OFFSET      0                    // 
#define TMRD_OPT_THRESHOLD_WIDTH       3                    // 
#define TMRD_WIDTH                     8                    // width of mode register set cycle time bus
#define TMRR_CNT_WIDTH                 4                    // 
#define TMRR_OFFSET                    0                    // 
#define TMRR_WIDTH                     4                    // width of mode register read command timing delay
#define TMRRI_F0_OFFSET                0                    // 
#define TMRRI_F0_WIDTH                 8                    // 
#define TMRRI_F1_OFFSET                8                    // 
#define TMRRI_F1_WIDTH                 8                    // 
#define TMRRI_F2_OFFSET                16                   // 
#define TMRRI_F2_WIDTH                 8                    // 
#define TMRRI_WIDTH                    8                    // 
#define TMRWCKEL_F0_OFFSET             8                    // 
#define TMRWCKEL_F0_WIDTH              5                    // 
#define TMRWCKEL_F1_OFFSET             8                    // 
#define TMRWCKEL_F1_WIDTH              5                    // 
#define TMRWCKEL_F2_OFFSET             8                    // 
#define TMRWCKEL_F2_WIDTH              5                    // 
#define TMRWCKEL_WIDTH                 5                    // width of minimum time after MRW that CKE can deasserti value
#define TODTH_RD_F0_OFFSET             24                   // 
#define TODTH_RD_F0_WIDTH              4                    // 
#define TODTH_RD_F1_OFFSET             16                   // 
#define TODTH_RD_F1_WIDTH              4                    // 
#define TODTH_RD_F2_OFFSET             8                    // 
#define TODTH_RD_F2_WIDTH              4                    // 
#define TODTH_RD_WIDTH                 4                    // 
#define TODTH_WR_F0_OFFSET             16                   // 
#define TODTH_WR_F0_WIDTH              4                    // 
#define TODTH_WR_F1_OFFSET             8                    // 
#define TODTH_WR_F1_WIDTH              4                    // 
#define TODTH_WR_F2_OFFSET             0                    // 
#define TODTH_WR_F2_WIDTH              4                    // 
#define TODTH_WR_WIDTH                 4                    // 
#define TODTL_2CMD_F0_OFFSET           8                    // 
#define TODTL_2CMD_F0_WIDTH            8                    // 
#define TODTL_2CMD_F1_OFFSET           0                    // 
#define TODTL_2CMD_F1_WIDTH            8                    // 
#define TODTL_2CMD_F2_OFFSET           24                   // 
#define TODTL_2CMD_F2_WIDTH            8                    // 
#define TODTL_2CMD_WIDTH               8                    // 
#define TOSCO_F0_OFFSET                24                   // 
#define TOSCO_F0_WIDTH                 8                    // 
#define TOSCO_F1_OFFSET                0                    // 
#define TOSCO_F1_WIDTH                 8                    // 
#define TOSCO_F2_OFFSET                8                    // 
#define TOSCO_F2_WIDTH                 8                    // 
#define TOSCO_WIDTH                    8                    // 
#define TOTAL_BANK                     8                    // total number of banks per chip in the DIMM
#define TPBR2ACT_F0_0_OFFSET           0                    // 
#define TPBR2ACT_F0_0_WIDTH            8                    // 
#define TPBR2ACT_F0_1_OFFSET           0                    // 
#define TPBR2ACT_F0_1_WIDTH            8                    // 
#define TPBR2ACT_F1_0_OFFSET           0                    // 
#define TPBR2ACT_F1_0_WIDTH            8                    // 
#define TPBR2ACT_F1_1_OFFSET           0                    // 
#define TPBR2ACT_F1_1_WIDTH            8                    // 
#define TPBR2ACT_F2_0_OFFSET           0                    // 
#define TPBR2ACT_F2_0_WIDTH            8                    // 
#define TPBR2ACT_F2_1_OFFSET           0                    // 
#define TPBR2ACT_F2_1_WIDTH            8                    // 
#define TPBR2ACT_WIDTH                 8                    // width of REFpb to activate cmd in different bank of REFpb
#define TPBR2PBR_F0_0_OFFSET           8                    // 
#define TPBR2PBR_F0_0_WIDTH            10                   // 
#define TPBR2PBR_F0_1_OFFSET           8                    // 
#define TPBR2PBR_F0_1_WIDTH            10                   // 
#define TPBR2PBR_F1_0_OFFSET           8                    // 
#define TPBR2PBR_F1_0_WIDTH            10                   // 
#define TPBR2PBR_F1_1_OFFSET           8                    // 
#define TPBR2PBR_F1_1_WIDTH            10                   // 
#define TPBR2PBR_F2_0_OFFSET           8                    // 
#define TPBR2PBR_F2_0_WIDTH            10                   // 
#define TPBR2PBR_F2_1_OFFSET           8                    // 
#define TPBR2PBR_F2_1_WIDTH            10                   // 
#define TPBR2PBR_WIDTH                 10                   // width of REFpb to activate cmd in different bank of REFpb
#define TPDEX_F0_OFFSET                8                    // 
#define TPDEX_F0_WIDTH                 16                   // 
#define TPDEX_F1_OFFSET                0                    // 
#define TPDEX_F1_WIDTH                 16                   // 
#define TPDEX_F2_OFFSET                16                   // 
#define TPDEX_F2_WIDTH                 16                   // 
#define TPDEX_WIDTH                    16                   // width of power down exit time bus
#define TPPD_OFFSET                    16                   // 
#define TPPD_WIDTH                     3                    // 
#define TRANS_COUNT_DLY_WIDTH          9                    // 
#define TRANS_ID_WIDTH                 16                   // width of transaction ID of commands in the controller
#define TRAS_LOCKOUT_OFFSET            24                   // 
#define TRAS_LOCKOUT_WIDTH             1                    // width of tras lockout parameter
#define TRAS_MAX_F0_OFFSET             8                    // 
#define TRAS_MAX_F0_WIDTH              16                   // 
#define TRAS_MAX_F1_OFFSET             8                    // 
#define TRAS_MAX_F1_WIDTH              16                   // 
#define TRAS_MAX_F2_OFFSET             8                    // 
#define TRAS_MAX_F2_WIDTH              16                   // 
#define TRAS_MAX_WIDTH                 16                   // width of row active max time bus
#define TRAS_MIN_F0_OFFSET             0                    // 
#define TRAS_MIN_F0_WIDTH              9                    // 
#define TRAS_MIN_F1_OFFSET             16                   // 
#define TRAS_MIN_F1_WIDTH              9                    // 
#define TRAS_MIN_F2_OFFSET             0                    // 
#define TRAS_MIN_F2_WIDTH              9                    // 
#define TRAS_MIN_WIDTH                 9                    // width of row active min time bus
#define TRAS_OPT_THRESHOLD_OFFSET      16                   // 
#define TRAS_OPT_THRESHOLD_WIDTH       3                    // 
#define TRAS_TICK_MINUS_ADJ_OFFSET     8                    // 
#define TRAS_TICK_MINUS_ADJ_WIDTH      4                    // 
#define TRAS_TICK_PLUS_ADJ_OFFSET      0                    // 
#define TRAS_TICK_PLUS_ADJ_WIDTH       4                    // 
#define TRC_F0_OFFSET                  8                    // 
#define TRC_F0_WIDTH                   9                    // 
#define TRC_F1_OFFSET                  0                    // 
#define TRC_F1_WIDTH                   9                    // 
#define TRC_F2_OFFSET                  8                    // 
#define TRC_F2_WIDTH                   9                    // 
#define TRC_WIDTH                      9                    // width of row cycle time bus 
#define TRCD_F0_OFFSET                 16                   // 
#define TRCD_F0_WIDTH                  8                    // 
#define TRCD_F1_OFFSET                 0                    // 
#define TRCD_F1_WIDTH                  8                    // 
#define TRCD_F2_OFFSET                 16                   // 
#define TRCD_F2_WIDTH                  8                    // 
#define TRCD_WIDTH                     8                    // width of ras to cas delay time bus
#define TREF_ENABLE_ADDR               70                   // 
#define TREF_ENABLE_OFFSET             8                    // 
#define TREF_ENABLE_WIDTH              1                    // width of refresh interval timer enable
#define TREF_F0_OFFSET                 0                    // 
#define TREF_F0_WIDTH                  20                   // 
#define TREF_F1_OFFSET                 0                    // 
#define TREF_F1_WIDTH                  20                   // 
#define TREF_F2_OFFSET                 0                    // 
#define TREF_F2_WIDTH                  20                   // 
#define TREF_INTERVAL_OFFSET           0                    // 
#define TREF_INTERVAL_WIDTH            20                   // width of refresh interval counter
#define TREF_WIDTH                     20                   // width of refresh interval time bus
#define TREFI_PB_F0_0_OFFSET           16                   // 
#define TREFI_PB_F0_0_WIDTH            12                   // 
#define TREFI_PB_F0_1_OFFSET           16                   // 
#define TREFI_PB_F0_1_WIDTH            12                   // 
#define TREFI_PB_F1_0_OFFSET           16                   // 
#define TREFI_PB_F1_0_WIDTH            12                   // 
#define TREFI_PB_F1_1_OFFSET           16                   // 
#define TREFI_PB_F1_1_WIDTH            12                   // 
#define TREFI_PB_F2_0_OFFSET           16                   // 
#define TREFI_PB_F2_0_WIDTH            12                   // 
#define TREFI_PB_F2_1_OFFSET           16                   // 
#define TREFI_PB_F2_1_WIDTH            12                   // 
#define TREFI_PB_WIDTH                 12                   // width of per bank refresh interval time bus
#define TRFC_F0_OFFSET                 0                    // 
#define TRFC_F0_WIDTH                  10                   // 
#define TRFC_F1_OFFSET                 0                    // 
#define TRFC_F1_WIDTH                  10                   // 
#define TRFC_F2_OFFSET                 0                    // 
#define TRFC_F2_WIDTH                  10                   // 
#define TRFC_OPT_THRESHOLD_OFFSET      16                   // 
#define TRFC_OPT_THRESHOLD_WIDTH       3                    // 
#define TRFC_PB_F0_0_OFFSET            0                    // 
#define TRFC_PB_F0_0_WIDTH             10                   // 
#define TRFC_PB_F0_1_OFFSET            0                    // 
#define TRFC_PB_F0_1_WIDTH             10                   // 
#define TRFC_PB_F1_0_OFFSET            0                    // 
#define TRFC_PB_F1_0_WIDTH             10                   // 
#define TRFC_PB_F1_1_OFFSET            0                    // 
#define TRFC_PB_F1_1_WIDTH             10                   // 
#define TRFC_PB_F2_0_OFFSET            0                    // 
#define TRFC_PB_F2_0_WIDTH             10                   // 
#define TRFC_PB_F2_1_OFFSET            0                    // 
#define TRFC_PB_F2_1_WIDTH             10                   // 
#define TRFC_PB_WIDTH                  10                   // width of Refresh row cylce time bus
#define TRFC_TICK_MINUS_ADJ_OFFSET     8                    // 
#define TRFC_TICK_MINUS_ADJ_WIDTH      4                    // 
#define TRFC_TICK_PLUS_ADJ_OFFSET      0                    // 
#define TRFC_TICK_PLUS_ADJ_WIDTH       4                    // 
#define TRFC_WIDTH                     10                   // width of Refresh row cylce time bus
#define TRFM_WIDTH                     10                   // width of RFM row cylce time bus
#define TRP_AB_0_WIDTH                 8                    // 
#define TRP_AB_1_WIDTH                 8                    // 
#define TRP_AB_F0_0_OFFSET             0                    // 
#define TRP_AB_F0_0_WIDTH              8                    // 
#define TRP_AB_F0_1_OFFSET             24                   // 
#define TRP_AB_F0_1_WIDTH              8                    // 
#define TRP_AB_F1_0_OFFSET             8                    // 
#define TRP_AB_F1_0_WIDTH              8                    // 
#define TRP_AB_F1_1_OFFSET             0                    // 
#define TRP_AB_F1_1_WIDTH              8                    // 
#define TRP_AB_F2_0_OFFSET             16                   // 
#define TRP_AB_F2_0_WIDTH              8                    // 
#define TRP_AB_F2_1_OFFSET             8                    // 
#define TRP_AB_F2_1_WIDTH              8                    // 
#define TRP_AB_WIDTH                   8                    // width of row precharge all time bus
#define TRP_F0_OFFSET                  24                   // 
#define TRP_F0_WIDTH                   8                    // 
#define TRP_F1_OFFSET                  8                    // 
#define TRP_F1_WIDTH                   8                    // 
#define TRP_F2_OFFSET                  24                   // 
#define TRP_F2_WIDTH                   8                    // 
#define TRP_OPT_THRESHOLD_OFFSET       8                    // 
#define TRP_OPT_THRESHOLD_WIDTH        3                    // 
#define TRP_TICK_MINUS_ADJ_OFFSET      24                   // 
#define TRP_TICK_MINUS_ADJ_WIDTH       4                    // 
#define TRP_TICK_PLUS_ADJ_OFFSET       16                   // 
#define TRP_TICK_PLUS_ADJ_WIDTH        4                    // 
#define TRP_WIDTH                      8                    // width of row precharge time bus
#define TRRD_F0_OFFSET                 0                    // 
#define TRRD_F0_WIDTH                  8                    // 
#define TRRD_F1_OFFSET                 16                   // 
#define TRRD_F1_WIDTH                  8                    // 
#define TRRD_F2_OFFSET                 0                    // 
#define TRRD_F2_WIDTH                  8                    // 
#define TRRD_WIDTH                     8                    // width of row active to row active delay time bus
#define TRST_PWRON_OFFSET              0                    // 
#define TRST_PWRON_WIDTH               32                   // 
#define TRTP_F0_OFFSET                 16                   // 
#define TRTP_F0_WIDTH                  8                    // 
#define TRTP_F1_OFFSET                 16                   // 
#define TRTP_F1_WIDTH                  8                    // 
#define TRTP_F2_OFFSET                 16                   // 
#define TRTP_F2_WIDTH                  8                    // 
#define TRTP_MAX_LAT_WIDTH             9                    // 
#define TRTP_WIDTH                     8                    // width of read to precharge time
#define TSCALE                         100                  // ticks / ns (determined by timescale)
#define TSR_F0_OFFSET                  16                   // 
#define TSR_F0_WIDTH                   8                    // 
#define TSR_F1_OFFSET                  8                    // 
#define TSR_F1_WIDTH                   8                    // 
#define TSR_F2_OFFSET                  0                    // 
#define TSR_F2_WIDTH                   8                    // 
#define TSR_WIDTH                      8                    // width of minimum time to be in self-refresh value
#define TSREF2PHYMSTR_OFFSET           0                    // 
#define TSREF2PHYMSTR_WIDTH            6                    // 
#define TVRCG_DISABLE_F0_OFFSET        16                   // 
#define TVRCG_DISABLE_F0_WIDTH         10                   // 
#define TVRCG_DISABLE_F1_OFFSET        16                   // 
#define TVRCG_DISABLE_F1_WIDTH         10                   // 
#define TVRCG_DISABLE_F2_OFFSET        16                   // 
#define TVRCG_DISABLE_F2_WIDTH         10                   // 
#define TVRCG_DISABLE_WIDTH            10                   // 
#define TVRCG_ENABLE_F0_OFFSET         0                    // 
#define TVRCG_ENABLE_F0_WIDTH          10                   // 
#define TVRCG_ENABLE_F1_OFFSET         0                    // 
#define TVRCG_ENABLE_F1_WIDTH          10                   // 
#define TVRCG_ENABLE_F2_OFFSET         0                    // 
#define TVRCG_ENABLE_F2_WIDTH          10                   // 
#define TVRCG_ENABLE_WIDTH             10                   // 
#define TVRCG_WIDTH                    10                   // 
#define TVREF_LONG_F0_OFFSET           0                    // 
#define TVREF_LONG_F0_WIDTH            20                   // 
#define TVREF_LONG_F1_OFFSET           0                    // 
#define TVREF_LONG_F1_WIDTH            20                   // 
#define TVREF_LONG_F2_OFFSET           0                    // 
#define TVREF_LONG_F2_WIDTH            20                   // 
#define TVREF_LONG_WIDTH               20                   // 
#define TWR_AP_MAX_LAT_WIDTH           9                    // 
#define TWR_F0_OFFSET                  24                   // 
#define TWR_F0_WIDTH                   8                    // 
#define TWR_F1_OFFSET                  8                    // 
#define TWR_F1_WIDTH                   8                    // 
#define TWR_F2_OFFSET                  24                   // 
#define TWR_F2_WIDTH                   8                    // 
#define TWR_MAX_LAT_WIDTH              9                    // 
#define TWR_TICK_MINUS_ADJ_OFFSET      8                    // 
#define TWR_TICK_MINUS_ADJ_WIDTH       4                    // 
#define TWR_TICK_PLUS_ADJ_OFFSET       0                    // 
#define TWR_TICK_PLUS_ADJ_WIDTH        4                    // 
#define TWR_WIDTH                      8                    // width of precharge holdoff after write
#define TWTR_AP_WIDTH                  8                    // 
#define TWTR_F0_OFFSET                 16                   // 
#define TWTR_F0_WIDTH                  6                    // 
#define TWTR_F1_OFFSET                 0                    // 
#define TWTR_F1_WIDTH                  6                    // 
#define TWTR_F2_OFFSET                 16                   // 
#define TWTR_F2_WIDTH                  6                    // 
#define TWTR_WIDTH                     6                    // 
#define TXSNR_F0_OFFSET                0                    // 
#define TXSNR_F0_WIDTH                 16                   // 
#define TXSNR_F1_OFFSET                0                    // 
#define TXSNR_F1_WIDTH                 16                   // 
#define TXSNR_F2_OFFSET                0                    // 
#define TXSNR_F2_WIDTH                 16                   // 
#define TXSNR_WIDTH                    16                   // width of time between exit self refresh and non-read cmd
#define TXSR_F0_OFFSET                 8                    // 
#define TXSR_F0_WIDTH                  16                   // 
#define TXSR_F1_OFFSET                 16                   // 
#define TXSR_F1_WIDTH                  16                   // 
#define TXSR_F2_OFFSET                 16                   // 
#define TXSR_F2_WIDTH                  16                   // 
#define TXSR_WIDTH                     16                   // width of exit self refresh time bus
#define TYPE_WIDTH                     7                    // Width of the command type field includes all TYPE bits
#define TZQCAL_F0_OFFSET               0                    // 
#define TZQCAL_F0_WIDTH                12                   // 
#define TZQCAL_F1_OFFSET               16                   // 
#define TZQCAL_F1_WIDTH                12                   // 
#define TZQCAL_F2_OFFSET               0                    // 
#define TZQCAL_F2_WIDTH                12                   // 
#define TZQCAL_WIDTH                   12                   // 
#define TZQCKE_F0_OFFSET               16                   // 
#define TZQCKE_F0_WIDTH                4                    // 
#define TZQCKE_F1_OFFSET               16                   // 
#define TZQCKE_F1_WIDTH                4                    // 
#define TZQCKE_F2_OFFSET               16                   // 
#define TZQCKE_F2_WIDTH                4                    // 
#define TZQCKE_WIDTH                   4                    // width of minimum time after ZQ cal that CKE can deasserti value
#define TZQLAT_F0_OFFSET               16                   // 
#define TZQLAT_F0_WIDTH                7                    // 
#define TZQLAT_F1_OFFSET               0                    // 
#define TZQLAT_F1_WIDTH                7                    // 
#define TZQLAT_F2_OFFSET               16                   // 
#define TZQLAT_F2_WIDTH                7                    // 
#define TZQLAT_WIDTH                   7                    // 
#define UPD_CTRL_TIMEOUT_BIT           5                    // 
#define UPD_CTRLUPD_HIGH_THRESHOLD_F0_ADDR 113                  // 
#define UPD_CTRLUPD_HIGH_THRESHOLD_F0_OFFSET 0                    // 
#define UPD_CTRLUPD_HIGH_THRESHOLD_F0_WIDTH 16                   // 
#define UPD_CTRLUPD_HIGH_THRESHOLD_F1_ADDR 115                  // 
#define UPD_CTRLUPD_HIGH_THRESHOLD_F1_OFFSET 16                   // 
#define UPD_CTRLUPD_HIGH_THRESHOLD_F1_WIDTH 16                   // 
#define UPD_CTRLUPD_HIGH_THRESHOLD_F2_ADDR 118                  // 
#define UPD_CTRLUPD_HIGH_THRESHOLD_F2_OFFSET 0                    // 
#define UPD_CTRLUPD_HIGH_THRESHOLD_F2_WIDTH 16                   // 
#define UPD_CTRLUPD_HIGH_THRESHOLD_WIDTH 16                   // 
#define UPD_CTRLUPD_NORM_THRESHOLD_F0_ADDR 112                  // 
#define UPD_CTRLUPD_NORM_THRESHOLD_F0_OFFSET 16                   // 
#define UPD_CTRLUPD_NORM_THRESHOLD_F0_WIDTH 16                   // 
#define UPD_CTRLUPD_NORM_THRESHOLD_F1_ADDR 115                  // 
#define UPD_CTRLUPD_NORM_THRESHOLD_F1_OFFSET 0                    // 
#define UPD_CTRLUPD_NORM_THRESHOLD_F1_WIDTH 16                   // 
#define UPD_CTRLUPD_NORM_THRESHOLD_F2_ADDR 117                  // 
#define UPD_CTRLUPD_NORM_THRESHOLD_F2_OFFSET 16                   // 
#define UPD_CTRLUPD_NORM_THRESHOLD_F2_WIDTH 16                   // 
#define UPD_CTRLUPD_NORM_THRESHOLD_WIDTH 16                   // 
#define UPD_CTRLUPD_SW_PROMOTE_THRESHOLD_F0_OFFSET 0                    // 
#define UPD_CTRLUPD_SW_PROMOTE_THRESHOLD_F0_WIDTH 16                   // 
#define UPD_CTRLUPD_SW_PROMOTE_THRESHOLD_F1_OFFSET 16                   // 
#define UPD_CTRLUPD_SW_PROMOTE_THRESHOLD_F1_WIDTH 16                   // 
#define UPD_CTRLUPD_SW_PROMOTE_THRESHOLD_F2_OFFSET 0                    // 
#define UPD_CTRLUPD_SW_PROMOTE_THRESHOLD_F2_WIDTH 16                   // 
#define UPD_CTRLUPD_SW_PROMOTE_THRESHOLD_WIDTH 16                   // 
#define UPD_CTRLUPD_TIMEOUT_F0_OFFSET  16                   // 
#define UPD_CTRLUPD_TIMEOUT_F0_WIDTH   16                   // 
#define UPD_CTRLUPD_TIMEOUT_F1_OFFSET  0                    // 
#define UPD_CTRLUPD_TIMEOUT_F1_WIDTH   16                   // 
#define UPD_CTRLUPD_TIMEOUT_F2_OFFSET  16                   // 
#define UPD_CTRLUPD_TIMEOUT_F2_WIDTH   16                   // 
#define UPD_CTRLUPD_TIMEOUT_WIDTH      16                   // 
#define UPD_PHYUPD_DFI_PROMOTE_THRESHOLD_F0_OFFSET 16                   // 
#define UPD_PHYUPD_DFI_PROMOTE_THRESHOLD_F0_WIDTH 16                   // 
#define UPD_PHYUPD_DFI_PROMOTE_THRESHOLD_F1_OFFSET 0                    // 
#define UPD_PHYUPD_DFI_PROMOTE_THRESHOLD_F1_WIDTH 16                   // 
#define UPD_PHYUPD_DFI_PROMOTE_THRESHOLD_F2_OFFSET 16                   // 
#define UPD_PHYUPD_DFI_PROMOTE_THRESHOLD_F2_WIDTH 16                   // 
#define UPD_PHYUPD_DFI_PROMOTE_THRESHOLD_WIDTH 16                   // 
#define UPDATE_ERROR_STATUS_OFFSET     24                   // 
#define UPDATE_ERROR_STATUS_WIDTH      7                    // 
#define W2R_DIFFCS_DLY_F0_OFFSET       8                    // 
#define W2R_DIFFCS_DLY_F0_WIDTH        5                    // 
#define W2R_DIFFCS_DLY_F1_OFFSET       8                    // 
#define W2R_DIFFCS_DLY_F1_WIDTH        5                    // 
#define W2R_DIFFCS_DLY_F2_OFFSET       8                    // 
#define W2R_DIFFCS_DLY_F2_WIDTH        5                    // 
#define W2R_DIFFCS_DLY_WIDTH           5                    // width of additional write to read delay to different cs
#define W2R_SAMECS_DLY_OFFSET          24                   // 
#define W2R_SAMECS_DLY_WIDTH           5                    // width of additional write to read delay to same cs
#define W2R_SPLIT_EN_OFFSET            8                    // 
#define W2R_SPLIT_EN_WIDTH             1                    // 
#define W2W_DIFFCS_DLY_F0_OFFSET       16                   // 
#define W2W_DIFFCS_DLY_F0_WIDTH        5                    // 
#define W2W_DIFFCS_DLY_F1_OFFSET       16                   // 
#define W2W_DIFFCS_DLY_F1_WIDTH        5                    // 
#define W2W_DIFFCS_DLY_F2_OFFSET       16                   // 
#define W2W_DIFFCS_DLY_F2_WIDTH        5                    // 
#define W2W_DIFFCS_DLY_WIDTH           5                    // width of additional write to write delay to different cs
#define W2W_SAMECS_DLY_OFFSET          0                    // 
#define W2W_SAMECS_DLY_WIDTH           5                    // width of additional write to write delay to same cs
#define WCKI_OSC_TIMER_DATA_WIDTH      8                    // 
#define WCKO_OSC_TIMER_DATA_WIDTH      8                    // 
#define WFLUSH_BIT                     4                    // 
#define WL_TICK_MINUS_ADJ_OFFSET       8                    // 
#define WL_TICK_MINUS_ADJ_WIDTH        4                    // 
#define WL_TICK_PLUS_ADJ_OFFSET        0                    // 
#define WL_TICK_PLUS_ADJ_WIDTH         4                    // 
#define WR_DBI_EN_OFFSET               16                   // 
#define WR_DBI_EN_WIDTH                1                    // 
#define WR_ORDER_REQ_ADDR              326                  // 
#define WR_ORDER_REQ_OFFSET            16                   // 
#define WR_ORDER_REQ_WIDTH             2                    // 
#define WR_PREAMBLE_LEN_F0_OFFSET      0                    // 
#define WR_PREAMBLE_LEN_F0_WIDTH       8                    // 
#define WR_PREAMBLE_LEN_F1_OFFSET      16                   // 
#define WR_PREAMBLE_LEN_F1_WIDTH       8                    // 
#define WR_PREAMBLE_LEN_F2_OFFSET      0                    // 
#define WR_PREAMBLE_LEN_F2_WIDTH       8                    // 
#define WR_PREAMBLE_LEN_WIDTH          8                    // 
#define WR_TAG_WIDTH                   6                    // 
#define WR_TO_ODTH_F0_OFFSET           16                   // 
#define WR_TO_ODTH_F0_WIDTH            6                    // 
#define WR_TO_ODTH_F1_OFFSET           24                   // 
#define WR_TO_ODTH_F1_WIDTH            6                    // 
#define WR_TO_ODTH_F2_OFFSET           0                    // 
#define WR_TO_ODTH_F2_WIDTH            6                    // 
#define WR_TO_ODTH_WIDTH               6                    // 
#define WRAP_BIT                       2                    // 
#define WRCMD_LAT_MAX                  64                   // 
#define WRCMD_LAT_WIDTH                6                    // 
#define WRCSLAT_MAX                    127                  // 
#define WRITE_ADDR_CHAN_PARITY_EN_OFFSET 8                    // 
#define WRITE_ADDR_CHAN_PARITY_EN_WIDTH 1                    // 
#define WRITE_ADDR_CHAN_PARITY_INVERT_OFFSET 16                   // 
#define WRITE_ADDR_CHAN_PARITY_INVERT_WIDTH 1                    // 
#define WRITE_ADDR_CHAN_TRIGGER_PARITY_EN_OFFSET 16                   // 
#define WRITE_ADDR_CHAN_TRIGGER_PARITY_EN_WIDTH 1                    // 
#define WRITE_DATA_CHAN_PARITY_EN_OFFSET 16                   // 
#define WRITE_DATA_CHAN_PARITY_EN_WIDTH 2                    // 
#define WRITE_DATA_CHAN_TRIGGER_PARITY_EN_OFFSET 24                   // 
#define WRITE_DATA_CHAN_TRIGGER_PARITY_EN_WIDTH 1                    // 
#define WRITE_DATA_FIFO_DEPTH_OFFSET   24                   // 
#define WRITE_DATA_FIFO_DEPTH_WIDTH    8                    // 
#define WRITE_DATA_FIFO_PTR_WIDTH_OFFSET 0                    // 
#define WRITE_DATA_FIFO_PTR_WIDTH_WIDTH 8                    // 
#define WRITE_FIFO_STATUS_WIDTH        8                    // Width of write fifo status buffers
#define WRITE_MODEREG_ADDR             186                  // 
#define WRITE_MODEREG_OFFSET           0                    // 
#define WRITE_MODEREG_WIDTH            27                   // 
#define WRITE_PARITY_ERR_BRESP_EN_OFFSET 0                    // 
#define WRITE_PARITY_ERR_BRESP_EN_WIDTH 1                    // 
#define WRITE_PARITY_ERR_CORRUPT_ECC_EN_OFFSET 0                    // 
#define WRITE_PARITY_ERR_CORRUPT_ECC_EN_WIDTH 1                    // 
#define WRITE_RESP_CHAN_CORRUPT_PARITY_EN_OFFSET 0                    // 
#define WRITE_RESP_CHAN_CORRUPT_PARITY_EN_WIDTH 1                    // 
#define WRITE_RESP_CHAN_PARITY_EN_OFFSET 24                   // 
#define WRITE_RESP_CHAN_PARITY_EN_WIDTH 1                    // 
#define WRITEINTERP_OFFSET             8                    // 
#define WRITEINTERP_WIDTH              1                    // 
#define WRLAT_ADJ_MAX                  128                  // 
#define WRLAT_ADJ_WIDTH                7                    // 
#define WRLAT_F0_OFFSET                8                    // 
#define WRLAT_F0_WIDTH                 7                    // 
#define WRLAT_F1_OFFSET                24                   // 
#define WRLAT_F1_WIDTH                 7                    // 
#define WRLAT_F2_OFFSET                8                    // 
#define WRLAT_F2_WIDTH                 7                    // 
#define WRLAT_WIDTH                    7                    // 
#define WRRESP_REQ_P                   243                  // Start position of the flag indicating the command requires a write response when complete.
#define XLATE_RATIO_WIDTH              1                    // 
#define XOR_CHECK_BITS_OFFSET          8                    // 
#define XOR_CHECK_BITS_WIDTH           16                   // 
#define ZQ_ARB_REQ_WIDTH               4                    // 
#define ZQ_CAL_LATCH_MAP_0_OFFSET      24                   // 
#define ZQ_CAL_LATCH_MAP_0_WIDTH       2                    // 
#define ZQ_CAL_LATCH_MAP_1_OFFSET      8                    // 
#define ZQ_CAL_LATCH_MAP_1_WIDTH       2                    // 
#define ZQ_CAL_START_MAP_0_OFFSET      16                   // 
#define ZQ_CAL_START_MAP_0_WIDTH       2                    // 
#define ZQ_CAL_START_MAP_1_OFFSET      0                    // 
#define ZQ_CAL_START_MAP_1_WIDTH       2                    // 
#define ZQ_CALINIT_CS_CL_IN_SREF_BIT   0                    // 
#define ZQ_CALLATCH_HIGH_THRESHOLD_F0_OFFSET 16                   // 
#define ZQ_CALLATCH_HIGH_THRESHOLD_F0_WIDTH 16                   // 
#define ZQ_CALLATCH_HIGH_THRESHOLD_F1_OFFSET 0                    // 
#define ZQ_CALLATCH_HIGH_THRESHOLD_F1_WIDTH 16                   // 
#define ZQ_CALLATCH_HIGH_THRESHOLD_F2_OFFSET 16                   // 
#define ZQ_CALLATCH_HIGH_THRESHOLD_F2_WIDTH 16                   // 
#define ZQ_CALLATCH_HIGH_THRESHOLD_WIDTH 16                   // 
#define ZQ_CALLATCH_IN_SREF_BIT        2                    // 
#define ZQ_CALLATCH_TIMEOUT_BIT        2                    // 
#define ZQ_CALLATCH_TIMEOUT_F0_OFFSET  16                   // 
#define ZQ_CALLATCH_TIMEOUT_F0_WIDTH   16                   // 
#define ZQ_CALLATCH_TIMEOUT_F1_OFFSET  0                    // 
#define ZQ_CALLATCH_TIMEOUT_F1_WIDTH   16                   // 
#define ZQ_CALLATCH_TIMEOUT_F2_OFFSET  16                   // 
#define ZQ_CALLATCH_TIMEOUT_F2_WIDTH   16                   // 
#define ZQ_CALLATCH_TIMEOUT_WIDTH      16                   // 
#define ZQ_CALSTART_HIGH_THRESHOLD_F0_OFFSET 0                    // 
#define ZQ_CALSTART_HIGH_THRESHOLD_F0_WIDTH 16                   // 
#define ZQ_CALSTART_HIGH_THRESHOLD_F1_OFFSET 16                   // 
#define ZQ_CALSTART_HIGH_THRESHOLD_F1_WIDTH 16                   // 
#define ZQ_CALSTART_HIGH_THRESHOLD_F2_OFFSET 0                    // 
#define ZQ_CALSTART_HIGH_THRESHOLD_F2_WIDTH 16                   // 
#define ZQ_CALSTART_HIGH_THRESHOLD_WIDTH 16                   // 
#define ZQ_CALSTART_IN_SREF_BIT        1                    // 
#define ZQ_CALSTART_NORM_THRESHOLD_F0_OFFSET 8                    // 
#define ZQ_CALSTART_NORM_THRESHOLD_F0_WIDTH 16                   // 
#define ZQ_CALSTART_NORM_THRESHOLD_F1_OFFSET 0                    // 
#define ZQ_CALSTART_NORM_THRESHOLD_F1_WIDTH 16                   // 
#define ZQ_CALSTART_NORM_THRESHOLD_F2_OFFSET 16                   // 
#define ZQ_CALSTART_NORM_THRESHOLD_F2_WIDTH 16                   // 
#define ZQ_CALSTART_NORM_THRESHOLD_WIDTH 16                   // 
#define ZQ_CALSTART_TIMEOUT_BIT        1                    // 
#define ZQ_CALSTART_TIMEOUT_F0_OFFSET  0                    // 
#define ZQ_CALSTART_TIMEOUT_F0_WIDTH   16                   // 
#define ZQ_CALSTART_TIMEOUT_F1_OFFSET  16                   // 
#define ZQ_CALSTART_TIMEOUT_F1_WIDTH   16                   // 
#define ZQ_CALSTART_TIMEOUT_F2_OFFSET  0                    // 
#define ZQ_CALSTART_TIMEOUT_F2_WIDTH   16                   // 
#define ZQ_CALSTART_TIMEOUT_WIDTH      16                   // 
#define ZQ_CMD_REQ_WIDTH               4                    // 
#define ZQ_CS_HIGH_THRESHOLD_F0_OFFSET 16                   // 
#define ZQ_CS_HIGH_THRESHOLD_F0_WIDTH  16                   // 
#define ZQ_CS_HIGH_THRESHOLD_F1_OFFSET 0                    // 
#define ZQ_CS_HIGH_THRESHOLD_F1_WIDTH  16                   // 
#define ZQ_CS_HIGH_THRESHOLD_F2_OFFSET 16                   // 
#define ZQ_CS_HIGH_THRESHOLD_F2_WIDTH  16                   // 
#define ZQ_CS_HIGH_THRESHOLD_WIDTH     16                   // 
#define ZQ_CS_NORM_THRESHOLD_F0_OFFSET 0                    // 
#define ZQ_CS_NORM_THRESHOLD_F0_WIDTH  16                   // 
#define ZQ_CS_NORM_THRESHOLD_F1_OFFSET 16                   // 
#define ZQ_CS_NORM_THRESHOLD_F1_WIDTH  16                   // 
#define ZQ_CS_NORM_THRESHOLD_F2_OFFSET 0                    // 
#define ZQ_CS_NORM_THRESHOLD_F2_WIDTH  16                   // 
#define ZQ_CS_NORM_THRESHOLD_WIDTH     16                   // 
#define ZQ_CS_TIMEOUT_BIT              0                    // 
#define ZQ_CS_TIMEOUT_F0_OFFSET        0                    // 
#define ZQ_CS_TIMEOUT_F0_WIDTH         16                   // 
#define ZQ_CS_TIMEOUT_F1_OFFSET        16                   // 
#define ZQ_CS_TIMEOUT_F1_WIDTH         16                   // 
#define ZQ_CS_TIMEOUT_F2_OFFSET        0                    // 
#define ZQ_CS_TIMEOUT_F2_WIDTH         16                   // 
#define ZQ_CS_TIMEOUT_WIDTH            16                   // 
#define ZQ_PROMOTE_THRESHOLD_F0_OFFSET 16                   // 
#define ZQ_PROMOTE_THRESHOLD_F0_WIDTH  16                   // 
#define ZQ_PROMOTE_THRESHOLD_F1_OFFSET 0                    // 
#define ZQ_PROMOTE_THRESHOLD_F1_WIDTH  16                   // 
#define ZQ_PROMOTE_THRESHOLD_F2_OFFSET 16                   // 
#define ZQ_PROMOTE_THRESHOLD_F2_WIDTH  16                   // 
#define ZQ_PROMOTE_THRESHOLD_WIDTH     16                   // 
#define ZQ_REQ_PENDING_OFFSET          8                    // 
#define ZQ_REQ_PENDING_WIDTH           1                    // 
#define ZQ_REQ_WIDTH                   4                    // 
#define ZQ_STATUS_BIT                  -1                   // 
#define ZQ_STATUS_LOG_OFFSET           0                    // 
#define ZQ_STATUS_LOG_WIDTH            3                    // 
#define ZQ_STATUS_WIDTH                2                    // 
#define ZQ_SW_REQ_START_LATCH_MAP_OFFSET 24                   // 
#define ZQ_SW_REQ_START_LATCH_MAP_WIDTH 2                    // 
#define ZQCL_F0_OFFSET                 0                    // 
#define ZQCL_F0_WIDTH                  12                   // 
#define ZQCL_F1_OFFSET                 16                   // 
#define ZQCL_F1_WIDTH                  12                   // 
#define ZQCL_F2_OFFSET                 0                    // 
#define ZQCL_F2_WIDTH                  12                   // 
#define ZQCL_WIDTH                     12                   // 
#define ZQCS_F0_OFFSET                 16                   // 
#define ZQCS_F0_WIDTH                  12                   // 
#define ZQCS_F1_OFFSET                 0                    // 
#define ZQCS_F1_WIDTH                  12                   // 
#define ZQCS_F2_OFFSET                 16                   // 
#define ZQCS_F2_WIDTH                  12                   // 
#define ZQCS_OPT_THRESHOLD_OFFSET      0                    // 
#define ZQCS_OPT_THRESHOLD_WIDTH       3                    // 
#define ZQCS_ROTATE_OFFSET             8                    // 
#define ZQCS_ROTATE_WIDTH              1                    // 
#define ZQINIT_F0_OFFSET               8                    // 
#define ZQINIT_F0_WIDTH                12                   // 
#define ZQINIT_F1_OFFSET               0                    // 
#define ZQINIT_F1_WIDTH                12                   // 
#define ZQINIT_F2_OFFSET               8                    // 
#define ZQINIT_F2_WIDTH                12                   // 
#define ZQINIT_WIDTH                   12                   // 
#define ZQRESET_F0_OFFSET              16                   // 
#define ZQRESET_F0_WIDTH               12                   // 
#define ZQRESET_F1_OFFSET              0                    // 
#define ZQRESET_F1_WIDTH               12                   // 
#define ZQRESET_F2_OFFSET              16                   // 
#define ZQRESET_F2_WIDTH               12                   // 
#define ZQRESET_WIDTH                  12                   // 


// HIERARCHY VARIABLES -- edit to suit your environment

//#define TIER_ARTIMIP  memcd_test.asic.ddr_subsystem                             // Hierarchy prefix to 'ArtiMIP' module
//#define TIER_ASIC     memcd_test.asic                                           // Hierarchy prefix to 'asic' module
//#define TIER_CTLR     memcd_test.asic.ddr_subsystem.cadence_mc_controller       // Hierarchy prefix to 'controller' module
//#define TIER_MEM      memcd_test                                                // Hierarchy prefix to memory instances
//#define TIER_MEMCD    memcd_test.asic.ddr_subsystem.cadence_mc_controller.memcd  // Hierarchy prefix to 'memcd' module
//#define TIER_TOP      memcd_test                                                // Hierarchy prefix to top-level testbench module
